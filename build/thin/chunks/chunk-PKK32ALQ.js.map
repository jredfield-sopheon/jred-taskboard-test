{
  "version": 3,
  "sources": ["../../../../Core/lib/Core/widget/Splitter.js"],
  "sourcesContent": ["import Widget from './Widget.js';\nimport DomHelper from '../helper/DomHelper.js';\nimport EventHelper from '../helper/EventHelper.js';\nimport BrowserHelper from '../helper/BrowserHelper.js';\n/**\n * @module Core/widget/Splitter\n */\nconst\n    classesHV = ['b-horizontal', 'b-vertical'],\n    hasFlex = el => DomHelper.getStyleValue(el.parentElement, 'display') === 'flex' &&\n        (parseInt(DomHelper.getStyleValue(el, 'flex-basis'), 10) || parseInt(DomHelper.getStyleValue(el, 'flex-grow'), 10)),\n    verticality = {\n        horizontal : false,\n        vertical   : true\n    };\n/**\n * A simple splitter widget that resizes the elements next to it or above/below it depending on orientation.\n *\n * {@inlineexample Core/widget/Splitter.js}\n *\n * @extends Core/widget/Widget\n * @classtype splitter\n * @widget\n */\nexport default class Splitter extends Widget {\n    //region Config\n    static $name = 'Splitter';\n    static type = 'splitter';\n    static get configurable() {\n        return {\n            /**\n             * Fired when a drag starts\n             * @event dragStart\n             * @param {Core.widget.Splitter} source The Splitter\n             * @param {MouseEvent|TouchEvent} event The DOM event\n             */\n            /**\n             * Fired while dragging\n             * @event drag\n             * @param {Core.widget.Splitter} source The Splitter\n             * @param {MouseEvent|TouchEvent} event The DOM event\n             */\n            /**\n             * Fired after a drop\n             * @event drop\n             * @param {Core.widget.Splitter} source The Splitter\n             * @param {MouseEvent|TouchEvent} event The DOM event\n             */\n            /**\n             * Splitter orientation, see {@link #config-orientation}. When set to 'auto' then actually used orientation\n             * can be retrieved using {@link #property-currentOrientation}.\n             * @member {'auto'|'horizontal'|'vertical'} orientation\n             * @readonly\n             */\n            /**\n             * The splitter's orientation, configurable with 'auto', 'horizontal' or 'vertical'.\n             *\n             * 'auto' tries to determine the orientation by either checking the `flex-direction` of the parent element\n             * or by comparing the positions of the closest sibling elements to the splitter. If they are above and\n             * below 'horizontal' is used, if not it uses 'vertical'.\n             *\n             * ```\n             * new Splitter({\n             *    orientation : 'horizontal'\n             * });\n             * ```\n             *\n             * To receive the actually used orientation when configured with 'auto', see\n             * {@link #property-currentOrientation}.\n             *\n             * @config {'auto'|'horizontal'|'vertical'}\n             * @default\n             */\n            orientation : 'auto',\n            vertical : null,\n            containerElement : {\n                $config : 'nullify',\n                value   : null\n            },\n            nextNeighbor : {\n                $config : 'nullify',\n                value   : null\n            },\n            previousNeighbor : {\n                $config : 'nullify',\n                value   : null\n            }\n        };\n    }\n    static get delayable() {\n        return {\n            syncState : 'raf'\n        };\n    }\n    //endregion\n    //region Init & destroy\n    doDestroy() {\n        this.mouseDetacher?.();\n        super.doDestroy();\n    }\n    //endregion\n    //region Template & element\n    compose() {\n        return {\n            class : {\n                'b-splitter' : 1\n            },\n            // eslint-disable-next-line bryntum/no-listeners-in-lib\n            listeners : {\n                pointerdown : 'onMouseDown',\n                mouseenter  : 'syncState',\n                ...(!BrowserHelper.supportsPointerEvents && {\n                    mousedown  : 'onMouseDown',\n                    touchstart : 'onMouseDown'\n                })\n            }\n        };\n    }\n    //endregion\n    //region Orientation\n    /**\n     * Get actually used orientation, which is either the configured value for `orientation` or if configured with\n     * 'auto' the currently used orientation.\n     * @property {String}\n     * @readonly\n     */\n    get currentOrientation() {\n        return this.vertical ? 'vertical' : 'horizontal';\n    }\n    getSibling(next = true) {\n        let { element } = this,\n            result;\n        while (!result && (element = element[`${next ? 'next' : 'previous'}ElementSibling`])) {\n            if (!element.isConnected || DomHelper.isVisible(element)) {\n                result = element;\n            }\n        }\n        return result;\n    }\n    get nextWidget() {\n        let { element } = this,\n            result;\n        while (!result && (element = element.nextElementSibling)) {\n            // Second arg used to be 1, but when used inside elements inside another widget (FiddlePanel), nextWidget &\n            // previousWidget would both return the outer widget\n            result = Widget.fromElement(element, this.element.parentElement);\n        }\n        return result;\n    }\n    get previousWidget() {\n        let { element } = this,\n            result;\n        while (!result && (element = element.previousElementSibling)) {\n            result = Widget.fromElement(element, this.element.parentElement);\n        }\n        return result;\n    }\n    updateContainerElement(containerElement) {\n        const me = this;\n        me.stateDetector = me.stateDetector?.disconnect();\n        if (containerElement) {\n            me.stateDetector = new MutationObserver(() => me.syncState());  // syncState runs on next raf\n            me.stateDetector.observe(containerElement, {\n                attributes : true,  // in case style changes flip our orientation (when == 'auto')\n                childList  : true   // watch for our neighbors to render (so we can disable on hidden/collapsed state)\n            });\n        }\n    }\n    updateNextNeighbor(next) {\n        this.watchNeighbor(next, 'next');\n    }\n    updatePreviousNeighbor(previous) {\n        this.watchNeighbor(previous, 'previous');\n    }\n    watchNeighbor(neighbor, name) {\n        this.detachListeners(name);\n        neighbor?.ion({\n            name,\n            thisObj  : this,\n            collapse : 'syncState',\n            expand   : 'syncState',\n            hide     : 'syncState',\n            show     : 'syncState'\n        });\n    }\n    updateOrientation() {\n        this.syncState.now();\n    }\n    updateVertical(vertical) {\n        const classList = this.element?.classList;\n        classList?.add(classesHV[vertical ? 1 : 0]);\n        classList?.remove(classesHV[vertical ? 0 : 1]);\n    }\n    /**\n     * Determine orientation when set to `'auto'` and detects neighboring widgets to monitor their hidden/collapsed\n     * states.\n     * @private\n     */\n    syncState() {\n        const\n            me                                      = this,\n            { element, nextWidget, previousWidget } = me;\n        let vertical = verticality[me.orientation] ?? null;\n        me.nextNeighbor     = nextWidget;\n        me.previousNeighbor = previousWidget;\n        me.disabled = (\n            nextWidget && ((nextWidget.collapsible && nextWidget.collapsed) || nextWidget.hidden)\n        ) || (\n            previousWidget && ((previousWidget.collapsible && previousWidget.collapsed) || previousWidget.hidden)\n        );\n        if (vertical !== null && nextWidget && previousWidget) {\n            me.containerElement = null;\n        }\n        else {\n            // we'll need to monitor parent element child list changes until our neighbors are added to the DOM\n            me.containerElement = element.parentElement;\n            // Orientation auto and already rendered, determine orientation to use\n            if (me.rendered && element.offsetParent) {\n                const flexDirection = DomHelper.getStyleValue(element.parentElement, 'flex-direction');\n                // If used in a flex layout, determine orientation from flex-direction\n                if (flexDirection) {\n                    vertical = !flexDirection.startsWith('column');\n                }\n                // If used in some other layout, try to determine from sibling elements position\n                else {\n                    const\n                        previous = element.previousElementSibling,\n                        next = element.nextElementSibling;\n                    if (!previous || !next) {\n                        // To early in rendering, next sibling not rendered yet\n                        return;\n                    }\n                    const\n                        prevRect = previous.getBoundingClientRect(),\n                        nextRect = next.getBoundingClientRect(),\n                        topMost = prevRect.top < nextRect.top ? prevRect : nextRect,\n                        bottomMost = topMost === nextRect ? prevRect : nextRect;\n                    // orientation = topMost.top !== bottomMost.top ? 'horizontal' : 'vertical';\n                    vertical = topMost.top === bottomMost.top;\n                }\n            }\n        }\n        me.vertical = vertical;\n    }\n    //endregion\n    //region Events\n    onMouseDown(event) {\n        event.preventDefault();\n        if (event.touches) {\n            event = event.touches[0];\n        }\n        const\n            me          = this,\n            {\n                element,\n                nextNeighbor,\n                previousNeighbor\n            } = me,\n            prev        = previousNeighbor ? previousNeighbor.element : me.getSibling(false),\n            next        = nextNeighbor ? nextNeighbor.element : me.getSibling(),\n            prevHasFlex = hasFlex(prev),\n            nextHasFlex = hasFlex(next),\n            flexed      = [];\n        // First stop any ongoing drag operation, since we cannot trust that we always get the mouseup event\n        me.mouseDetacher?.();\n        // Remember flexed children, to enable maintaining their proportions on resize\n        for (const child of element.parentElement.children) {\n            if (hasFlex(child) && child !== element) {\n                flexed.push({\n                    element : child,\n                    width   : child.offsetWidth,\n                    height  : child.offsetHeight\n                });\n            }\n        }\n        me.context = {\n            startX     : event.pageX,\n            startY     : event.pageY,\n            prevWidth  : prev.offsetWidth,\n            prevHeight : prev.offsetHeight,\n            nextWidth  : next.offsetWidth,\n            nextHeight : next.offsetHeight,\n            prevHasFlex,\n            nextHasFlex,\n            flexed,\n            prev,\n            next\n        };\n        const events = {\n            element     : document,\n            pointermove : 'onMouseMove',\n            pointerup   : 'onMouseUp',\n            thisObj     : me\n        };\n        if (!BrowserHelper.supportsPointerEvents) {\n            events.mousemove = events.touchmove = 'onMouseMove';\n            events.mouseup   = events.touchend  = 'onMouseUp';\n        }\n        element.classList.add('b-moving');\n        me.mouseDetacher = EventHelper.on(events);\n        me.trigger('splitterMouseDown', { event });\n    }\n    onMouseMove(event) {\n        const\n            me        = this,\n            {\n                context,\n                nextWidget,\n                previousWidget\n            }         = me,\n            prevStyle = context.prev.style,\n            nextStyle = context.next.style,\n            deltaX    = (event.pageX - context.startX) * (me.rtl ? -1 : 1),\n            deltaY    = event.pageY - context.startY;\n        event.preventDefault();\n        Object.assign(context, {\n            deltaX,\n            deltaY\n        });\n        if (!context.started) {\n            context.started = true;\n            me.trigger('dragStart', { context, event });\n            // Convert heights/widths to flex for flexed elements to maintain proportions\n            // 100px high -> flex-grow 100\n            context.flexed.forEach(flexed => {\n                flexed.element.style.flexGrow = me.vertical ? flexed.width : flexed.height;\n                //Remove flex-basis, since it interferes with resizing\n                flexed.element.style.flexBasis = '0';\n            });\n        }\n        // Adjust flex-grow or width/height for splitter's closest siblings\n        if (me.vertical) {\n            const\n                newPrevWidth = context.prevWidth + deltaX,\n                newNextWidth = context.nextWidth - deltaX;\n            if (context.prevHasFlex) {\n                prevStyle.flexGrow = newPrevWidth;\n            }\n            else if (previousWidget) {\n                previousWidget.width = newPrevWidth;\n            }\n            else {\n                prevStyle.width = `${newPrevWidth}px`;\n            }\n            if (context.nextHasFlex) {\n                nextStyle.flexGrow = newNextWidth;\n            }\n            else if (nextWidget) {\n                nextWidget.width = newNextWidth;\n            }\n            else {\n                nextStyle.width = `${newNextWidth}px`;\n            }\n        }\n        else {\n            const\n                newPrevHeight = context.prevHeight + deltaY,\n                newNextHeight = context.nextHeight - deltaY;\n            if (context.prevHasFlex) {\n                prevStyle.flexGrow = newPrevHeight;\n            }\n            else if (previousWidget) {\n                previousWidget.height = newPrevHeight;\n            }\n            else {\n                prevStyle.height = `${newPrevHeight}px`;\n            }\n            if (context.nextHasFlex) {\n                nextStyle.flexGrow = newNextHeight;\n            }\n            else if (nextWidget) {\n                nextWidget.height = newNextHeight;\n            }\n            else {\n                nextStyle.height = `${newNextHeight}px`;\n            }\n        }\n        me.trigger('drag', { context, event });\n    }\n    onMouseUp(event) {\n        const me = this;\n        me.mouseDetacher?.();\n        me.mouseDetacher = null;\n        me.element.classList.remove('b-moving');\n        if (me.context.started) {\n            me.trigger('drop', { context : me.context, event });\n        }\n        me.context = null;\n    }\n    //endregion\n    render() {\n        super.render(...arguments);\n        this.syncState.now();\n        if (this.vertical === null) {\n            this.syncState();  // try again on next raf\n        }\n    }\n}\n// Register this widget type with its Factory\nSplitter.initClass();\nSplitter._$name = 'Splitter';"],
  "mappings": ";;;;;;;;;AAOA,IACI,YAAY,CAAC,gBAAgB,YAAY;AAD7C,IAEI,UAAU,QAAM,UAAU,cAAc,GAAG,eAAe,SAAS,MAAM,WACpE,SAAS,UAAU,cAAc,IAAI,YAAY,GAAG,EAAE,KAAK,SAAS,UAAU,cAAc,IAAI,WAAW,GAAG,EAAE;AAHzH,IAII,cAAc;AAAA,EACV,YAAa;AAAA,EACb,UAAa;AACjB;AAUJ,IAAqB,WAArB,cAAsC,OAAO;AAAA,EAIzC,WAAW,eAAe;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA4CH,aAAc;AAAA,MACd,UAAW;AAAA,MACX,kBAAmB;AAAA,QACf,SAAU;AAAA,QACV,OAAU;AAAA,MACd;AAAA,MACA,cAAe;AAAA,QACX,SAAU;AAAA,QACV,OAAU;AAAA,MACd;AAAA,MACA,kBAAmB;AAAA,QACf,SAAU;AAAA,QACV,OAAU;AAAA,MACd;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW,YAAY;AACnB,WAAO;AAAA,MACH,WAAY;AAAA,IAChB;AAAA,EACJ;AAAA;AAAA;AAAA,EAGA,YAAY;AAhGhB;AAiGQ,eAAK,kBAAL;AACA,UAAM,UAAU;AAAA,EACpB;AAAA;AAAA;AAAA,EAGA,UAAU;AACN,WAAO;AAAA,MACH,OAAQ;AAAA,QACJ,cAAe;AAAA,MACnB;AAAA;AAAA,MAEA,WAAY;AAAA,QACR,aAAc;AAAA,QACd,YAAc;AAAA,QACd,GAAI,CAAC,cAAc,yBAAyB;AAAA,UACxC,WAAa;AAAA,UACb,YAAa;AAAA,QACjB;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,IAAI,qBAAqB;AACrB,WAAO,KAAK,WAAW,aAAa;AAAA,EACxC;AAAA,EACA,WAAW,OAAO,MAAM;AACpB,QAAI,EAAE,QAAQ,IAAI,MACd;AACJ,WAAO,CAAC,WAAW,UAAU,QAAQ,GAAG,OAAO,SAAS,UAAU,gBAAgB,IAAI;AAClF,UAAI,CAAC,QAAQ,eAAe,UAAU,UAAU,OAAO,GAAG;AACtD,iBAAS;AAAA,MACb;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,IAAI,aAAa;AACb,QAAI,EAAE,QAAQ,IAAI,MACd;AACJ,WAAO,CAAC,WAAW,UAAU,QAAQ,qBAAqB;AAGtD,eAAS,OAAO,YAAY,SAAS,KAAK,QAAQ,aAAa;AAAA,IACnE;AACA,WAAO;AAAA,EACX;AAAA,EACA,IAAI,iBAAiB;AACjB,QAAI,EAAE,QAAQ,IAAI,MACd;AACJ,WAAO,CAAC,WAAW,UAAU,QAAQ,yBAAyB;AAC1D,eAAS,OAAO,YAAY,SAAS,KAAK,QAAQ,aAAa;AAAA,IACnE;AACA,WAAO;AAAA,EACX;AAAA,EACA,uBAAuB,kBAAkB;AA7J7C;AA8JQ,UAAM,KAAK;AACX,OAAG,iBAAgB,QAAG,kBAAH,mBAAkB;AACrC,QAAI,kBAAkB;AAClB,SAAG,gBAAgB,IAAI,iBAAiB,MAAM,GAAG,UAAU,CAAC;AAC5D,SAAG,cAAc,QAAQ,kBAAkB;AAAA,QACvC,YAAa;AAAA;AAAA,QACb,WAAa;AAAA;AAAA,MACjB,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EACA,mBAAmB,MAAM;AACrB,SAAK,cAAc,MAAM,MAAM;AAAA,EACnC;AAAA,EACA,uBAAuB,UAAU;AAC7B,SAAK,cAAc,UAAU,UAAU;AAAA,EAC3C;AAAA,EACA,cAAc,UAAU,MAAM;AAC1B,SAAK,gBAAgB,IAAI;AACzB,yCAAU,IAAI;AAAA,MACV;AAAA,MACA,SAAW;AAAA,MACX,UAAW;AAAA,MACX,QAAW;AAAA,MACX,MAAW;AAAA,MACX,MAAW;AAAA,IACf;AAAA,EACJ;AAAA,EACA,oBAAoB;AAChB,SAAK,UAAU,IAAI;AAAA,EACvB;AAAA,EACA,eAAe,UAAU;AA5L7B;AA6LQ,UAAM,aAAY,UAAK,YAAL,mBAAc;AAChC,2CAAW,IAAI,UAAU,WAAW,IAAI,CAAC;AACzC,2CAAW,OAAO,UAAU,WAAW,IAAI,CAAC;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY;AAtMhB;AAuMQ,UACI,KAA0C,MAC1C,EAAE,SAAS,YAAY,eAAe,IAAI;AAC9C,QAAI,YAAW,iBAAY,GAAG,WAAW,MAA1B,YAA+B;AAC9C,OAAG,eAAmB;AACtB,OAAG,mBAAmB;AACtB,OAAG,WACC,eAAgB,WAAW,eAAe,WAAW,aAAc,WAAW,WAE9E,mBAAoB,eAAe,eAAe,eAAe,aAAc,eAAe;AAElG,QAAI,aAAa,QAAQ,cAAc,gBAAgB;AACnD,SAAG,mBAAmB;AAAA,IAC1B,OACK;AAED,SAAG,mBAAmB,QAAQ;AAE9B,UAAI,GAAG,YAAY,QAAQ,cAAc;AACrC,cAAM,gBAAgB,UAAU,cAAc,QAAQ,eAAe,gBAAgB;AAErF,YAAI,eAAe;AACf,qBAAW,CAAC,cAAc,WAAW,QAAQ;AAAA,QACjD,OAEK;AACD,gBACI,WAAW,QAAQ,wBACnB,OAAO,QAAQ;AACnB,cAAI,CAAC,YAAY,CAAC,MAAM;AAEpB;AAAA,UACJ;AACA,gBACI,WAAW,SAAS,sBAAsB,GAC1C,WAAW,KAAK,sBAAsB,GACtC,UAAU,SAAS,MAAM,SAAS,MAAM,WAAW,UACnD,aAAa,YAAY,WAAW,WAAW;AAEnD,qBAAW,QAAQ,QAAQ,WAAW;AAAA,QAC1C;AAAA,MACJ;AAAA,IACJ;AACA,OAAG,WAAW;AAAA,EAClB;AAAA;AAAA;AAAA,EAGA,YAAY,OAAO;AAtPvB;AAuPQ,UAAM,eAAe;AACrB,QAAI,MAAM,SAAS;AACf,cAAQ,MAAM,QAAQ,CAAC;AAAA,IAC3B;AACA,UACI,KAAc,MACd;AAAA,MACI;AAAA,MACA;AAAA,MACA;AAAA,IACJ,IAAI,IACJ,OAAc,mBAAmB,iBAAiB,UAAU,GAAG,WAAW,KAAK,GAC/E,OAAc,eAAe,aAAa,UAAU,GAAG,WAAW,GAClE,cAAc,QAAQ,IAAI,GAC1B,cAAc,QAAQ,IAAI,GAC1B,SAAc,CAAC;AAEnB,aAAG,kBAAH;AAEA,eAAW,SAAS,QAAQ,cAAc,UAAU;AAChD,UAAI,QAAQ,KAAK,KAAK,UAAU,SAAS;AACrC,eAAO,KAAK;AAAA,UACR,SAAU;AAAA,UACV,OAAU,MAAM;AAAA,UAChB,QAAU,MAAM;AAAA,QACpB,CAAC;AAAA,MACL;AAAA,IACJ;AACA,OAAG,UAAU;AAAA,MACT,QAAa,MAAM;AAAA,MACnB,QAAa,MAAM;AAAA,MACnB,WAAa,KAAK;AAAA,MAClB,YAAa,KAAK;AAAA,MAClB,WAAa,KAAK;AAAA,MAClB,YAAa,KAAK;AAAA,MAClB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AACA,UAAM,SAAS;AAAA,MACX,SAAc;AAAA,MACd,aAAc;AAAA,MACd,WAAc;AAAA,MACd,SAAc;AAAA,IAClB;AACA,QAAI,CAAC,cAAc,uBAAuB;AACtC,aAAO,YAAY,OAAO,YAAY;AACtC,aAAO,UAAY,OAAO,WAAY;AAAA,IAC1C;AACA,YAAQ,UAAU,IAAI,UAAU;AAChC,OAAG,gBAAgB,YAAY,GAAG,MAAM;AACxC,OAAG,QAAQ,qBAAqB,EAAE,MAAM,CAAC;AAAA,EAC7C;AAAA,EACA,YAAY,OAAO;AACf,UACI,KAAY,MACZ;AAAA,MACI;AAAA,MACA;AAAA,MACA;AAAA,IACJ,IAAY,IACZ,YAAY,QAAQ,KAAK,OACzB,YAAY,QAAQ,KAAK,OACzB,UAAa,MAAM,QAAQ,QAAQ,WAAW,GAAG,MAAM,KAAK,IAC5D,SAAY,MAAM,QAAQ,QAAQ;AACtC,UAAM,eAAe;AACrB,WAAO,OAAO,SAAS;AAAA,MACnB;AAAA,MACA;AAAA,IACJ,CAAC;AACD,QAAI,CAAC,QAAQ,SAAS;AAClB,cAAQ,UAAU;AAClB,SAAG,QAAQ,aAAa,EAAE,SAAS,MAAM,CAAC;AAG1C,cAAQ,OAAO,QAAQ,YAAU;AAC7B,eAAO,QAAQ,MAAM,WAAW,GAAG,WAAW,OAAO,QAAQ,OAAO;AAEpE,eAAO,QAAQ,MAAM,YAAY;AAAA,MACrC,CAAC;AAAA,IACL;AAEA,QAAI,GAAG,UAAU;AACb,YACI,eAAe,QAAQ,YAAY,QACnC,eAAe,QAAQ,YAAY;AACvC,UAAI,QAAQ,aAAa;AACrB,kBAAU,WAAW;AAAA,MACzB,WACS,gBAAgB;AACrB,uBAAe,QAAQ;AAAA,MAC3B,OACK;AACD,kBAAU,QAAQ,GAAG,YAAY;AAAA,MACrC;AACA,UAAI,QAAQ,aAAa;AACrB,kBAAU,WAAW;AAAA,MACzB,WACS,YAAY;AACjB,mBAAW,QAAQ;AAAA,MACvB,OACK;AACD,kBAAU,QAAQ,GAAG,YAAY;AAAA,MACrC;AAAA,IACJ,OACK;AACD,YACI,gBAAgB,QAAQ,aAAa,QACrC,gBAAgB,QAAQ,aAAa;AACzC,UAAI,QAAQ,aAAa;AACrB,kBAAU,WAAW;AAAA,MACzB,WACS,gBAAgB;AACrB,uBAAe,SAAS;AAAA,MAC5B,OACK;AACD,kBAAU,SAAS,GAAG,aAAa;AAAA,MACvC;AACA,UAAI,QAAQ,aAAa;AACrB,kBAAU,WAAW;AAAA,MACzB,WACS,YAAY;AACjB,mBAAW,SAAS;AAAA,MACxB,OACK;AACD,kBAAU,SAAS,GAAG,aAAa;AAAA,MACvC;AAAA,IACJ;AACA,OAAG,QAAQ,QAAQ,EAAE,SAAS,MAAM,CAAC;AAAA,EACzC;AAAA,EACA,UAAU,OAAO;AA3XrB;AA4XQ,UAAM,KAAK;AACX,aAAG,kBAAH;AACA,OAAG,gBAAgB;AACnB,OAAG,QAAQ,UAAU,OAAO,UAAU;AACtC,QAAI,GAAG,QAAQ,SAAS;AACpB,SAAG,QAAQ,QAAQ,EAAE,SAAU,GAAG,SAAS,MAAM,CAAC;AAAA,IACtD;AACA,OAAG,UAAU;AAAA,EACjB;AAAA;AAAA,EAEA,SAAS;AACL,UAAM,OAAO,GAAG,SAAS;AACzB,SAAK,UAAU,IAAI;AACnB,QAAI,KAAK,aAAa,MAAM;AACxB,WAAK,UAAU;AAAA,IACnB;AAAA,EACJ;AACJ;AAAA;AAnXI,cAFiB,UAEV,SAAQ;AACf,cAHiB,UAGV,QAAO;AAoXlB,SAAS,UAAU;AACnB,SAAS,SAAS;",
  "names": []
}
