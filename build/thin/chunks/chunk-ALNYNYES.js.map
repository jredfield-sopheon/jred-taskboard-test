{
  "version": 3,
  "sources": ["../../../../Grid/lib/Grid/view/TreeGrid.js"],
  "sourcesContent": ["import Grid from './Grid.js';\n// tree feature will be added by default to TreeGrid, but needs to be imported\nimport '../feature/Tree.js';\n// not used here but enables using `type : tree` in a column config (exactly one required)\nimport '../column/TreeColumn.js';\n/**\n * @module Grid/view/TreeGrid\n */\n/**\n * A TreeGrid, a Tree combined with a Grid. Must be configured with exactly one {@link Grid.column.TreeColumn}\n * (`type: tree`), but can also have an arbitrary number of other columns. Most features that can be used with Grid also\n * works with TreeGrid, except the Group feature.\n *\n * {@inlineexample Grid/view/TreeGrid.js}\n *\n * @extends Grid/view/Grid\n * @classtype treegrid\n * @widget\n */\nexport default class TreeGrid extends Grid {\n    static get $name() {\n        return 'TreeGrid';\n    }\n    // Factoryable type name\n    static get type() {\n        return 'treegrid';\n    }\n    static get configurable() {\n        return {\n            /**\n             * The store instance or config object that holds the records to be displayed by this TreeGrid. If assigning\n             * a store instance, it must be configured with `tree: true`.\n             *\n             * A store will be created if none is specified.\n             * @config {Core.data.Store|StoreConfig} store\n             * @category Common\n             */\n            store : {\n                tree : true\n            }\n        };\n    }\n    //region Plugged in functions / inherited configs\n    /**\n     * Collapse an expanded node or expand a collapsed. Optionally forcing a certain state.\n     *\n     * @function toggleCollapse\n     * @param {String|Number|Core.data.Model} idOrRecord Record (the node itself) or id of a node to toggle\n     * @param {Boolean} [collapse] Force collapse (true) or expand (false)\n     * @param {Boolean} [skipRefresh] Set to true to not refresh rows (if calling in batch)\n     * @async\n     * @category Feature shortcuts\n     */\n    /**\n     * Collapse a single node.\n     *\n     * @function collapse\n     * @param {String|Number|Core.data.Model} idOrRecord Record (the node itself) or id of a node to collapse\n     * @async\n     * @category Feature shortcuts\n     */\n    /**\n     * Expand a single node.\n     *\n     * @function expand\n     * @param {String|Number|Core.data.Model} idOrRecord Record (the node itself) or id of a node to expand\n     * @async\n     * @category Feature shortcuts\n     */\n    /**\n     * Expands parent nodes to make this node \"visible\".\n     *\n     * @function expandTo\n     * @param {String|Number|Core.data.Model} idOrRecord Record (the node itself) or id of a node\n     * @async\n     * @category Feature shortcuts\n     */\n    //endregion\n    /* disconnect doc comment */\n    //region Store\n    updateStore(store, was) {\n        if (store && !store.tree) {\n            throw new Error('TreeGrid requires a Store configured with tree : true');\n        }\n        super.updateStore(store, was);\n    }\n    //endregion\n}\n// Register this widget type with its Factory\nTreeGrid.initClass();\nTreeGrid._$name = 'TreeGrid';"],
  "mappings": ";;;;;AAmBA,IAAqB,WAArB,cAAsC,KAAK;AAAA,EACvC,WAAW,QAAQ;AACf,WAAO;AAAA,EACX;AAAA;AAAA,EAEA,WAAW,OAAO;AACd,WAAO;AAAA,EACX;AAAA,EACA,WAAW,eAAe;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASH,OAAQ;AAAA,QACJ,MAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuCA,YAAY,OAAO,KAAK;AACpB,QAAI,SAAS,CAAC,MAAM,MAAM;AACtB,YAAM,IAAI,MAAM,uDAAuD;AAAA,IAC3E;AACA,UAAM,YAAY,OAAO,GAAG;AAAA,EAChC;AAAA;AAEJ;AAEA,SAAS,UAAU;AACnB,SAAS,SAAS;",
  "names": []
}
