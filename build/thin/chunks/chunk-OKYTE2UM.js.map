{
  "version": 3,
  "sources": ["../../../../Core/lib/Core/mixin/Hoverable.js", "../../../../Core/lib/Core/util/drag/DragTipProxy.js", "../../../../Core/lib/Core/widget/mixin/Minifiable.js"],
  "sourcesContent": ["import Delayable from './Delayable.js';\nimport DomClassList from '../helper/util/DomClassList.js';\nimport EventHelper from '../helper/EventHelper.js';\n/**\n * @module Core/mixin/Hoverable\n */\nconst\n    EDGES = {\n        e : 'b-hover-edge',\n        t : 'b-hover-top',\n        r : 'b-hover-right',\n        b : 'b-hover-bottom',\n        l : 'b-hover-left'\n    },\n    EDGE_CLASSES = {\n        [EDGES.e] : 1,\n        [EDGES.t] : 1,\n        [EDGES.r] : 1,\n        [EDGES.b] : 1,\n        [EDGES.l] : 1\n    },\n    ZONES = {\n        t  : [EDGES.e, EDGES.t],\n        r  : [EDGES.e, EDGES.r],\n        b  : [EDGES.e, EDGES.b],\n        l  : [EDGES.e, EDGES.l],\n        tr : [EDGES.e, EDGES.t, EDGES.r],\n        bl : [EDGES.e, EDGES.b, EDGES.l],\n        tl : [EDGES.e, EDGES.t, EDGES.l],\n        br : [EDGES.e, EDGES.b, EDGES.r]\n    };\n/**\n * This mixin provides mouse hover tracking.\n *\n * ```javascript\n *  class Tracker extends Base.mixin(Hoverable) {\n *      hoverEnter(leaving) {\n *          // this.hoverTarget has been entered from \"leaving\"\n *          // this.hoverTarget will never be null, but leaving may be null\n *      }\n *\n *      hoverLeave(leaving) {\n *          // this.hoverTarget has been entered from \"leaving\"\n *          // this.hoverTarget may be null, but leaving will never be null\n *      }\n *\n *      hoverMove(event) {\n *          // called when a mousemove is made within a hover target\n *          // this.hoverTarget will never be null\n *      }\n *  }\n *\n *  let tracker = new Tracker({\n *      hoverRootElement : document.body,\n *      hoverSelector    : '.hoverable'\n *  });\n * ```\n *\n * @mixin\n * @internal\n */\nexport default Target => class Hoverable extends Target.mixin(Delayable) {\n    static get $name() {\n        return 'Hoverable';\n    }\n    //region Configs\n    static get configurable() {\n        return {\n            /**\n             * A CSS class to add to the {@link #config-hoverTarget target} element.\n             * @config {String}\n             */\n            hoverCls : null,\n            /**\n             * A CSS class to add to the {@link #config-hoverTarget target} element to enable CSS animations. This class\n             * is added after calling {@link #function-hoverEnter}.\n             * @config {String}\n             */\n            hoverAnimationCls : null,\n            /**\n             * A CSS class to add to the {@link #config-hoverRootElement root} element.\n             * @config {String}\n             */\n            hoverRootCls : null,\n            /**\n             * A CSS class to add to the {@link #config-hoverRootElement root} element when there is an active\n             * {@link #config-hoverTarget target}.\n             * @config {String}\n             */\n            hoverRootActiveCls : null,\n            /**\n             * The number of milliseconds to delay notification of changes in the {@link #config-hoverTarget}.\n             * @config {Number}\n             */\n            hoverDelay : null,\n            /**\n             * The current element that the cursor is inside as determined by `mouseover` and `mouseout`. Changes in\n             * this config trigger re-evaluation of the {@link #config-hoverSelector} to determine if there is a\n             * {@link #config-hoverTarget}.\n             * @config {HTMLElement}\n             * @private\n             */\n            hoverElement : null,\n            /**\n             * An element to ignore. Mouse entry into this element will not trigger a change in either of the\n             * {@link #config-hoverElement} or {@link #config-hoverTarget} values.\n             * @config {HTMLElement}\n             */\n            hoverIgnoreElement : null,\n            /**\n             * This property is a string containing one character for each edge that is hoverable. For example, a\n             * value of \"tb\" indicates that the top and bottom edges are hoverable.\n             * @config {String}\n             */\n            hoverEdges : null,\n            /**\n             * When {@link #config-hoverEdges} is used, this value determines the size (in pixels) of the edge. When\n             * the cursor is within this number of pixels of an edge listed in `hoverEdges`, the appropriate CSS class\n             * is added to the {@link #config-hoverTarget}:\n             *\n             *  - `b-hover-top`\n             *  - `b-hover-right`\n             *  - `b-hover-bottom`\n             *  - `b-hover-left`\n             *\n             * Depending on the values of `hoverEdges`, it is possible to have at most two of these classes present at\n             * any one time (when the cursor is in a corner).\n             * @config {Number}\n             * @default\n             */\n            hoverEdgeSize : 10,\n            /**\n             * The outer element where hover tracking will operate (attach events to it and use as root limit when\n             * looking for ancestors).\n             *\n             * A common choice for this will be `document.body`.\n             * @config {HTMLElement}\n             */\n            hoverRootElement : {\n                $config : 'nullify',\n                value : null\n            },\n            /**\n             * A selector for the [closest](https://developer.mozilla.org/en-US/docs/Web/API/Element/closest) API to\n             * determine the actual element of interest. This selector is used to process changes to the\n             * {@link #config-hoverElement} to determine the {@link #config-hoverTarget}.\n             * @config {String}\n             */\n            hoverSelector : null,\n            /**\n             * The currently active hover target. This will be the same as {@link #config-hoverElement} unless there is\n             * a {@link #config-hoverSelector}.\n             * @config {HTMLElement}\n             */\n            hoverTarget : {\n                $config : 'nullify',\n                value : null\n            },\n            /**\n             * Set to `true` to include tracking of `mousemove` events for the active {@link #config-hoverTarget}. This\n             * is required for the {@link #function-hoverMove} method to be called.\n             * @config {Boolean}\n             * @default false\n             */\n            hoverTrack : null,\n            /**\n             * A string value containing one character per active edge (e.g., \"tr\").\n             * @config {String}\n             * @private\n             */\n            hoverZone : null\n        };\n    }\n    static get delayable() {\n        return {\n            setHoverTarget : 0\n        };\n    }\n    //endregion\n    //region State Handling\n    /**\n     * This method is called when the cursor enters the {@link #config-hoverTarget}. The `hoverTarget` will not be\n     * `null`.\n     * @param {HTMLElement} leaving The element that was previously the `hoverTarget`. This value may be null.\n     */\n    hoverEnter(leaving) {\n        // template\n    }\n    /**\n     * This method should return true if the given `element` should be ignored. By default, this is `true` if the\n     * `element` is contained inside the {@link #config-hoverIgnoreElement}.\n     * @param {HTMLElement} element\n     * @returns {Boolean}\n     * @protected\n     */\n    hoverIgnore(element) {\n        return this.hoverIgnoreElement?.contains(element);\n    }\n    /**\n     * This method is called when the cursor leaves the {@link #config-hoverTarget}. The `hoverTarget` may be `null`\n     * or refer to the new `hoverTarget`\n     * @param {HTMLElement} leaving The element that was previously the `hoverTarget`. This value will not be null.\n     */\n    hoverLeave(leaving) {\n        // template\n    }\n    /**\n     * This method is called when the mouse moves within a {@link #config-hoverTarget}, but only if enabled by the\n     * {@link #config-hoverTrack} config.\n     * @param {Event} event\n     */\n    hoverMove(event) {\n        // template\n    }\n    //endregion\n    //region Events\n    onHoverMouseMove(event) {\n        const\n            me = this,\n            { hoverEdges, hoverEdgeSize, hoverTarget } = me;\n        if (hoverTarget) {\n            if (hoverEdges) {\n                const\n                    { top, left, width, height, right, bottom } = hoverTarget.getBoundingClientRect(),\n                    { clientX, clientY } = event,\n                    centerX = left + width / 2,\n                    centerY = top + height / 2,\n                    t = clientY <  (hoverEdgeSize ? top    + hoverEdgeSize : centerY),\n                    r = clientX >= (hoverEdgeSize ? right  - hoverEdgeSize : centerX),\n                    b = clientY >= (hoverEdgeSize ? bottom - hoverEdgeSize : centerY),\n                    l = clientX <  (hoverEdgeSize ? left   + hoverEdgeSize : centerX),\n                    tb = ((t || b) ? (t ? 't' : 'b') : ''),\n                    rl = ((r || l) ? (r ? 'r' : 'l') : '');\n                me.hoverZone = (hoverEdges.includes(tb) ? tb : '') + (hoverEdges.includes(rl) ? rl : '');\n            }\n            me.hoverEvent = event;\n            me.hoverTrack && me.hoverMove(event);\n        }\n    }\n    onHoverMouseOver(event) {\n        this.hoverEvent = event;\n        this.hoverElement = event.target;\n    }\n    onHoverMouseOut(event) {\n        this.hoverEvent = event;\n        this.hoverElement = event.relatedTarget;\n    }\n    //endregion\n    //region Configs\n    // hoverDelay\n    updateHoverDelay(delay) {\n        this.setHoverTarget.delay = delay;\n    }\n    // hoverEdges\n    changeHoverEdges(edges) {\n        return (edges === true) ? 'trbl' : (edges || '').replace('v', 'tb').replace('h', 'lr');\n    }\n    updateHoverEdges() {\n        this.syncHoverListeners();\n    }\n    // hoverElement\n    changeHoverElement(element) {\n        if (!this.hoverIgnore(element)) {\n            return element;\n        }\n    }\n    updateHoverElement(hoverEl) {\n        const { hoverSelector } = this;\n        if (hoverSelector) {\n            hoverEl = hoverEl?.closest(hoverSelector);\n        }\n        this.setHoverTarget(hoverEl);  // this may be delayed\n    }\n    // hoverRootElement\n    updateHoverRootElement(rootEl, was) {\n        const { hoverRootCls } = this;\n        if (hoverRootCls) {\n            was?.classList.remove(hoverRootCls);\n            rootEl?.classList.add(hoverRootCls);\n        }\n        this.syncHoverListeners();\n    }\n    // hoverTarget\n    changeHoverTarget(hoverEl, was) {\n        if (was) {\n            this.hoverZone = null;\n        }\n        return hoverEl;\n    }\n    updateHoverTarget(hoverEl, was) {\n        const\n            me = this,\n            { hoverCls, hoverAnimationCls, hoverRootActiveCls, hoverRootElement } = me;\n        if (hoverRootActiveCls) {\n            hoverRootElement?.classList[hoverEl ? 'add' : 'remove'](hoverRootActiveCls);\n        }\n        if (was) {\n            hoverCls && was.classList.remove(hoverCls);\n            hoverAnimationCls && was.classList.remove(hoverAnimationCls);\n            me.hoverLeave(was);\n        }\n        if (hoverEl) {\n            hoverCls && hoverEl.classList.add(hoverCls);\n            me.hoverEnter(was);\n            if (me.hoverTrack) {\n                me.hoverMove(me.hoverEvent);\n            }\n            if (hoverAnimationCls) {\n                hoverEl.getBoundingClientRect();   // force layout so next change starts animation\n                hoverEl.classList.add(hoverAnimationCls);\n            }\n        }\n    }\n    // hoverTrack\n    updateHoverTrack() {\n        this.syncHoverListeners();\n    }\n    // hoverZone\n    updateHoverZone(zone) {\n        const { hoverAnimationCls, hoverTarget } = this;\n        if (hoverTarget) {\n            const\n                { className } = hoverTarget,\n                cls = DomClassList.change(className, /* add= */zone ? ZONES[zone] : null, /* remove= */EDGE_CLASSES);\n            if (className !== cls) {\n                hoverTarget.className = cls;\n                if (zone && hoverAnimationCls) {\n                    hoverTarget.classList.remove(hoverAnimationCls);\n                    hoverTarget.getBoundingClientRect();   // force layout so next change starts animation\n                    hoverTarget.classList.add(hoverAnimationCls);\n                }\n            }\n        }\n    }\n    //endregion\n    //region Misc\n    setHoverTarget(target) {\n        // this method runs later based on the hoverDelay\n        this.hoverTarget = target;\n    }\n    syncHoverListeners() {\n        const\n            me = this,\n            element = me.hoverRootElement,\n            listeners = {\n                element,\n                thisObj   : me,\n                mouseover : 'onHoverMouseOver',\n                mouseout  : 'onHoverMouseOut'\n            };\n        if (me.hoverTrack || me.hoverEdges) {\n            listeners.mousemove = 'onHoverMouseMove';\n        }\n        me._hoverRootDetacher?.();\n        me._hoverRootDetacher = element && EventHelper.on(listeners);\n    }\n    //endregion\n};\n", "import DragProxy from './DragProxy.js';\nimport Widget from '../../widget/Widget.js';\nimport Rectangle from '../../helper/util/Rectangle.js';\nimport '../../widget/Tooltip.js';\n/**\n * @module Core/util/drag/DragTipProxy\n */\n/**\n * This drag proxy manages a {@link #config-tooltip} (or derived class) and aligns the tooltip to the current drag\n * position adjusted by the {@link #config-align} config.\n * @extends Core/util/drag/DragProxy\n * @classtype tip\n * @internal\n */\nexport default class DragTipProxy extends DragProxy {\n    static get type() {\n        return 'tip';\n    }\n    static get configurable() {\n        return {\n            /**\n             * Controls how the tooltip will be aligned to the current drag position.\n             *\n             * See {@link Core.helper.util.Rectangle#function-alignTo} for details.\n             * @config {String}\n             * @default\n             */\n            align : 't10-b50',\n            /**\n             * The number of pixels to offset from the drag position.\n             * @config {Number}\n             * @default\n             */\n            offset : 20,\n            /**\n             * The tooltip to be shown, hidden and repositioned to track the drag position.\n             * @config {Core.widget.Tooltip}\n             */\n            tooltip : {\n                $config : ['lazy', 'nullify'],\n                value : {\n                    type : 'tooltip'\n                }\n            }\n        };\n    }\n    open() {\n        this.getConfig('tooltip');  // trigger creation\n    }\n    close() {\n        this.tooltip?.hide();\n    }\n    dragMove(drag) {\n        const\n            { offset, tooltip } = this,\n            { event } = drag;\n        if (tooltip) {\n            if (!tooltip.isVisible) {\n                tooltip.show();\n            }\n            tooltip.alignTo({\n                align  : this.align,\n                target : new Rectangle(event.clientX - offset, event.clientY - offset, offset * 2, offset * 2)\n            });\n        }\n    }\n    changeTooltip(config, existing) {\n        return Widget.reconfigure(existing, config, /* owner = */ this);\n    }\n}\nDragTipProxy.initClass();\nDragTipProxy._$name = 'DragTipProxy';", "import Base from '../../Base.js';\n/**\n * @module Core/widget/mixin/Minifiable\n */\n/**\n * Mixin for widgets that can present in a full and minified form. This behavior is used in\n * {@link Core.widget.Toolbar#config-overflow} handling.\n *\n * @mixin\n * @internal\n */\nexport default Target => class Minifiable extends (Target || Base) {\n    static $name = 'Minifiable';\n    static configurable = {\n        /**\n         * Set to `false` to prevent this widget from assuming its {@link #config-minified} form automatically (for\n         * example, due to {@link Core.widget.Toolbar#config-overflow} handling.\n         *\n         * When this value is `true` (the default), the minifiable widget's {@link #config-minified} config may be\n         * set to `true` to reduce toolbar overflow.\n         *\n         * @config {Boolean}\n         * @default\n         */\n        minifiable : true,\n        /**\n         * Set to `true` to present this widget in its minimal form.\n         * @config {Boolean}\n         * @default false\n         */\n        minified : null\n    };\n    compose() {\n        const { minified } = this;\n        return {\n            class : {\n                'b-minified' : minified\n            }\n        };\n    }\n    get widgetClass() {}\n};\n"],
  "mappings": "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",
  "names": []
}
