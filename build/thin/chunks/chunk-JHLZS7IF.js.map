{
  "version": 3,
  "sources": ["../../../../Core/lib/Core/widget/TextAreaField.js"],
  "sourcesContent": ["import Field from './Field.js';\n/**\n * @module Core/widget/TextAreaField\n */\n/**\n * TextAreaField widget for multiline text input. Wraps a native &lt;textarea&gt; HTML element.\n *\n * ```javascript\n * const textAreaField = new TextAreaField({\n *   placeholder: 'Enter some text'\n * });\n *```\n *\n * {@inlineexample Core/widget/TextAreaField.js}\n *\n * @extends Core/widget/Field\n * @classtype textareafield\n * @classtypealias textarea\n * @inputfield\n */\nexport default class TextAreaField extends Field {\n    static $name = 'TextAreaField';\n    static type = 'textareafield';\n    static alias = 'textarea';\n    static get configurable() {\n        return {\n            /**\n             * The resize style to apply to the `<textarea>` element.\n             * @config {'none'|'both'|'horizontal'|'vertical'}\n             * @default\n             */\n            resize : 'none',\n            inputAttributes : {\n                tag : 'textarea'\n            }\n        };\n    }\n    updateResize(resize) {\n        this.input.style.resize = resize;\n    }\n}\n// Register this widget type with its Factory\nTextAreaField.initClass();\nTextAreaField._$name = 'TextAreaField';"],
  "mappings": ";;;;;;AAoBA,IAAqB,gBAArB,cAA2C,MAAM;AAAA,EAI7C,WAAW,eAAe;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMH,QAAS;AAAA,MACT,iBAAkB;AAAA,QACd,KAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,aAAa,QAAQ;AACjB,SAAK,MAAM,MAAM,SAAS;AAAA,EAC9B;AACJ;AAnBI,cADiB,eACV,SAAQ;AACf,cAFiB,eAEV,QAAO;AACd,cAHiB,eAGV,SAAQ;AAmBnB,cAAc,UAAU;AACxB,cAAc,SAAS;",
  "names": []
}
