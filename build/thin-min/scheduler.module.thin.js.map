{
  "version": 3,
  "sources": ["../../../Scheduler/lib/Scheduler/column/EventColorColumn.js", "../../../Scheduler/lib/Scheduler/column/ResourceCollapseColumn.js", "../../../Scheduler/lib/Scheduler/feature/EventDragSelect.js", "../../../Scheduler/lib/Scheduler/feature/EventNonWorkingTime.js", "../../../Scheduler/lib/Scheduler/feature/GroupSummary.js", "../../../Scheduler/lib/Scheduler/feature/HeaderZoom.js", "../../../Scheduler/lib/Scheduler/feature/Pan.js", "../../../Scheduler/lib/Scheduler/feature/ResourceMenu.js", "../../../Scheduler/lib/Scheduler/feature/ResourceTimeRanges.js", "../../../Scheduler/lib/Scheduler/feature/RowResize.js", "../../../Scheduler/lib/Scheduler/feature/SimpleEventEdit.js", "../../../Scheduler/lib/Scheduler/feature/Split.js", "../../../Scheduler/lib/Scheduler/feature/Summary.js", "../../../Scheduler/lib/Scheduler/feature/TimeSelection.js", "../../../Scheduler/lib/Scheduler/feature/export/Print.js", "../../../Scheduler/lib/Scheduler/util/ScheduleTableExporter.js", "../../../Scheduler/lib/Scheduler/feature/experimental/ExcelExporter.js", "../../../Scheduler/lib/Scheduler/view/Scheduler.js", "../../../Scheduler/lib/Scheduler/widget/UndoRedo.js", "../../../Scheduler/lib/Scheduler/widget/ViewPresetCombo.js", "../../../Scheduler/bundle/entry.thin.js"],
  "sourcesContent": ["import ColorColumn from '../../Grid/column/ColorColumn.js';\nimport '../widget/EventColorPicker.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\n/**\n * @module Scheduler/column/EventColorColumn\n */\n/**\n * A column that displays Event's `eventColor` values (built-in color classes or CSS colors) as a colored element\n * similar to the {@link Scheduler.widget.EventColorField}. When the user clicks the element, a\n * {@link Scheduler.widget.EventColorPicker} lets the user select from a\n * {@link Scheduler.view.mixin.TimelineEventRendering#config-eventColor range of colors}.\n *\n * ```javascript\n * new Scheduler({\n *    columns : [\n *       {\n *          type : 'eventcolor',\n *          text : 'EventColor'\n *       }\n *    ]\n * });\n * ```\n *\n * {@inlineexample Scheduler/column/EventColorColumn.js}\n *\n * @extends Grid/column/ColorColumn\n * @classtype eventcolor\n * @column\n */\nexport default class EventColorColumn extends ColorColumn {\n    static $name = 'EventColorColumn';\n    static type = 'eventcolor';\n    static defaults = {\n        colorEditorType : 'eventcolorpicker',\n        field           : 'eventColor'\n    };\n}\nColumnStore.registerColumnType(EventColorColumn);\nEventColorColumn._$name = 'EventColorColumn';", "import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\n/**\n * @module Scheduler/column/ResourceCollapseColumn\n */\n/**\n * A column toggling the resource {@link Scheduler.model.ResourceModel#field-eventLayout} between `none` and `stack`.\n *\n * {@inlineexample Scheduler/column/ResourceCollapseColumn.js}\n *\n * @extends Grid/column/Column\n * @classtype resourceCollapse\n * @column\n */\nexport default class ResourceCollapseColumn extends Column {\n    static get $name() {\n        return 'ResourceCollapseColumn';\n    }\n    static get type() {\n        return 'resourceCollapse';\n    }\n    static get defaults() {\n        return {\n            /** @hideconfigs renderer */\n            width     : '3em',\n            align     : 'center',\n            sortable  : false,\n            groupable : false,\n            editor    : false,\n            minWidth  : 0,\n            cellCls   : 'b-resourcecollapse-cell',\n            renderer  : ({ record }) => ({\n                tag   : 'i',\n                class : {\n                    'b-icon'                 : 1,\n                    'b-icon-expand-resource' : 1,\n                    'b-flip'                 : record.eventLayout !== 'none'\n                }\n            })\n        };\n    }\n    onCellClick({ record, event }) {\n        // Prevent native scrolling on space key press\n        event.preventDefault();\n        record.eventLayout = record.eventLayout !== 'none' ? 'none' : 'stack';\n    }\n}\nColumnStore.registerColumnType(ResourceCollapseColumn);\nResourceCollapseColumn._$name = 'ResourceCollapseColumn';", "import InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport EventHelper from '../../Core/helper/EventHelper.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport Delayable from '../../Core/mixin/Delayable.js';\n/**\n * @module Scheduler/feature/EventDragSelect\n */\n/**\n * Enables users to click and drag to select events (or assignments in multi assignment mode) inside the Scheduler's\n * timeline. Press CTRL/CMD-key to extend an existing selection.\n *\n * The selection rectangle element is styled using the CSS class name `b-dragselect-rect`. You may use application CSS\n * to change its appearance from the default.\n *\n * {@inlineexample Scheduler/feature/EventDragSelect.js}\n *\n * This feature is **disabled** by default.\n * For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * **NOTE:** Incompatible with the {@link Scheduler.feature.EventDragCreate} and the {@link Scheduler.feature.Pan} features.\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *   features : {\n *     eventDragSelect : true,\n *     eventDragCreate : false\n *   }\n * });\n * ```\n *\n * @demo Scheduler/dragselection\n * @extends Core/mixin/InstancePlugin\n * @mixes Core/mixin/Delayable\n * @classtype eventDragSelect\n * @feature\n */\nexport default class EventDragSelect extends Delayable(InstancePlugin) {\n    // region Events\n    /**\n     * Fires on the owning Scheduler before drag selection starts. Return false to prevent the operation.\n     * @event beforeEventDragSelect\n     * @preventable\n     * @on-owner\n     * @param {Event} event The native browser DOM event\n     */\n    //endregion\n    // region Init\n    static $name = 'EventDragSelect';\n    targetSelector = '.b-sch-timeaxis-cell, .b-timeaxissubgrid';\n    construct(client, config) {\n        client.multiEventSelect = true;\n        super.construct(client, config);\n    }\n    //endregion\n    //region Plugin config\n    // Plugin configuration. This plugin chains some of the functions in Scheduler.\n    static pluginConfig = {\n        chain : ['onElementMouseDown', 'onElementMouseMove']\n    };\n    //endregion\n    onElementMouseDown(event) {\n        const\n            me                                            = this,\n            { client }                                    = me,\n            { foregroundCanvas }                          = client,\n            { target, button, touches, clientX, clientY } = event,\n            canvasRect                                    = Rectangle.from(foregroundCanvas, true);\n        // only react to mouse input, and left button\n        // only react to mousedown directly on grid cell or subgrid element\n        if (touches || button !== 0 || me.disabled || !target.matches(me.targetSelector) || client.trigger('beforeEventDragSelect', { event }) === false) {\n            return;\n        }\n        // Prevent grid dragselection (reset by GridSelection)\n        client.preventDragSelect = true;\n        me.startX  = clientX - canvasRect.x;\n        me.startY  = clientY - canvasRect.y;\n        me.element = DomHelper.createElement({\n            tag           : 'div',\n            className     : 'b-dragselect-rect',\n            parent        : client.foregroundCanvas,\n            retainElement : true,\n            style         : {\n                transform : `translate(${me.startX}px, ${me.startY}px)`\n            }\n        });\n        client.navigator.disabled = true;\n        me.mouseUpDetacher = EventHelper.on({\n            element : document,\n            mouseup : 'onDocumentMouseUp',\n            thisObj : me\n        });\n    }\n    get eventRectangles() {\n        const\n            { client }    = this,\n            // When using nested events, only drag select parents\n            eventElements = Array.from(client.foregroundCanvas.children).filter(node => node.matches(`${client.eventSelector}, .b-nested-events-container`));\n        return eventElements.map(el => {\n            const record = client.resolveAssignmentRecord(el);\n            return {\n                rectangle : Rectangle.from(el, true),\n                record,\n                selected  : client.selectedAssignments.includes(record)\n            };\n        });\n    }\n    onElementMouseMove(event) {\n        const\n            me         = this,\n            { client } = me;\n        if (typeof me.startX === 'number') {\n            const\n                canvasRect = me.rectangle = Rectangle.from(me.client.foregroundCanvas, true),\n                x          = Math.min(Math.max(event.clientX - canvasRect.x, 0), canvasRect.width + 1),\n                y          = Math.min(Math.max(event.clientY - canvasRect.y, 0), canvasRect.height + 1),\n                rect       = new Rectangle(me.startX, me.startY, x - me.startX, y - me.startY);\n            DomHelper.setTranslateXY(me.element, rect.x, rect.y);\n            me.element.style.width  = `${rect.width}px`;\n            me.element.style.height = `${rect.height}px`;\n            if (!me.dragging) {\n                client.element.classList.add('b-dragselecting');\n                if (!event.ctrlKey && !event.metaKey) {\n                    client.clearEventSelection();\n                }\n                me.originalSelection  = client.selectedAssignments.slice();\n                me.subGridElementRect = Rectangle.from(client.timeAxisSubGridElement, true);\n                // No key processing during drag selection\n                client.navigator.disabled = true;\n                client.enableScrollingCloseToEdges(client.timeAxisSubGrid);\n                me.dragging = true;\n            }\n            me.updateSelection();\n        }\n    }\n    onDocumentMouseUp(event) {\n        const\n            me                                 = this,\n            { client }                         = me,\n            { selectedAssignments, navigator } = client;\n        client.disableScrollingCloseToEdges(client.timeAxisSubGrid);\n        if (!me.dragging && client.deselectAllOnScheduleClick) {\n            client.clearEventSelection();\n        }\n        me.element?.remove();\n        client.element.classList.remove('b-dragselecting');\n        me.startX = me.startY = null;\n        // Navigator will react to the 'click' event which clears selection, bypass this\n        navigator.skipNextClick = client.timeAxisSubGridElement.contains(event.target);\n        navigator.disabled      = false;\n        me.dragging = false;\n        // If we selected something, focus last selected event so keyboard navigation works\n        if (selectedAssignments.length) {\n            navigator.skipScrollIntoView = true;\n            client.activeAssignment      = selectedAssignments[selectedAssignments.length - 1];\n            navigator.activeItem?.focus();\n            navigator.skipScrollIntoView = false;\n        }\n        me.mouseUpDetacher();\n    }\n    updateSelection() {\n        const\n            me            = this,\n            selectionRect = me.rectangle = Rectangle.from(me.element, true),\n            {\n                eventRectangles,\n                client\n            }             = me,\n            // If any currently selected assignments have had their DOM representation\n            // released due to being scrolled out of view, they must remain selected.\n            // Collect assignments which have no DOM representation as the initial\n            // selection.\n            selection     = client.selectedAssignments.reduce((r, a) => {\n                if (!client.getElementFromAssignmentRecord(a)) {\n                    r.push(a);\n                }\n                return r;\n            }, []);\n        for (const assignmentData of eventRectangles) {\n            if (selectionRect.intersect(assignmentData.rectangle, true)) {\n                assignmentData.selected = true;\n                selection.push(assignmentData.record);\n            }\n        }\n        selection.push(...me.originalSelection);\n        client.selectedAssignments = selection;\n    }\n}\nEventDragSelect._$name = 'EventDragSelect'; GridFeatureManager.registerFeature(EventDragSelect, false, 'Scheduler');\n", "import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport AttachToProjectMixin from '../data/mixin/AttachToProjectMixin.js';\nimport NonWorkingTimeMixin from './mixin/NonWorkingTimeMixin.js';\nimport InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\n/**\n * @module Scheduler/feature/EventNonWorkingTime\n */\n/**\n * Feature that allows rendering non-working time ranges into event bars (weekends for Scheduler, effective calendar for\n * SchedulerPro):\n *\n * {@inlineexample Scheduler/feature/EventNonWorkingTime.js}\n *\n * Please note that to not clutter the view (and have a large negative effect on performance) the feature bails out of\n * rendering ranges for very zoomed out views (see {@link #config-maxTimeAxisUnit} for details).\n *\n * This feature is **disabled** by default.\n * For info on enabling it, see {@link Grid/view/mixin/GridFeatures}.\n *\n * @extends Scheduler/feature/AbstractTimeRanges\n * @extends Core/mixin/InstancePlugin\n * @classtype eventNonWorkingTime\n * @mixes Scheduler/feature/mixin/NonWorkingTimeMixin\n * @feature\n */\nexport default class EventNonWorkingTime extends InstancePlugin.mixin(AttachToProjectMixin, NonWorkingTimeMixin) {\n    static $name = 'EventNonWorkingTime';\n    static pluginConfig = {\n        chain : [\n            'onTimeAxisViewModelUpdate',\n            'updateLocalization',\n            'onEventDataGenerated'\n        ]\n    };\n    // Cannot use `static properties = {}`, new Map would pollute the prototype\n    static get properties() {\n        return {\n            calendarRangeCache : new Map()\n        };\n    }\n    doDisable(disable) {\n        this.client.refresh();\n        super.doDisable(disable);\n    }\n    attachToCalendarManagerStore(store) {\n        super.attachToCalendarManagerStore(store);\n        const me = this;\n        store.ion({\n            name    : 'calendarManagerStore',\n            change  : 'onCalendarChange',\n            thisObj : me\n        });\n        // Schedulers calendar is not part of the calendar manager store\n        if (me.client.isScheduler) {\n            me.project.effectiveCalendar.intervals.ion({\n                name    : 'calendarManagerStore',\n                change  : 'onCalendarChange',\n                thisObj : me\n            });\n        }\n        me.setupDefaultCalendar();\n    }\n    onCalendarChange() {\n        this.calendarRangeCache.clear();\n    }\n    onTimeAxisViewModelUpdate() {\n        this.calendarRangeCache.clear();\n    }\n    //region Draw\n    getRangeDomConfig(timeRange, minDate, maxDate, relativeTo) {\n        const\n            me         = this,\n            { client } = me,\n            { rtl }    = client,\n            startPos   = client.getCoordinateFromDate(DateHelper.max(timeRange.startDate, minDate)) - relativeTo,\n            endPos     = timeRange.endDate ? client.getCoordinateFromDate(DateHelper.min(timeRange.endDate, maxDate)) - relativeTo : startPos,\n            size       = Math.abs(endPos - startPos),\n            isRange    = size > 0,\n            translateX = rtl ? `calc(${startPos}px - 100%)` : `${startPos}px`;\n        return {\n            className : {\n                // Borrow styling from time ranges\n                'b-sch-timerange'      : 1,\n                'b-sch-range'          : 1,\n                'b-sch-nonworkingtime' : 1,\n                [timeRange.cls]        : timeRange.cls,\n                'b-rtl'                : rtl\n            },\n            dataset : {\n                id : timeRange.id\n            },\n            elementData : {\n                timeRange\n            },\n            style : client.isVertical\n                ? `transform: translateY(${translateX}); ${isRange ? `height:${size}px` : ''};`\n                : `transform: translateX(${translateX}); ${isRange ? `width:${size}px` : ''};`\n        };\n    }\n    getCalendarTimeRanges(calendar) {\n        let cached = this.calendarRangeCache.get(calendar);\n        if (!cached) {\n            cached = super.getCalendarTimeRanges(calendar, true);\n            this.calendarRangeCache.set(calendar, cached);\n        }\n        return cached;\n    }\n    // Render ranges into event bars\n    onEventDataGenerated({ eventRecord, endMS, startMS, start, end, left, top, children }) {\n        if (this.enabled) {\n            const\n                { isVertical } = this.client,\n                // Use combined calendar for Pro & Gantt, project calendar for Scheduler\n                calendar       = eventRecord.effectiveCalendarsCombination ?? this.client.project.calendar;\n            for (const timeRange of this.getCalendarTimeRanges(calendar)) {\n                // Only care about ranges inside the event bar\n                if (timeRange.startDateMS < endMS && timeRange.endDateMS > startMS) {\n                    const domConfig = this.getRangeDomConfig(timeRange, start, end, isVertical ? top : left);\n                    children.push(domConfig);\n                }\n            }\n        }\n    }\n    //endregion\n}\nEventNonWorkingTime._$name = 'EventNonWorkingTime'; GridFeatureManager.registerFeature(EventNonWorkingTime, false, 'Scheduler');\n", "import GridGroupSummary from '../../Grid/feature/GroupSummary.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport Tooltip from '../../Core/widget/Tooltip.js';\n// Actions that trigger rerendering of group summary rows\nconst\n    eventStoreRefreshActions      = {\n        update : 1,\n        filter : 1\n    },\n    assignmentStoreRefreshActions = {\n        add       : 1,\n        remove    : 1,\n        update    : 1,\n        removeAll : 1,\n        filter    : 1\n    };\n/**\n * @module Scheduler/feature/GroupSummary\n */\n// noinspection JSClosureCompilerSyntax\n/**\n * A special version of the Grid GroupSummary feature that enables summaries within scheduler. To use a single summary\n * it is easiest to configure {@link #config-renderer}, for multiple summaries see {@link #config-summaries}.\n *\n * This feature is <strong>disabled</strong> by default. It is **not** supported in vertical mode.\n *\n * {@inlineexample Scheduler/feature/GroupSummary.js}\n *\n * @demo Scheduler/groupsummary\n *\n * @extends Grid/feature/GroupSummary\n * @classtype groupSummary\n * @feature\n *\n * @typings Grid.feature.GroupSummary -> Grid.feature.GridGroupSummary\n */\nexport default class GroupSummary extends GridGroupSummary {\n    //region Config\n    static get $name() {\n        return 'GroupSummary';\n    }\n    static get defaultConfig() {\n        return {\n            /**\n             * Show tooltip containing summary values and labels\n             * @config {Boolean}\n             * @default\n             */\n            showTooltip : true,\n            /**\n             * Array of summary configs which consists of a label and a {@link #config-renderer} function\n             * ```\n             *  summaries : [\n             *      {\n             *         label : 'Label',\n             *         renderer : ({ startDate, endDate, eventStore, resourceStore, events, resources, groupRecord, groupField, groupValue }) => {\n             *             // return display value\n             *             returns '<div>Renderer output</div>';\n             *         }\n             *      }\n             *  ]\n             *  ```\n             * @config {SchedulerSummaryOptions[]}\n             */\n            summaries : null,\n            /**\n             * Renderer function for a single time axis tick in a group summary row.\n             * Should calculate a sum and return HTML as a result.\n             *\n             * ```javascript\n             * new Scheduler({\n             *     features : {\n             *         groupSummary : {\n             *             renderer : ({ startDate, endDate, eventStore, resourceStore, events, resources, groupRecord, groupField, groupValue }) => {\n             *                 // return display value\n             *                 returns '<div>Renderer output</div>';\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * @param {Object} context Rendering context object\n             * @param {Date} context.startDate Tick start date\n             * @param {Date} context.endDate Tick end date\n             * @param {Scheduler.model.EventModel[]} context.events Events which belong to the group\n             * @param {Scheduler.model.ResourceModel[]} context.resources Resources which belong to the group\n             * @param {Scheduler.data.EventStore} context.eventStore Event store\n             * @param {Scheduler.data.ResourceStore} context.resourceStore Resource store\n             * @param {Core.data.Model} context.groupRecord Current groups header row record\n             * @param {String} context.groupField Current groups field name\n             * @param {String} context.groupValue Current groups value\n             * @returns {String} Html content\n             * @config {Function}\n             */\n            renderer : null\n        };\n    }\n    static get properties() {\n        return {\n            footersToUpdate : new Set()\n        };\n    }\n    static get pluginConfig() {\n        return {\n            chain : ['render']\n        };\n    }\n    //endregion\n    //region Init\n    construct(scheduler, config) {\n        const me = this;\n        if (scheduler.isVertical) {\n            throw new Error('GroupSummary feature is not supported in vertical mode');\n        }\n        me.scheduler = scheduler;\n        super.construct(scheduler, config);\n        if (!me.summaries && me.renderer) {\n            me.summaries = [{ renderer : me.renderer }];\n        }\n        if (scheduler.isSchedulerBase) {\n            scheduler.eventStore.ion({\n                changePreCommit : me.onEventStoreChange,\n                thisObj         : me\n            });\n            scheduler.assignmentStore.ion({\n                changePreCommit : me.onAssignmentStoreChange,\n                thisObj         : me\n            });\n            scheduler.ion({\n                timeAxisViewModelUpdate : me.onTimeAxisChange,\n                thisObj                 : me\n            });\n            scheduler.project.ion({\n                dataReady : me.onProjectDataReady,\n                thisObj   : me\n            });\n        }\n    }\n    doDestroy() {\n        this._tip?.destroy();\n        super.doDestroy();\n    }\n    //endregion\n    //region Events\n    onTimeAxisChange() {\n        this.scheduler.rowManager.forEach(row => {\n            if (row.isGroupFooter) {\n                row.render();\n            }\n        });\n    }\n    onEventStoreChange({ action, records, changes }) {\n        // Scheduler does minimal update on event changes, it will not rerender the summary rows.\n        // Need to handle that here\n        if (eventStoreRefreshActions[action]) {\n            const resources = new Set();\n            records.forEach(eventRecord => eventRecord.resources.forEach(r => resources.add(r)));\n            this.afterChange(resources);\n        }\n    }\n    onAssignmentStoreChange({ action, records, changes }) {\n        if (assignmentStoreRefreshActions[action]) {\n            const resources = new Set();\n            records.forEach(assignment => assignment.resource && resources.add(assignment.resource));\n            // Include old resource on reassign\n            if (changes?.resourceId?.oldValue != null) {\n                const oldResource = this.scheduler.resourceStore.getById(changes.resourceId.oldValue);\n                oldResource && resources.add(oldResource);\n            }\n            this.afterChange(resources);\n        }\n    }\n    afterChange(affectedResources) {\n        const { resourceStore } = this.scheduler;\n        // Collect footers to update\n        for (const resourceRecord of affectedResources) {\n            let record = resourceRecord;\n            // Resource might not match a row (out of view, filtered out etc.)\n            // Move up/down until footer is found, or we run out of rows (in case footer is below the buffer)\n            if (this.target === 'header') {\n                while (record && !record.isGroupHeader) {\n                    record = resourceStore.getPrev(record);\n                }\n            }\n            else {\n                while (record && !record.isGroupFooter) {\n                    record = resourceStore.getNext(record);\n                }\n            }\n            const row = this.scheduler.rowManager.getRowFor(record);\n            if (record && row) {\n                this.footersToUpdate.add(row);\n            }\n        }\n    }\n    onProjectDataReady() {\n        const\n            {\n                footersToUpdate,\n                client\n            } = this;\n        // Only update the UI immediately if we are visible\n        if (client.isVisible) {\n            // Re-render only affected footers, once\n            if (footersToUpdate.size) {\n                for (const footer of footersToUpdate) {\n                    // Things happen async, footer might have been destroyed\n                    footer.render?.();\n                }\n                footersToUpdate.clear();\n            }\n        }\n        else {\n            client.whenVisible('refresh', client, [true]);\n        }\n    }\n    //endregion\n    //region Render\n    /**\n     * Called before rendering row contents, used to reset rows no longer used as group summary rows\n     * @private\n     */\n    onBeforeRenderRow({ row, record }) {\n        if (row.isGroupFooter && !record.meta.hasOwnProperty('groupFooterFor')) {\n            const timeaxisCell = row.elements.normal.querySelector('.b-sch-timeaxis-cell');\n            // remove summary cells if exist\n            if (timeaxisCell) {\n                timeaxisCell.innerHTML = '';\n            }\n        }\n        super.onBeforeRenderRow(...arguments);\n    }\n    /**\n     * Called by parent class to fill timeaxis with summary contents. Generates tick \"cells\" and populates them with\n     * summaries.\n     * ```\n     * <div class=\"b-timeaxis-group-summary\">\n     *     <div class=\"b-timeaxis-tick\">\n     *         <div class=\"b-timeaxix-summary-value\">x</div>\n     *         ...\n     *     </div>\n     *     ...\n     * </div>\n     * ```\n     * @private\n     */\n    generateHtml(column, records, cls, groupRecord, groupField, groupValue) {\n        if (column.type === 'timeAxis') {\n            const\n                me             = this,\n                { scheduler }  = me,\n                { eventStore } = scheduler,\n                colCfg         = scheduler.timeAxisViewModel.columnConfig;\n            let html = '';\n            // group events by ticks info once here to avoid performance lags\n            // should be inside `scheduler.isEngineReady` check to make sure all events were calculated\n            // https://github.com/bryntum/support/issues/2977\n            const eventsByTick = scheduler.getResourcesEventsPerTick(records, ({ event }) => {\n                return event.resources.some(resource => records.includes(resource)) && (!eventStore.isFiltered || eventStore.records.includes(event));\n            });\n            scheduler.timeAxis.forEach((tick, idx) => {\n                const\n                    groupEvents = eventsByTick[idx] || [],\n                    sumHtml     = me.summaries.map(config => {\n                        // summary renderer used to calculate and format value\n                        const value = config.renderer({\n                            startDate     : tick.startDate,\n                            endDate       : tick.endDate,\n                            resourceStore : scheduler.resourceStore,\n                            events        : groupEvents,\n                            resources     : records,\n                            eventStore,\n                            groupRecord,\n                            groupField,\n                            groupValue\n                        });\n                        return `<div class=\"b-timeaxis-summary-value\">${value}</div>`;\n                    }).join('');\n                // get width on column index from the last header config\n                html += `<div class=\"b-timeaxis-tick\" style=\"width: ${colCfg[colCfg.length - 1][idx].width}px\">${sumHtml}</div>`;\n            });\n            return `<div class=\"b-timeaxis-group-summary\">${html}</div>`;\n        }\n        return super.generateHtml(column, records, cls, groupRecord, groupField, groupValue);\n    }\n    /**\n     * Overrides parents function to return correct summary count, used when sizing row\n     * @private\n     */\n    updateSummaryHtml(cellElement, column, records) {\n        const count = super.updateSummaryHtml(cellElement, column, records);\n        if (column.type === 'timeAxis') {\n            const result = {\n                count  : 0,\n                height : 0\n            };\n            this.summaries.forEach(config => {\n                if (config.height) {\n                    result.height += config.height;\n                }\n                else {\n                    result.count++;\n                }\n            });\n            return result;\n        }\n        return count;\n    }\n    /**\n     * Generates tooltip contents for hovered summary tick\n     * @private\n     */\n    getTipHtml({ activeTarget }) {\n        const\n            me    = this,\n            index = Array.from(activeTarget.parentElement.children).indexOf(activeTarget),\n            tick  = me.scheduler.timeAxis.getAt(index);\n        let tipHtml = `<header>${me.L('L{Summary.Summary for}', me.scheduler.getFormattedDate(tick.startDate))}</header>`,\n            showTip = false;\n        DomHelper.forEachSelector(activeTarget, '.b-timeaxis-summary-value', (element, i) => {\n            const\n                label = me._labels[i],\n                text  = element.innerText.trim();\n            tipHtml += `<label>${label || ''}</label><div class=\"b-timeaxis-summary-value\">${text}</div>`;\n            if (element.innerHTML) {\n                showTip = true;\n            }\n        });\n        return showTip ? tipHtml : null;\n    }\n    /**\n     * Initialize tooltip on render\n     * @private\n     */\n    render() {\n        const\n            me            = this,\n            { scheduler } = me;\n        if (scheduler.isSchedulerBase) {\n            // if any sum config has a label, init tooltip\n            if (me.summaries?.some(config => config.label) && me.showTooltip && !me._tip) {\n                me._labels = me.summaries.map(config => config.label || '');\n                me._tip = new Tooltip({\n                    id             : `${scheduler.id}-groupsummary-tip`,\n                    cls            : 'b-timeaxis-summary-tip',\n                    hoverDelay     : 0,\n                    hideDelay      : 0,\n                    forElement     : scheduler.timeAxisSubGridElement,\n                    anchorToTarget : true,\n                    forSelector    : '.b-timeaxis-group-summary .b-timeaxis-tick',\n                    getHtml        : me.getTipHtml.bind(me)\n                });\n            }\n        }\n    }\n    //endregion\n    removeSummaryElements(rowEl) {\n        const summaryElement = rowEl.querySelector('.b-timeaxis-group-summary');\n        summaryElement?.remove();\n        super.removeSummaryElements();\n    }\n    hasSummary(column) {\n        return super.hasSummary(column) || column.isTimeAxisColumn;\n    }\n}\n// Override Grids GroupSummary with this improved version\nGroupSummary._$name = 'GroupSummary'; GridFeatureManager.registerFeature(GroupSummary, false, 'Scheduler');\n", "import InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport EventHelper from '../../Core/helper/EventHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\n/**\n * @module Scheduler/feature/HeaderZoom\n */\n/**\n * Enables users to click and drag to zoom to a date range in Scheduler's header time axis. Only supported in horizontal\n * mode.\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *   features : {\n *     headerZoom : true\n *   }\n * });\n * ```\n *\n * {@inlineexample Scheduler/feature/HeaderZoom.js}\n *\n * <div class=\"note\">Not compatible with the {@link Scheduler/feature/TimeSelection} feature.</div>\n *\n * This feature is **disabled** by default.\n * For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * @extends Core/mixin/InstancePlugin\n * @classtype headerZoom\n * @feature\n */\nexport default class HeaderZoom extends InstancePlugin {\n    static $name = 'HeaderZoom';\n    static get pluginConfig() {\n        return {\n            chain : ['onElementMouseDown', 'onElementMouseMove']\n        };\n    }\n    onElementMouseDown(event) {\n        const me = this;\n        // only react to mouse input, and left button\n        if (event.touches || event.button !== 0 || me.disabled) {\n            return;\n        }\n        // only react to mousedown directly on timeaxis cell\n        if (event.target.closest('.b-sch-header-timeaxis-cell')) {\n            const headerEl = me.client.subGrids.normal.header.headersElement;\n            me.startX = event.clientX;\n            me.element = DomHelper.createElement({\n                parent    : headerEl,\n                tag       : 'div',\n                className : 'b-headerzoom-rect'\n            });\n            me.headerElementRect = Rectangle.from(headerEl);\n            EventHelper.on({\n                element : document,\n                mouseup : 'onMouseUp',\n                thisObj : me,\n                once    : true\n            });\n        }\n    }\n    onElementMouseMove(event) {\n        const me = this;\n        if (typeof me.startX === 'number') {\n            const\n                x     = Math.max(event.clientX, me.headerElementRect.left),\n                left  = Math.min(me.startX, x),\n                width = Math.abs(me.startX - x),\n                rect  = new Rectangle(left - me.headerElementRect.x + me.client.scrollLeft, 0, width, me.headerElementRect.height);\n            DomHelper.setTranslateX(me.element, rect.left);\n            me.element.style.width = rect.width + 'px';\n        }\n    }\n    onMouseUp() {\n        const me = this;\n        if (typeof me.startX === 'number') {\n            const\n                { client } = me,\n                rect       = Rectangle.from(me.element),\n                startDate  = client.getDateFromCoordinate(rect.left, 'round', false),\n                endDate    = client.getDateFromCoordinate(rect.right, 'round', false);\n            me.element.remove();\n            me.startX = null;\n            client.zoomToSpan({\n                startDate,\n                endDate\n            });\n        }\n    }\n}\nHeaderZoom._$name = 'HeaderZoom'; GridFeatureManager.registerFeature(HeaderZoom, false, 'Scheduler');\n", "import InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport EventHelper from '../../Core/helper/EventHelper.js';\n/**\n * @module Scheduler/feature/Pan\n */\n/**\n * Makes the scheduler's timeline pannable by dragging with the mouse. Try it out in the demo below.\n *\n * {@inlineexample Scheduler/feature/Pan.js}\n *\n * ```javascript\n * // Enable Pan\n * const scheduler = new Scheduler({\n *   features : {\n *     pan : true,\n *     eventDragCreate : false\n *   }\n * });\n * ```\n *\n * This feature is **disabled** by default.\n * For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * <div class=\"note\">Incompatible with the {@link Scheduler.feature.EventDragCreate} and the\n * {@link Scheduler.feature.EventDragSelect} features.</div>\n *\n * @extends Core/mixin/InstancePlugin\n * @classtype pan\n * @feature\n */\nexport default class Pan extends InstancePlugin {\n    // region Init\n    static $name = 'Pan';\n    static configurable = {\n        /**\n         * Set to `false` to not pan horizontally\n         * @prp {Boolean}\n         * @default\n         */\n        horizontal : true,\n        /**\n         * Set to `false` to not pan vertically\n         * @prp {Boolean}\n         * @default\n         */\n        vertical : true,\n        /**\n         * Set to `false` to not pan horizontally when dragging in the time axis header\n         * @prp {Boolean}\n         * @default\n         */\n        enableInHeader : true\n    };\n    get targetSelector() {\n        return `.b-sch-timeaxis-cell,.b-timeline-subgrid${this.enableInHeader ? ',.b-sch-header-timeaxis-cell,.b-sch-header-text' : ''}`;\n    }\n    //endregion\n    //region Plugin config\n    static get pluginConfig() {\n        return {\n            chain : ['onElementMouseDown']\n        };\n    }\n    //endregion\n    // region Events\n    /**\n     * Fires on the owning Scheduler or Gantt widget before pan starts. Return `false` to prevent the operation.\n     * @event beforePan\n     * @preventable\n     * @on-owner\n     * @param {Event} event The native browser DOM event\n     */\n    //endregion\n    onElementMouseDown(event) {\n        const\n            me                                            = this,\n            { client }                                    = me,\n            { button, touches, target, clientX, clientY } = event,\n            dragFeature                                   = client.features.taskDrag || client.features.eventDrag,\n            enablePanOnEvents                             = client.readOnly || !dragFeature?.enabled;\n        // only react to mouse input, and left button\n        if (touches || button !== 0 || me.disabled || client.trigger('beforePan', { event }) === false) {\n            return;\n        }\n        // only react to mousedown directly on grid cell, subgrid element or if drag is disabled - the events too\n        if (target.matches(me.targetSelector) || (enablePanOnEvents && target.closest(client.eventSelector))) {\n            me.mouseX   = clientX;\n            me.mouseY   = clientY;\n            me.onHeader = me.enableInHeader && target.closest('.b-sch-header-timeaxis-cell');\n            me.mouseDetacher = EventHelper.on({\n                element   : document,\n                mousemove : 'onMouseMove',\n                mouseup   : 'onMouseUp',\n                thisObj   : me\n            });\n        }\n    }\n    onMouseMove(event) {\n        const\n            me         = this,\n            { client } = me,\n            xScroller  = client.timeAxisSubGrid.scrollable,\n            yScroller  = client.scrollable,\n            x          = event.clientX,\n            y          = event.clientY;\n        event.preventDefault();\n        if (me.vertical && (client.isVertical || !me.onHeader)) {\n            yScroller.scrollBy(0, me.mouseY - y);\n        }\n        if (me.horizontal && (client.isHorizontal || !me.onHeader)) {\n            xScroller.scrollBy(me.mouseX - x);\n        }\n        me.mouseX = x;\n        me.mouseY = y;\n    }\n    onMouseUp() {\n        this.mouseDetacher();\n        this.mouseDetacher = null;\n    }\n    /**\n     * Yields `true` if a pan gesture is in process.\n     * @property {Boolean}\n     * @readonly\n     */\n    get isActive() {\n        return Boolean(this.mouseDetacher);\n    }\n    //endregion\n}\nPan._$name = 'Pan'; GridFeatureManager.registerFeature(Pan, false, ['Scheduler', 'Gantt']);\n", "import ContextMenuBase from '../../Core/feature/base/ContextMenuBase.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\n/**\n * @module Scheduler/feature/ResourceMenu\n */\n/**\n * Applicable only for Scheduler in `vertical` mode. Right click resource header cells to display a context menu.\n *\n * To invoke the menu in a keyboard-accessible manner, use the `SPACE` key when a resource cell is focused.\n *\n * {@inlineexample Scheduler/feature/ResourceMenu.js}\n *\n * ### Default menu items\n *\n * The ResourceMenu feature provides only one item by default:\n *\n * | Reference              | Text   | Weight | Description         |\n * |------------------------|--------|--------|---------------------|\n * | `remove`               | Delete | 100    | Delete the resource |\n *\n * ### Customizing the menu items\n *\n * The menu items in the resource menu can be customized, existing items can be changed or removed,\n * and new items can be added. This is handled using the `items` config of the feature.\n *\n * Add extra items for all columns:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     mode     : 'vertical',\n *     features : {\n *         resourceMenu : {\n *             items : {\n *                 extraItem : {\n *                     text   : 'My cell item',\n *                     icon   : 'fa fa-bus',\n *                     weight : 200,\n *                     onItem : () => ...\n *                 }\n *             }\n *         }\n *     }\n * });\n *\n * Remove an existing item:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     mode     : 'vertical',\n *     features : {\n *         resourceMenu : {\n *             items : {\n *                 remove : null\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Customize existing item:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     mode     : 'vertical',\n *     features : {\n *         resourceMenu : {\n *             items : {\n *                 remove : {\n *                     text : 'Remove',\n *                     icon : 'b-fa b-fa-dumpster'\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * It is also possible to manipulate the default items and add new items in the processing function:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     mode     : 'vertical',\n *     features : {\n *         resourceMenu : {\n *             processItems({items, record}) {\n *                 if (record.cost > 5000) {\n *                     items.myItem = { text : 'Split cost' };\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * <div class=\"note\">The `processItems` implementation my be an `async` function which `awaits` a result to\n * mutate the `items` object.</div>\n *\n * This feature is **disabled** by default.\n *\n * @extends Core/feature/base/ContextMenuBase\n * @demo Scheduler/vertical\n * @classtype resourceMenu\n * @feature\n */\nexport default class ResourceMenu extends ContextMenuBase {\n    //region Config\n    static $name = 'ResourceMenu';\n    static configurable = {\n        /**\n         * A function called before displaying the menu that allows manipulations of its items.\n         * Returning `false` from this function prevents the menu being shown.\n         *\n         * ```javascript\n         * features : {\n         *     resourceMenu : {\n         *         processItems({ items, record, column }) {\n         *             // Add or hide existing items here as needed\n         *             items.myAction = {\n         *                 text   : 'Cool action',\n         *                 icon   : 'b-fa b-fa-fw b-fa-ban',\n         *                 onItem : () => console.log(`Clicked ${record.name}`),\n         *                 weight : 1000 // Move to end\n         *             };\n         *\n         *             if (!record.allowDelete) {\n         *                 items.remove.hidden = true;\n         *             }\n         *         }\n         *     }\n         * },\n         * ```\n         *\n         * @config {Function}\n         * @param {Object} context An object with information about the menu being shown\n         * @param {Scheduler.model.ResourceModel} context.resourceRecord The record representing the current resource\n         * @param {Object<String,MenuItemConfig|Boolean|null>} context.items An object containing the\n         * {@link Core.widget.MenuItem menu item} configs keyed by their id\n         * @param {Event} context.event The DOM event object that triggered the show\n         * @returns {Boolean|null} Returning `false` from this function prevents the menu being shown\n         *\n         * @preventable\n         */\n        processItems : null,\n        /**\n         * {@link Core.widget.Menu} items object containing named child menu items to apply to the feature's\n         * provided context menu.\n         *\n         * This may add extra items as below, but you can also configure, or remove any of the default items by\n         * configuring the name of the item as `null`\n         *\n         * ```javascript\n         * features : {\n         *     resourceMenu : {\n         *         // This object is applied to the Feature's predefined default items\n         *         items : {\n         *             switchToDog : {\n         *                 text : 'Dog',\n         *                 icon : 'b-fa b-fa-fw b-fa-dog',\n         *                 onItem({record}) {\n         *                     record.dog = true;\n         *                     record.cat = false;\n         *                 },\n         *                 weight : 500     // Make this second from end\n         *             },\n         *             switchToCat : {\n         *                 text : 'Cat',\n         *                 icon : 'b-fa b-fa-fw b-fa-cat',\n         *                 onItem({record}) {\n         *                     record.dog = false;\n         *                     record.cat = true;\n         *                 },\n         *                 weight : 510     // Make this sink to end\n         *             },\n         *             remove : {\n         *                 // Change icon for the delete item\n         *                 icon : 'b-fa b-fa-times'\n         *             }\n         *         }\n         *     }\n         * },\n         * ```\n         *\n         * @config {Object<String,MenuItemConfig|Boolean|null>}\n         */\n        items : null,\n        type : 'resource'\n    };\n    static get pluginConfig() {\n        const config = super.pluginConfig;\n        config.chain.push('populateResourceMenu');\n        return config;\n    }\n    //endregion\n    //region Events\n    /**\n     * This event fires on the owning scheduler before the context menu is shown for a resource.\n     * Allows manipulation of the items to show in the same way as in the {@link #config-processItems}.\n     *\n     * Returning `false` from a listener prevents the menu from being shown.\n     *\n     * @event resourceMenuBeforeShow\n     * @preventable\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source The grid\n     * @param {Core.widget.Menu} menu The menu\n     * @param {Object<String,MenuItemConfig>} items Menu item configs\n     * @param {Grid.column.Column} column Column\n     * @param {Scheduler.model.ResourceModel} resourceRecord Record\n     */\n    /**\n     * This event fires on the owning scheduler after the context menu is shown for a resource.\n     * @event resourceMenuShow\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source The grid\n     * @param {Core.widget.Menu} menu The menu\n     * @param {Object<String,MenuItemConfig>} items Menu item configs\n     * @param {Scheduler.model.ResourceModel} record Record\n     */\n    /**\n     * This event fires on the owning scheduler when an item is selected in the context menu.\n     * @event resourceMenuItem\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source The grid\n     * @param {Core.widget.Menu} menu The menu\n     * @param {Core.widget.MenuItem} item Selected menu item\n     * @param {Scheduler.model.ResourceModel} record Record\n     */\n    /**\n     * This event fires on the owning grid when a check item is toggled in the context menu.\n     * @event resourceMenuToggleItem\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source The grid\n     * @param {Core.widget.Menu} menu The menu\n     * @param {Core.widget.MenuItem} item Selected menu item\n     * @param {Scheduler.model.ResourceModel} resourceRecord Record\n     * @param {Boolean} checked Checked or not\n     */\n    //endregion\n    //region Menu handlers\n    getDataFromEvent(event) {\n        const\n            cellElement = event.target.closest('.b-resourceheader-cell'),\n            resourceId  = cellElement?.dataset.resourceId;\n        // Only yield data to show a menu if we are on a cell\n        if (resourceId) {\n            const resourceRecord = this.client.resourceStore.getById(resourceId);\n            return {\n                cellElement,\n                resourceRecord\n            };\n        }\n    }\n    //endregion\n    //region Getters/Setters\n    populateResourceMenu({ items, resourceRecord }) {\n        const { client } = this;\n        if (!client.readOnly) {\n            items.remove = {\n                text        : 'L{CellMenu.removeRow}',\n                localeClass : this,\n                icon        : 'b-fw-icon b-icon-trash',\n                cls         : 'b-separator',\n                weight      : 100,\n                disabled    : resourceRecord.readOnly,\n                onItem      : () => client.resourceStore.remove(resourceRecord)\n            };\n        }\n    }\n    get showMenu() {\n        return true;\n    }\n    //endregion\n}\nResourceMenu.featureClass = '';\nResourceMenu._$name = 'ResourceMenu'; GridFeatureManager.registerFeature(ResourceMenu, false, ['Scheduler']);\n", "import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport ResourceTimeRangesBase from './base/ResourceTimeRangesBase.js';\nimport ResourceTimeRangeStore from '../data/ResourceTimeRangeStore.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\n/**\n * @module Scheduler/feature/ResourceTimeRanges\n */\n/**\n * Feature that draws resource time ranges, shaded areas displayed behind events. These zones are similar to events in\n * that they have a start and end date but different in that they do not take part in the event layout, and they always\n * occupy full row height.\n *\n * {@inlineexample Scheduler/feature/ResourceTimeRanges.js}\n *\n * Each time range is represented by an instances of {@link Scheduler.model.ResourceTimeRangeModel}, held in a\n * {@link Scheduler.data.ResourceTimeRangeStore}. Currently they are readonly UI-wise, but can be manipulated on\n * the data level. To style the rendered elements, use the {@link Scheduler.model.TimeSpan#field-cls} field or use the\n * {@link Scheduler.model.ResourceTimeRangeModel#field-timeRangeColor} field.\n *\n * Data can be provided either using the {@link Scheduler.view.Scheduler#config-resourceTimeRanges} config on the\n * Scheduler config object:\n *\n * ```javascript\n * new Scheduler({\n *     ...\n *    features :  {\n *        resourceTimeRanges : true\n *    },\n *\n *    // Data specified directly on the Scheduler instance\n *    resourceTimeRanges : [\n *        // Either specify startDate & endDate or startDate & duration when defining a range\n *        { startDate : new Date(2019,0,1), endDate : new Date(2019,0,3), name : 'Occupied', timeRangeColor : 'red' },\n *        { startDate : new Date(2019,0,3), duration : 2, durationUnit : 'd', name : 'Available' },\n *    ]\n * })\n * ```\n *\n * Or the {@link Scheduler/view/Scheduler#config-resourceTimeRangeStore} config on the Scheduler config object:\n *\n * ```javascript\n * new Scheduler({\n *     ...\n *     features :  {\n *         resourceTimeRanges : true\n *     },\n *     resourceTimeRangeStore : new ResourceTimeRangeStore({\n *         readUrl : './resourceTimeRanges/'\n *     })\n * })\n * ```\n *\n * Or on the project, using the {@link Scheduler/model/mixin/ProjectModelMixin#config-resourceTimeRangesData} config.\n *\n * This feature is **disabled** by default.\n * For info on enabling it, see {@link Grid/view/mixin/GridFeatures}.\n *\n * ## Recurring ranges support\n *\n * Resource time ranges can also be recurring, as seen in the example below:\n *\n * ```js\n * const resourceTimeRangeStore = new ResourceTimeRangeStore({\n *     data : [{\n *         id             : 1,\n *         resourceId     : 'r1',\n *         startDate      : '2019-01-01T11:00',\n *         endDate        : '2019-01-01T13:00',\n *         name           : 'Lunch',\n *         // this time range will repeat every day\n *         recurrenceRule : 'FREQ=DAILY'\n *     }]\n * });\n *\n * ```\n *\n * ## Rendering custom HTML markup\n *\n * Sometimes it is handy to be able to output custom HTML into the range elements. This can be done using the\n * {@link Scheduler/view/Scheduler#function-resourceTimeRangeRenderer} method.\n *\n * ```javascript\n * // You can use a custom renderer method to output the contents of the range elements. The return value should\n * // be a string or a DOMConfig object defining the markup to generate\n * new Scheduler({\n *     resourceTimeRangeRenderer{ resourceTimeRangeRecord, resourceRecord, renderData }) {\n *         if (resourceTimeRangeRecord.important) {\n *             // Add a CSS class to the range element\n *             renderData.cls.important = 1;\n *\n *             return [\n *                 {\n *                     tag   : 'i',\n *                     class : 'b-fa b-fa-warning'\n *                 },\n *                 {\n *                     tag  : 'strong',\n *                     text : resourceTimeRangeRecord.name\n *                 }\n *             ];\n *         }\n *         return resourceTimeRangeRecord.name;\n *     }\n * })\n * ```\n *\n * @extends Scheduler/feature/base/ResourceTimeRangesBase\n * @demo Scheduler/resourcetimeranges\n * @classtype resourceTimeRanges\n * @feature\n */\nexport default class ResourceTimeRanges extends ResourceTimeRangesBase {\n    //region Config\n    static $name = 'ResourceTimeRanges';\n    static configurable = {\n        rangeCls : 'b-sch-resourcetimerange',\n        /**\n         * Set to `true` to allow mouse interactions with the rendered range elements. By default, the range elements\n         * are not reachable with the mouse, and only serve as a static background.\n         * @prp {Boolean}\n         * @default\n         */\n        enableMouseEvents : false,\n        /**\n         * Specify value to use for the tabIndex attribute of resource time range elements\n         * @config {Number}\n         * @default\n         */\n        tabIndex : 0,\n        entityName : 'resourceTimeRange'\n    };\n    static get pluginConfig() {\n        const superConfig = super.pluginConfig;\n        return {\n            ...superConfig,\n            assign : ['resolveResourceTimeRangeRecord', 'getElementFromResourceTimeRangeRecord']\n        };\n    }\n    //endregion\n    //region Init\n    attachToProject(project) {\n        const\n            me                     = this,\n            { client : scheduler } = me;\n        super.attachToProject(project);\n        if (!project.resourceTimeRangeStore) {\n            project.resourceTimeRangeStore = scheduler.resourceTimeRangeStore || new ResourceTimeRangeStore({\n                owner : me\n            });\n            const { crudManager } = scheduler;\n            if (crudManager && !crudManager.resourceTimeRangeStore) {\n                crudManager.resourceTimeRangeStore = project.resourceTimeRangeStore;\n            }\n        }\n        const store = project.resourceTimeRangeStore;\n        if (!me.exposedOnScheduler) {\n            // ResourceZones can be set on scheduler or feature, for convenience\n            if (scheduler.resourceTimeRanges) {\n                store.add(scheduler.resourceTimeRanges);\n                delete scheduler.resourceTimeRanges;\n            }\n            // expose getter/setter for resourceTimeRanges on scheduler\n            Object.defineProperty(scheduler, 'resourceTimeRanges', {\n                get : () => store.records,\n                set : resourceTimeRanges => store.data = resourceTimeRanges\n            });\n            me.exposedOnScheduler = true;\n        }\n        // Link to projects resourceStore if not already linked to one\n        if (!store.resourceStore) {\n            store.resourceStore = project.resourceStore;\n        }\n        me.detachListeners('store');\n        store.ion({\n            name    : 'store',\n            change  : me.onStoreChange,\n            thisObj : me\n        });\n    }\n    // Called by ProjectConsumer after a new store is assigned at runtime\n    attachToResourceTimeRangeStore(store) {\n        this.attachToProject(this.project);\n        this.client.refresh();\n    }\n    get store() {\n        return this.project.resourceTimeRangeStore;\n    }\n    //endregion\n    //region Events\n    /**\n     * Triggered for mouse down ona resource time range. Only triggered if the ResourceTimeRange feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceTimeRangeMouseDown\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.feature.ResourceTimeRanges} feature The ResourceTimeRange feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n    /**\n     * Triggered for mouse up ona resource time range. Only triggered if the ResourceTimeRange feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceTimeRangeMouseUp\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.feature.ResourceTimeRanges} feature The ResourceTimeRange feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n    /**\n     * Triggered for click on a resource time range. Only triggered if the ResourceTimeRange feature is configured with\n     * `enableMouseEvents: true`.\n     * @event resourceTimeRangeClick\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.feature.ResourceTimeRanges} feature The ResourceTimeRange feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n    /**\n     * Triggered for double-click on a resource time range. Only triggered if the ResourceTimeRange feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceTimeRangeDblClick\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.feature.ResourceTimeRanges} feature The ResourceTimeRange feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n    /**\n     * Triggered for right-click on a resource time range. Only triggered if the ResourceTimeRange feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceTimeRangeContextMenu\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.feature.ResourceTimeRanges} feature The ResourceTimeRange feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n    /**\n     * Triggered for mouse over on a resource time range. Only triggered if the ResourceTimeRange feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceTimeRangeMouseOver\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.feature.ResourceTimeRanges} feature The ResourceTimeRange feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n    /**\n     * Triggered for mouse out of a resource time range. Only triggered if the ResourceTimeRange feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceTimeRangeMouseOut\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.feature.ResourceTimeRanges} feature The ResourceTimeRange feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n    //endregion\n    /**\n     * Returns a resource time range record from the passed element\n     * @param {HTMLElement} rangeElement\n     * @returns {Scheduler.model.ResourceTimeRangeModel}\n     * @on-owner\n     * @function resolveResourceTimeRangeRecord\n     * @category DOM\n     */\n    /**\n     * Returns the element for the passed resource time range record, if rendered into DOM.\n     * @param {Scheduler.model.ResourceTimeRangeModel} record\n     * @returns {HTMLElement}\n     * @on-owner\n     * @function getElementFromResourceTimeRangeRecord\n     * @category DOM\n     */\n    // Called on render of resources events to get events to render. Add any ranges\n    // (chained function from Scheduler)\n    getEventsToRender(resource, events) {\n        if (!this.disabled) {\n            const { timeRanges } = resource.$original;\n            // if we have ranges and the feature is enabled\n            if (timeRanges?.length) {\n                const { startDate, endDate } = this.client;\n                timeRanges.forEach(timeRange => {\n                    // if this a recurring event let's include its visible occurrences\n                    if (timeRange.isRecurring) {\n                        events.push(...timeRange.getOccurrencesForDateRange(startDate, endDate));\n                    }\n                    else {\n                        events.push(timeRange);\n                    }\n                });\n            }\n        }\n        return events;\n    }\n    /**\n     * An empty function by default, but provided so that you can override it. This function is called each time\n     * a resource time range is rendered into the schedule. It's called with `resourceTimeRangeRecord`, `resourceRecord`,\n     * and `renderData` params.\n     *\n     * **IMPORTANT:** You should never modify any data on the ResourceTimeRangeModel inside this method.\n     *\n     * By default, the DOM markup of a resource time range bar includes placeholders for 'cls' and 'style'. The cls\n     * property is a {@link Core.helper.util.DomClassList} which will be added to the main element. The style property\n     * is an inline style declaration for the main element.\n     *\n     * **IMPORTANT:** When returning content, be sure to consider how that content should be encoded to avoid XSS\n     * (Cross-Site Scripting) attacks. This is especially important when including user-controlled data such as\n     * the event's `name`. The function {@link Core.helper.StringHelper#function-encodeHtml-static} as well as\n     * {@link Core.helper.StringHelper#function-xss-static} can be helpful in these cases.\n     *\n     * ```javascript\n     * resourceTimeRangeRenderer({ resourceTimeRangeRecord, resourceRecord, renderData }) {\n     *     renderData.style = 'color:white'; // You can use inline styles too.\n     *\n     *     // Property names with truthy values are added to the resulting elements CSS class.\n     *     renderData.cls.isModified = resourceTimeRangeRecord.isModified;\n     *\n     *     // Or, you can treat it as a string, but this is less efficient, especially\n     *     // if your renderer wants to *remove* classes that may be there.\n     *     renderData.cls += ' extra-class';\n     *\n     *     return StringHelper.xss`${DateHelper.format(resourceTimeRangeRecord.startDate, 'YYYY-MM-DD')}:\n     *     ${resourceTimeRangeRecord.name}`;\n     * }\n     * ```\n     * @method resourceTimeRangeRenderer\n     * @param {Object} detail An object containing the information needed to render a ResourceTimeRangeModel.\n     * @param {Scheduler.model.ResourceTimeRangeModel} detail.resourceTimeRangeRecord The resource time range record.\n     * @param {Scheduler.model.ResourceModel} detail.resourceRecord The resource record.\n     * @param {Object} detail.renderData An object containing details about the event rendering.\n     * @returns {String|DomConfig|DomConfig[]} A simple string, or a DomConfig object describing the markup\n     * @on-owner\n     */\n    shouldInclude(eventRecord) {\n        return eventRecord.isResourceTimeRange && !eventRecord.isNonWorking && !eventRecord.isCalendarHighlightModel;\n    }\n    renderContent(eventRecord, renderData) {\n        const\n            { client }       = this,\n            { eventContent } = renderData;\n        // Add label or call renderer method\n        if (client.resourceTimeRangeRenderer) {\n            // User has specified a renderer fn, either to return a simple string, or an object intended for the eventBodyTemplate\n            const\n                value = client.resourceTimeRangeRenderer({\n                    resourceTimeRangeRecord : eventRecord,\n                    resourceRecord          : renderData.resourceRecord,\n                    renderData\n                });\n            // Array, assumed to contain DOM configs for eventContent children (or milestone label)\n            if (Array.isArray(value)) {\n                eventContent.children = value;\n            }\n            // Likely HTML content\n            else if (StringHelper.isHtml(value)) {\n                eventContent.children = null;\n                eventContent.html     = value;\n            }\n            // DOM config or plain string can be used as is\n            else if (typeof value === 'string' || typeof value === 'object') {\n                eventContent.children = [value];\n            }\n            // Other, use string\n            else if (value != null) {\n                eventContent.text = value;\n            }\n        }\n        else {\n            super.renderContent(...arguments);\n        }\n    }\n    doDestroy() {\n        if (this.store?.owner === this) {\n            this.store.destroy();\n        }\n        super.doDestroy();\n    }\n}\n// No feature based styling needed, do not add a cls to Scheduler\nResourceTimeRanges.featureClass = '';\nResourceTimeRanges._$name = 'ResourceTimeRanges'; GridFeatureManager.registerFeature(ResourceTimeRanges, false, 'Scheduler');\n", "import GridRowResize from '../../Grid/feature/RowResize.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\n/**\n * @module Scheduler/feature/RowResize\n */\n/**\n * Enables user to change row height by dragging the bottom row border. After a resize operation, the {@link Grid/data/GridRowModel#field-rowHeight}\n * field of the record is updated (when {@link #config-applyToAllRows} is `false`) and the {@link Scheduler/model/ResourceModel#field-eventLayout} of the dragged resource\n * row will be switched to `pack` as a result (only applies when `stack` is used by default).\n * `barMargin` and `resourceMargin` will also be shrunk as you reduce the height of a row.\n *\n * Try hovering the bottom row border in the scheduler below and use drag-drop to change the row height.\n *\n * {@inlineexample Scheduler/feature/RowResize.js}\n *\n * This feature is **disabled** by default.\n * For info on enabling it, see {@link Grid/view/mixin/GridFeatures}.\n *\n * @extends Grid/feature/RowResize\n * @classtype rowResize\n * @feature\n * @demo Scheduler/rowheight\n * @typings Grid.feature.RowResize -> Grid.feature.GridRowResize\n */\nexport default class RowResize extends GridRowResize {\n    static $name = 'RowResize';\n    onResizeStart({ context }) {\n        super.onResizeStart(...arguments);\n        const\n            { client } = this,\n            { record } = context;\n        if (client.isTimelineBase) {\n            client.suspendAnimations();\n            client.crudManager?.suspendAutoSync?.();\n            if (client.features.eventDragCreate) {\n                this._oldDragCreateDisabled = client.features.eventDragCreate.disabled;\n                client.features.eventDragCreate.disabled = true;\n            }\n        }\n        if (client.isSchedulerBase) {\n            if (client.getEventLayout?.(record).type === 'stack') {\n                context.oldEventLayout = record.eventLayout;\n                record.eventLayout     = 'pack';\n                record.rowHeight       = context.elementHeight;\n            }\n            context.originalBarMargin = client.getBarMargin(record);\n            context.originalResourceMarginObject = client.getResourceMarginObject(record);\n            context.originalRecordResourceMargin = record.resourceMargin;\n        }\n    }\n    onResizing({ context }) {\n        const { record, newHeight, elementHeight, originalBarMargin, originalResourceMarginObject } = context;\n        super.onResizing(...arguments);\n        if (!this.applyToAllRows && !this.client.fixedRowHeight && context.valid) {\n            record.beginBatch();\n            record.rowHeight = newHeight;\n            // Reduce barMargin + resourceMargin when shrinking\n            if (newHeight < elementHeight) {\n                const percentage = newHeight / elementHeight;\n                // Shrink barMargin + resourceMargin as well\n                record.barMargin = originalBarMargin * percentage;\n                if (originalResourceMarginObject.start === originalResourceMarginObject.end) {\n                    record.resourceMargin = originalResourceMarginObject.start * percentage;\n                }\n            }\n            record.endBatch();\n        }\n    }\n    onCancel({ context }) {\n        context.record.eventLayout = context.oldEventLayout;\n        context.record.resourceMargin = context.originalRecordResourceMargin;\n        context.record.barMargin = context.originalBarMargin;\n        super.onCancel(...arguments);\n    }\n    cleanup() {\n        const { client } = this;\n        if (client.isTimelineBase) {\n            client.resumeAnimations();\n            client.crudManager?.resumeAutoSync?.();\n            if (client.features.eventDragCreate) {\n                client.features.eventDragCreate.disabled = this._oldDragCreateDisabled;\n            }\n        }\n        super.cleanup();\n    }\n}\nRowResize._$name = 'RowResize'; GridFeatureManager.registerFeature(RowResize, false);\n", "import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport Editor from '../../Core/widget/Editor.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport TaskEditStm from './mixin/TaskEditStm.js';\n/**\n * @module Scheduler/feature/SimpleEventEdit\n */\n/**\n * Feature that displays a text field to edit the event name. You can control the flow of this by listening to the events relayed by this class from the underlying {@link Core.widget.Editor}.\n * To use this feature, you also need to disable the built-in default editing feature:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventEdit       : false,\n *         simpleEventEdit : true\n *     }\n * });\n * ```\n *\n * This feature is **disabled** by default.\n * For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * {@inlineexample Scheduler/feature/SimpleEventEdit.js}\n *\n * @demo Scheduler/simpleeditor\n *\n * @extends Core/mixin/InstancePlugin\n * @classtype simpleEventEdit\n * @feature\n */\nexport default class SimpleEventEdit extends InstancePlugin.mixin(TaskEditStm) {\n    // region Events\n    /**\n     * Fired before the editor is shown to start an edit operation. Returning `false` from a handler vetoes the edit operation.\n     * @event beforeStart\n     * @param {Object} value The value to be edited.\n     * @param {Core.widget.Editor} source The Editor that triggered the event.\n     * @preventable\n     */\n    /**\n     * Fired when an edit operation has begun.\n     * @event start\n     * @param {Object} value The starting value of the field.\n     * @param {Core.widget.Editor} source The Editor that triggered the event.\n     */\n    /**\n     * Fired when an edit completion has been requested, either by `ENTER`, or focus loss (if configured to complete on blur).\n     * The completion may be vetoed, in which case, focus is moved back into the editor.\n     * @event beforeComplete\n     * @param {Object} oldValue The original value.\n     * @param {Object} value The new value.\n     * @param {Core.widget.Editor} source The Editor that triggered the event.\n     * @preventable\n     */\n    /**\n     * Edit has been completed, and any associated record or element has been updated.\n     * @event complete\n     * @param {Object} oldValue The original value.\n     * @param {Object} value The new value.\n     * @param {Core.widget.Editor} source The Editor that triggered the event.\n     */\n    /**\n     * Fired when cancellation has been requested, either by `ESC`, or focus loss (if configured to cancel on blur).\n     * The cancellation may be vetoed, in which case, focus is moved back into the editor.\n     * @event beforeCancel\n     * @param {Object} oldValue The original value.\n     * @param {Object} value The new value.\n     * @param {Core.widget.Editor} source The Editor that triggered the event.\n     * @preventable\n     */\n    /**\n     * Edit has been canceled without updating the associated record or element.\n     * @event cancel\n     * @param {Object} oldValue The original value.\n     * @param {Object} value The value of the field.\n     * @param {Core.widget.Editor} source The Editor that triggered the event.\n     */\n    // endregion\n    //region Config\n    static get $name() {\n        return 'SimpleEventEdit';\n    }\n    static get defaultConfig() {\n        return {\n            /**\n             * The event that shall trigger showing the editor. Defaults to `eventdblclick`, set to `''` or null to\n             * disable editing of existing events.\n             * @config {String}\n             * @default\n             * @category Editor\n             */\n            triggerEvent : 'eventdblclick',\n            /**\n             * The current {@link Scheduler.model.EventModel} record, which is being edited by the event editor.\n             * @property {Scheduler.model.EventModel}\n             * @readonly\n             */\n            eventRecord : null,\n            /**\n             * The {@link Scheduler.model.EventModel} field to edit\n             * @config {String}\n             * @category Editor\n             */\n            field : 'name',\n            /**\n             * The editor configuration, where you can control which widget to show\n             * @config {EditorConfig}\n             * @category Editor\n             */\n            editorConfig : null\n        };\n    }\n    static get pluginConfig() {\n        return {\n            chain : ['onEventEnterKey', 'editEvent']\n        };\n    }\n    //endregion\n    //region Editing\n    construct(scheduler, config) {\n        const me = this;\n        me.scheduler = scheduler;\n        scheduler.eventEdit = me;\n        super.construct(scheduler, config);\n        me.clientListenersDetacher = scheduler.ion({\n            [me.triggerEvent] : ({ eventRecord, eventElement }) => me.editEvent(eventRecord, eventRecord.resource, eventElement),\n            dragcreateend     : me.onDragCreateEnd,\n            thisObj           : me\n        });\n    }\n    doDestroy() {\n        this.clientListenersDetacher();\n        this.editor?.destroy();\n        super.doDestroy();\n    }\n    get eventStore() {\n        return this.scheduler.eventStore;\n    }\n    get project() {\n        return this.client.project;\n    }\n    // region Editor\n    /**\n     * Opens an Editor for the passed event. This function is exposed on Scheduler and can be called as\n     * `scheduler.editEvent()`.\n     * @param {Scheduler.model.EventModel} eventRecord The Event to edit\n     * @param {Scheduler.model.ResourceModel} [resourceRecord] The Resource record for the event.\n     * @on-owner\n     * @async\n     */\n    async editEvent(eventRecord, resourceRecord, element, stmCapture) {\n        const\n            me            = this,\n            { scheduler } = me,\n            { eventEdit } = me.client.features;\n        // If event edit feature also exists, we use simple edit for new events and eventEdit it for already created events\n        if (scheduler.readOnly || me.disabled || eventRecord.readOnly || (eventEdit && !eventEdit.disabled && !eventRecord.isCreating)) {\n            return;\n        }\n        let { editor } = me;\n        // Want to put editor in inner element (b-sch-event) to get correct font size, but when drag creating the proxy\n        // has no inner element\n        element = DomHelper.down(element, scheduler.eventInnerSelector) || element;\n        eventRecord = eventRecord.isAssignment ? eventRecord.event : eventRecord;\n        me.resource = resourceRecord;\n        me.event    = eventRecord;\n        me.element  = element;\n        scheduler.element.classList.add('b-eventeditor-editing');\n        if (editor) {\n            // Positioned editors remove themselves so that their appendTo element\n            // may have its content updated unobstructed.\n            editor.render(scheduler.timeAxisSubGridElement);\n        }\n        else {\n            // Editor is contained in, and owned by the TimeAxisSubGrid to avoid focus flipping out and in.\n            // The editor is an owned descendant of the SubGrid.\n            me.editor = editor = Editor.new({\n                owner        : scheduler.timeAxisSubGrid,\n                appendTo     : scheduler.timeAxisSubGridElement,\n                scrollAction : 'realign',\n                maxHeight    : 40,\n                align        : {\n                    align : scheduler.isHorizontal ? 'c-c' : 't-t'\n                },\n                cls               : 'b-simpleeventeditor',\n                internalListeners : {\n                    complete : 'onEditorComplete',\n                    cancel   : 'onEditorCancel',\n                    thisObj  : me\n                },\n                // Keys must not propagate into the scheduler\n                onInternalKeyDown : keyEvent => keyEvent.stopPropagation()\n            }, me.editorConfig);\n            me.relayEvents(me.editor, ['beforestart', 'start', 'beforecomplete', 'complete', 'beforecancel', 'cancel']);\n        }\n        if (stmCapture) {\n            me.stmInitiallyAutoRecord = stmCapture.stmInitiallyAutoRecord;\n            me.stmInitiallyDisabled = stmCapture.stmInitiallyDisabled;\n            me.hasStmCapture = true;\n            // indicate that editor has been opened, and is now managing the \"stm capture\"\n            stmCapture.transferred = true;\n        }\n        // it is set to `false` by calendar, to ignore the STM mechanism\n        else if (stmCapture !== false && !me.hasStmCapture) {\n            me.captureStm(true);\n        }\n        // Drag-created records get a \"New event\" name for cosmetic purposes.\n        // Remove just before editing.\n        if (eventRecord.isCreating) {\n            eventRecord.name = '';\n        }\n        await editor.startEdit({\n            target : element,\n            record : eventRecord,\n            field  : me.field\n        });\n        // If text label is not visible, scroll it into view\n        if (scheduler.isVertical && eventRecord.startDate < scheduler.visibleDateRange.startDate) {\n            editor.element.scrollIntoView();\n        }\n        // No key navigation during editing\n        scheduler.navigator.disabled = true;\n    }\n    onEditorComplete() {\n        // Promote event to being permanent so that it is syncable to the server as a new event\n        this.event.isCreating = false;\n        this.reset();\n        this.freeStm(true);\n    }\n    onEditorCancel() {\n        // Remove the transient event\n        if (this.event.isCreating) {\n            this.event.remove();\n        }\n        this.reset();\n        this.freeStm(false);\n    }\n    reset() {\n        this.scheduler.element.classList.remove('b-eventeditor-editing');\n        // Restore key navigation after editing\n        this.scheduler.navigator.disabled = false;\n        this.event                        = null;\n        this.resource                     = null;\n    }\n    //endregion\n    // chained from EventNavigation\n    onEventEnterKey({ assignmentRecord, eventRecord }) {\n        const\n            element        = assignmentRecord ? this.scheduler.getElementFromAssignmentRecord(assignmentRecord) : this.scheduler.getElementFromEventRecord(eventRecord),\n            resourceRecord = (assignmentRecord || eventRecord).resource;\n        this.editEvent(eventRecord, resourceRecord, element);\n    }\n    //endregion\n    onDragCreateEnd({ eventRecord, resourceRecord, eventElement, stmCapture }) {\n        this.element = eventElement;\n        this.editEvent(eventRecord, resourceRecord, eventElement, stmCapture);\n    }\n}\nSimpleEventEdit._$name = 'SimpleEventEdit'; GridFeatureManager.registerFeature(SimpleEventEdit, false, 'Scheduler');\n", "import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport GridSplit from '../../Grid/feature/Split.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\n/**\n * @module Scheduler/feature/Split\n */\nconst\n    startScrollOptions = Object.freeze({\n        animate : false,\n        block   : 'start'\n    }),\n    endScrollOptions = Object.freeze({\n        animate : false,\n        block   : 'end'\n    });\n/**\n * This feature allows splitting the Scheduler into multiple views, either by using the cell context menu, or\n * programmatically by calling {@link #function-split split()}.\n *\n * {@inlineexample Scheduler/feature/Split.js}\n *\n * See {@link Grid/feature/Split} for more details.\n *\n * ## Scheduler specifics\n *\n * - Scheduler allows splitting by dates, either programmatically or by using the context menu.\n * - Scheduler prevents splitting in the grid part using the context menu.\n * - The `eventDrag` feature will automatically be configured to allow dragging between the clones (by setting\n *   `constrainDragToTimeline` to `false`).\n * - Splitting is not supported in vertical mode.\n *\n * {@note}\n * Note that although Gantt is related to Scheduler, splitting is not supported in Gantt.\n * {/@note}\n *\n * This feature is **disabled** by default.\n * For info on enabling it, see {@link Grid/view/mixin/GridFeatures}.\n *\n * @classtype split\n * @feature\n * @extends Grid/feature/Split\n *\n * @typings Grid.feature.Split -> Grid.feature.GridSplit\n */\nexport default class Split extends GridSplit {\n    static $name = 'Split';\n    static configurable = {\n        /**\n         * Properties whose changes should be relayed to sub-views at runtime.\n         *\n         * Supply an object with property names as keys, and a truthy value to relay the change, or a falsy value to not\n         * relay it. The object will be merged with the default values.\n         *\n         * In addition to the properties relayed by Grid, Scheduler also relays these:\n         * * {@link Scheduler/view/Scheduler#property-barMargin}\n         * * {@link Scheduler/view/Scheduler#property-eventColor}\n         * * {@link Scheduler/view/Scheduler#property-eventStyle}\n         * * {@link Scheduler/view/Scheduler#property-eventLayout}\n         * * {@link Scheduler/view/Scheduler#property-fillTicks}\n         * * {@link Scheduler/view/Scheduler#property-resourceMargin}\n         * * {@link Scheduler/view/Scheduler#property-snap}\n         * * {@link Scheduler/view/Scheduler#property-tickSize}\n         *\n         * Example of supplying a custom set of properties to relay:\n         * ```javascript\n         * const scheduler = new Scheduler({\n         *     features : {\n         *         split : {\n         *             relayProperties : {\n         *                 barMargin : false, // Do not relay barMargin changes\n         *                 myConfig : true   // Relay changes to the myConfig property\n         *             }\n         *         }\n         *     }\n         * }\n         * ```\n         * @config {Object<String,Boolean>}\n         */\n        relayProperties : {\n            value : {\n                barMargin      : 1,\n                eventColor     : 1,\n                eventStyle     : 1,\n                eventLayout    : 1,\n                fillTicks      : 1,\n                resourceMargin : 1,\n                snap           : 1,\n                tickSize       : 1\n            },\n            $config : {\n                merge : 'merge'\n            }\n        }\n    };\n    static pluginConfig = {\n        chain  : ['populateCellMenu', 'populateScheduleMenu', 'afterConfigChange', 'afterAddListener', 'afterRemoveListener'],\n        assign : ['split', 'unsplit', 'subViews', 'syncSplits']\n    };\n    getClientConfig(appendTo, order, options, config) {\n        const\n            { client }   = this,\n            clientConfig = super.getClientConfig(appendTo, order, options, config);\n        // Grid demo in Schedulers docs\n        if (!client.isSchedulerBase && !client.isSchedulerProBase && !client.isGanttBase) {\n            return clientConfig;\n        }\n        // Use project instead of store / inline data\n        delete clientConfig.store;\n        delete clientConfig.events;\n        delete clientConfig.resources;\n        delete clientConfig.assignments;\n        delete clientConfig.dependencies;\n        delete clientConfig.resourceTimeRanges;\n        delete clientConfig.timeRanges;\n        clientConfig.project = client.project;\n        clientConfig.assignmentStore = clientConfig.project.assignmentStore;\n        clientConfig.crudManager = client.crudManager;\n        clientConfig.viewPreset = client.viewPreset;\n        clientConfig.startDate = client.startDate;\n        clientConfig.endDate = client.endDate;\n        clientConfig.selectedCollection = client.selectedCollection;\n        clientConfig.useInitialAnimation = false;\n        // Allow dragging between the clones, unless drag is explicitly turned off\n        if (clientConfig.features?.eventDrag !== false) {\n            ObjectHelper.setPath(clientConfig, 'features.eventDrag.constrainDragToTimeline', false);\n            client.features.eventDrag.constrainDragToTimeline = false;\n        }\n        return clientConfig;\n    }\n    unsplitCleanup(options) {\n        // Force time axis to get correct width\n        this.client.timeAxisSubGrid.onElementResize();\n    }\n    /**\n     * Fired when splitting the Scheduler.\n     * @event split\n     * @param {Scheduler.view.SchedulerBase[]} subViews The sub views created by the split\n     * @param {Object} options The options passed to the split call\n     * @param {'horizontal'|'vertical'|'both'} options.direction The direction of the split\n     * @param {Grid.column.Column} options.atColumn The column to split at\n     * @param {Core.data.Model} options.atRecord The record to split at\n     * @param {Date} options.atDate The date to split at\n     * @on-owner\n     */\n    processOptions(options) {\n        const { client } = this;\n        let { atDate, atRecord } = options;\n        // Check if center is a date if not given a specific split point\n        if (options.direction !== 'horizontal' && !options.atColumn && !options.atRecord && !atDate) {\n            const\n                bounds = Rectangle.from(client.element),\n                date   = client.getDateFromCoordinate(bounds.center.x, 'round', false);\n            // If it is a date, split at it\n            if (date) {\n                options.atDate = atDate = date;\n                options.atColumn = client.timeAxisColumn;\n            }\n        }\n        // Asked to split at a date, determine split sizes\n        if (atDate) {\n            if (!options.direction) {\n                options.direction = atRecord ? 'both' : 'vertical';\n            }\n            options.splitX = client.getCoordinateFromDate(atDate, { ignoreRTL : true }) - client.timeAxisSubGrid.scrollable.x;\n            if (client.rtl) {\n                options.splitX += client._bodyRectangle.width - Rectangle.from(client.timeAxisSubGridElement).right + DomHelper.scrollBarWidth;\n            }\n            else {\n                options.splitX += Rectangle.from(client.timeAxisSubGridElement, client.bodyContainer).left;\n            }\n            options.remainingWidth = Rectangle.from(client.element).width - options.splitX;\n        }\n        return super.processOptions(options);\n    }\n    /**\n     * Split the scheduler into two or four parts.\n     *\n     * - Splits into two when passed `direction : 'vertical'`, `direction : 'horizontal'` or `atColumn`, `atRecord` or\n     *   `atDate`.\n     * - Splits into four when passed `direction : 'both'` or `atColumn`/`atDate` and `atRecord`.\n     *\n     * ```javascript\n     * // Split horizontally (at the row in the center of the scheduler)\n     * await scheduler.split({ direction : 'horizontal' });\n     *\n     * // Split both ways by a specific date and resource\n     * await schedule.split({\n     *    atRecord : scheduler.resourceStore.getById(10),\n     *    atDate   : new Date(2023, 5, 8)\n     * });\n     * ```\n     *\n     * To return to a single scheduler, call {@link #function-unsplit}.\n     *\n     * Note that this function is callable directly on the scheduler instance.\n     *\n     * @param {Object} [options] Split options\n     * @param {'vertical'|'horizontal'|'both'} [options.direction] Split direction, 'vertical', 'horizontal' or 'both'.\n     * Not needed when passing `atColumn` or `atRecord`.\n     * @param {Date} [options.atDate] Date to split at. Has to be within the time axis\n     * @param {Grid.column.Column} [options.atColumn] Column to split at\n     * @param {Core.data.Model} [options.atRecord] Record to split at\n     * @returns {Promise} Resolves when split is complete, and subviews are scrolled to the correct position.\n     * @async\n     * @on-owner\n     */\n    async split(options = {}) {\n        const { client } = this;\n        if (client.isVertical) {\n            throw new Error('Splitting is not supported in vertical mode');\n        }\n        const result = await super.split(options);\n        if (result && options.atDate) {\n            await Promise.all([\n                // Scroll prev tick into view on left side\n                result[0].scrollToDate(DateHelper.add(options.atDate, -1, client.timeAxis.unit), endScrollOptions),\n                // And current tick into view on right side\n                result[1].scrollToDate(options.atDate, startScrollOptions)\n            ]);\n        }\n        // For whatever reason, the above scroll does not always refresh the timeaxis correctly, have not been able\n        // to track it down so triggering a refresh manually\n        client.timeAxisSubGrid.scrollable.x += 0.5;\n        return result;\n    }\n    //region Context menu\n    // Overwritten to prevent splitting in locked region\n    populateCellMenu() {}\n    populateScheduleMenu({ items, date, record }) {\n        const\n            me            = this,\n            { isSplit }   = me,\n            { splitFrom } = me.client;\n        // Splitting not supported in vertical mode\n        if (!me.disabled && me.client.isHorizontal) {\n            items.splitSchedule = {\n                text        : 'L{split}',\n                localeClass : me,\n                icon        : 'b-icon b-icon-split-vertical',\n                weight      : 500,\n                separator   : true,\n                hidden      : isSplit || splitFrom,\n                menu : {\n                    splitHorizontally : {\n                        text        : 'L{horizontally}',\n                        icon        : 'b-icon b-icon-split-horizontal',\n                        localeClass : me,\n                        weight      : 100,\n                        onItem() {\n                            me.split({ atRecord : record, direction : 'horizontal' }).then();\n                        }\n                    },\n                    splitVertically : {\n                        text        : 'L{vertically}',\n                        icon        : 'b-icon b-icon-split-vertical',\n                        localeClass : me,\n                        weight      : 200,\n                        onItem() {\n                            me.split({ atDate : date }).then();\n                        }\n                    },\n                    splitBoth : {\n                        text        : 'L{both}',\n                        icon        : 'b-icon b-icon-split-both',\n                        localeClass : me,\n                        weight      : 300,\n                        onItem() {\n                            me.split({ atDate : date, atRecord : record, direction : 'both' }).then();\n                        }\n                    }\n                }\n            };\n            items.unsplitSchedule = {\n                text        : 'L{unsplit}',\n                localeClass : me,\n                icon        : 'b-icon b-icon-clear',\n                hidden      : !(isSplit || splitFrom),\n                weight      : 550,\n                onItem() {\n                    (splitFrom || me).unsplit();\n                }\n            };\n        }\n    }\n    //endregion\n}\nSplit._$name = 'Split'; GridFeatureManager.registerFeature(Split, false, 'Scheduler');\n", "import TimelineSummary from './TimelineSummary.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\n/**\n * @module Scheduler/feature/Summary\n */\n/**\n * Defines a summary, used by the Summary and GroupSummary features.\n * @typedef SchedulerSummaryOptions\n * @property {String} label Label for the summary\n * @property {Function} renderer Function to calculate and render the summary value\n * @property {Date} renderer.startDate\n * @property {Date} renderer.endDate\n * @property {Scheduler.data.EventStore} renderer.eventStore\n * @property {Scheduler.data.ResourceStore} renderer.resourceStore\n * @property {Scheduler.model.EventModel[]} events\n * @property {Scheduler.model.ResourceModel[]} resources\n * @property {Core.data.Model} groupRecord\n * @property {String} groupField\n * @property {Object} groupValue\n */\n// noinspection JSClosureCompilerSyntax\n/**\n * A special version of the Grid Summary feature. This feature displays a summary row in the grid footer.\n * For regular columns in the locked section - specify type of summary on columns, available types are:\n * <dl class=\"wide\">\n * <dt>sum <dd>Sum of all values in the column\n * <dt>add <dd>Alias for sum\n * <dt>count <dd>Number of rows\n * <dt>countNotEmpty <dd>Number of rows containing a value\n * <dt>average <dd>Average of all values in the column\n * <dt>function <dd>A custom function, used with store.reduce. Should take arguments (sum, record)\n * </dl>\n * Columns can also specify a summaryRender to format the calculated sum.\n *\n * To summarize events, either provide a {@link #config-renderer} or use {@link #config-summaries}\n *\n * This feature is <strong>disabled</strong> by default.\n *\n * {@inlineexample Scheduler/feature/Summary.js}\n *\n * @demo Scheduler/summary\n *\n * @extends Scheduler/feature/TimelineSummary\n * @classtype summary\n * @feature\n *\n * @typings Grid.feature.Summary -> Grid.feature.GridSummary\n */\nexport default class Summary extends TimelineSummary {\n    //region Config\n    static get $name() {\n        return 'Summary';\n    }\n    static get configurable() {\n        return {\n            /**\n             * Array of summary configs which consists of a label and a {@link #config-renderer} function\n             *\n             * ```javascript\n             * new Scheduler({\n             *     features : {\n             *         summary : {\n             *             summaries : [\n             *                 {\n             *                     label : 'Label',\n             *                     renderer : ({ startDate, endDate, eventStore, resourceStore, events, element }) => {\n             *                         // return display value\n             *                         returns '<div>Renderer output</div>';\n             *                     }\n             *                 }\n             *             ]\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * @config {SchedulerSummaryOptions[]}\n             */\n            summaries : null,\n            /**\n             * Renderer function for a single time axis tick. Should calculate a sum and return HTML as a result.\n             *\n             * ```javascript\n             * new Scheduler({\n             *     features : {\n             *         summary : {\n             *             renderer : ({ startDate, endDate, eventStore, resourceStore, events, element }) => {\n             *                 // return display value\n             *                 returns '<div>Renderer output</div>';\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * @param {Object} context Rendering context object\n             * @param {Date} context.startDate Tick start date\n             * @param {Date} context.endDate Tick end date\n             * @param {Scheduler.model.EventModel[]} context.events Events which belong to the group\n             * @param {Scheduler.data.EventStore} context.eventStore Event store\n             * @param {Scheduler.data.ResourceStore} context.resourceStore Resource store\n             * @param {HTMLElement} context.element Summary tick container\n             * @returns {String} Html content\n             * @config {Function}\n             */\n            renderer : null,\n            /**\n             * A config object for the {@link Grid.column.Column} used to contain the summary bar.\n             * @config {GridColumnConfig}\n             */\n            verticalSummaryColumnConfig : null\n        };\n    }\n    // Plugin configuration. This plugin chains some of the functions in Grid.\n    static get pluginConfig() {\n        const config = super.pluginConfig;\n        config.chain.push('bindStore', 'updateEventStore', 'updateResourceStore');\n        return config;\n    }\n    //endregion\n    //region Init\n    construct(scheduler, config) {\n        const me = this;\n        me.scheduler = scheduler;\n        if (scheduler.isVertical) {\n            scheduler.timeAxisSubGrid.resizable = false;\n            config.hideFooters = true;\n            scheduler.add(scheduler.createSubGrid('right'));\n            me.summaryColumn = scheduler.columns.add(ObjectHelper.assign({\n                filterable              : null,\n                region                  : 'right',\n                cellCls                 : 'b-grid-footer b-sch-summarybar',\n                align                   : 'center',\n                sortable                : false,\n                editor                  : false,\n                groupable               : false,\n                htmlEncode              : false,\n                cellMenuItems           : false,\n                enableHeaderContextMenu : false,\n                hidden                  : me.disabled\n            }, me.verticalSummaryColumnConfig))[0];\n        }\n        super.construct(scheduler, config);\n        // Feature might be run from Grid (in docs), should not crash\n        // https://app.assembla.com/spaces/bryntum/tickets/6801/details\n        if (scheduler.isSchedulerBase) {\n            me.updateEventStore(scheduler.eventStore);\n            me.updateResourceStore(scheduler.resourceStore);\n        }\n    }\n    //endregion\n    //region Render\n    updateEventStore(eventStore) {\n        this.detachListeners('summaryEventStore');\n        eventStore.ion({\n            name    : 'summaryEventStore',\n            filter  : 'updateTimelineSummaries',\n            thisObj : this\n        });\n    }\n    updateResourceStore(resourceStore) {\n        this.detachListeners('summaryResourceStore');\n        resourceStore.ion({\n            name    : 'summaryResourceStore',\n            filter  : 'updateTimelineSummaries',\n            thisObj : this\n        });\n    }\n    /**\n     * Updates summaries.\n     * @private\n     */\n    updateTimelineSummaries() {\n        const\n            me                       = this,\n            { client : timeline }    = me,\n            { eventStore, timeAxis } = timeline,\n            summaryContainer         = me.summaryBarElement,\n            forResources             = (me.selectedOnly && timeline.selectedRecords.length)\n                ? timeline.selectedRecords : timeline.resourceStore.records;\n        if (summaryContainer && timeline.isEngineReady) {\n            // group events by ticks info once here to avoid performance lags\n            // should be inside `scheduler.isEngineReady` check to make sure all events were calculated\n            // https://github.com/bryntum/support/issues/2977\n            const eventsByTick = timeline.getResourcesEventsPerTick(forResources, ({ event }) => {\n                return !eventStore.isFiltered || eventStore.records.includes(event);\n            });\n            Array.from(summaryContainer.children).forEach((element, i) => {\n                const\n                    tick   = timeAxis.getAt(i),\n                    events = eventsByTick[i] || [];\n                let html    = '',\n                    tipHtml = `<header>${me.L('L{Summary for}', timeline.getFormattedDate(tick.startDate))}</header>`;\n                me.summaries.forEach(config => {\n                    const value     = config.renderer({\n                            startDate     : tick.startDate,\n                            endDate       : tick.endDate,\n                            resourceStore : timeline.resourceStore,\n                            eventStore,\n                            events,\n                            element\n                        }),\n                        valueHtml = value ? `<div class=\"b-timeaxis-summary-value\">${value}</div>` : '';\n                    if (me.summaries.length > 1 || value) {\n                        html += valueHtml;\n                    }\n                    tipHtml += valueHtml ? (`<label>${config.label || ''}</label>` + valueHtml) : '';\n                });\n                element.innerHTML = html;\n                // Only show tooltips for summary cells with content\n                element._tipHtml  = html ? tipHtml : '';\n            });\n        }\n    }\n}\n// Override Grids Summary with this improved version\nSummary._$name = 'Summary'; GridFeatureManager.registerFeature(Summary, false, 'Scheduler');\n", "import AbstractTimeRanges from './AbstractTimeRanges.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\n/**\n * @module Scheduler/feature/TimeSelection\n */\n/**\n * Feature that allows selection of a time span in the time axis header. When a time span is selected in the header,\n * a {@link #event-timeSelectionChange} event is fired.\n *\n * {@inlineexample Scheduler/feature/TimeSelection.js}\n *\n * ## Configuration\n *\n * You can configure the content of the header element using the {@link #config-headerRenderer} function.\n *\n * <div class=\"note\">Not compatible with the {@link Scheduler/feature/HeaderZoom} feature.</div>\n *\n * This feature is **disabled** by default.\n * For info on enabling it, see {@link Grid/view/mixin/GridFeatures}.\n *\n * @extends Scheduler/feature/AbstractTimeRanges\n * @demo Scheduler/time-selection\n * @classtype timeSelection\n * @feature\n */\nexport default class TimeSelection extends AbstractTimeRanges {\n    //region Default config\n    static $name = 'TimeSelection';\n    /** @hideconfigs enableResizing, showTooltip, dragTipTemplate, cls, showHeaderElements */\n    /** @hideproperties showHeaderElements, timeRanges */\n    /** @hidefunctions getTipHtml, shouldRenderRange */\n    static get configurable() {\n        return {\n            enableResizing   : true,\n            showTooltip      : false,\n            dragTipTemplate  : null,\n            cls              : 'b-selected-time-span',\n            dragHelperConfig : {\n                // Data will be updated on drag, no need for DragHelper to touch the element\n                skipUpdatingElement : true\n            },\n            resizeHelperConfig : {\n                // Data will be updated on resize, no need for ResizeHelper to touch the element\n                skipUpdatingElement : true\n            },\n            /**\n             * Template used to generate the tooltip contents when hovering the time selection header element.\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *   features : {\n             *     timeSelection : {\n             *       tooltipTemplate({ startDate, endDate }) {\n             *           const count = this.client.getAvailableResources(startDate, endDate).length;\n             *           return `${count || 'No'} available resource(s)`;\n             *       }\n             *     }\n             *   }\n             * });\n             * ```\n             *\n             * @config {Function} tooltipTemplate\n             * @param {Object} data Tooltip data\n             * @param {Date} data.startDate\n             * @param {Date} data.endDate\n             * @returns {String} String representing the HTML markup\n             * @category Common\n             */\n            /**\n             * Function used to generate the HTML content for the selected time span's header element.\n             *\n             * If you want to include an icon or similar to clear the selection on click, make sure to set\n             * `date-ref=\"closeButton\"` on it.\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         timeSelection : {\n             *             headerRenderer({ timeRange }) {\n             *                 return `\n             *                     ${DateHelper.format(timeRange.startDate, 'LL')}\n             *                     <div class=\"close\" data-ref=\"closeButton></div>\n             *                 `;\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             * @config {Function} headerRenderer\n             * @param {Object} data Render data\n             * @param {Object} data.timeRange\n             * @param {Date} data.timeRange.startDate\n             * @param {Date} data.timeRange.endDate\n             * @returns {String}\n             * @category Common\n             */\n            headerRenderer({ timeRange }) {\n                const { dateFormat } = this.client.timeAxisViewModel.bottomHeader;\n                return `<span class=\"b-selection-start\">${DateHelper.format(timeRange.startDate, dateFormat)}</span>\n                        <span class=\"b-selection-end\">${DateHelper.format(timeRange.endDate, dateFormat)}</span>\n                        <i class='b-icon b-icon-close' data-ref=\"closeButton\" data-btip=\"L{Popup.close}\"></i>`;\n            },\n            /**\n             * The selected time span, which can be set using simple `startDate` and `endDate` properties\n             * @prp {Object} selectedTimeSpan\n             * @param {Date} selectedTimeSpan.startDate The start date of the selected time span\n             * @param {Date} selectedTimeSpan.endDate The end date of the selected time span\n             */\n            selectedTimeSpan : null\n        };\n    }\n    //endregion\n    //region Init & destroy\n    onUIReady() {\n        const me = this;\n        super.onUIReady();\n        if (me.hoverTooltip) {\n            me.hoverTooltip.getHtml = () => {\n                return me.tooltipTemplate({ ...me.selectedTimeSpan });\n            };\n        }\n        me.client.ion({\n            timeAxisHeaderMouseDown : 'onTimeAxisHeaderMouseDown',\n            thisObj                 : me\n        });\n    }\n    onTimeAxisHeaderMouseDown({ startDate, endDate }) {\n        if (!this.disabled) {\n            this.selectedTimeSpan = {\n                startDate,\n                endDate\n            };\n        }\n    }\n    onTimeRangeClick(event) {\n        super.onTimeRangeClick(event);\n        const me = this;\n        if (!me.disabled && event.target.closest('.b-selected-time-span')) {\n            if (event.target.matches('[data-ref=\"closeButton\"]')) {\n                me.selectedTimeSpan = null;\n            }\n            else {\n                /**\n                 * Triggered when clicking the time selection header element\n                 * @event timeSelectionElementClick\n                 * @on-owner\n                 * @param {Scheduler.view.Scheduler} source The scheduler\n                 * @param {Date} startDate The selected range start date\n                 * @param {Date} endDate The selected range end date\n                 * @param {Event} domEvent The raw DOM event\n                 */\n                me.client.trigger('timeSelectionElementClick', {\n                    ...me.selectedTimeSpan,\n                    domEvent : event\n                });\n            }\n        }\n    }\n    updateFromCoords(x, y, width, height) {\n        const\n            { client } = this,\n            size       = client.isHorizontal ? width : height;\n        let start = client.isHorizontal ? x : y;\n        if (client.rtl && client.isHorizontal) {\n            start = Math.max(client.timeAxisViewModel.totalSize - start - size, 0);\n        }\n        const\n            startDate = client.getDateFromCoord({ coord : start, roundingMethod : 'round', ignoreRTL : true }),\n            endDate   = client.getDateFromCoord({ coord : start + size, roundingMethod : 'round', ignoreRTL : true });\n        this.selectedTimeSpan = {\n            startDate : DateHelper.max(startDate, client.startDate),\n            endDate   : DateHelper.min(endDate, client.endDate)\n        };\n    }\n    onResizeStart({ source }) {\n        const\n            {\n                timeAxisViewModel,\n                timeResolution\n            }                    = this.client,\n            resolutionDurationMS = DateHelper.asMilliseconds(timeResolution.increment, timeResolution.unit);\n        // Prevent resizing smaller than one resolution increment\n        this.resize.minWidth = timeAxisViewModel.getDistanceForDuration(resolutionDurationMS);\n    }\n    onResizeDrag({ context }) {\n        this.updateFromCoords(\n            context.newX,\n            context.newY,\n            context.newWidth ?? context.elementWidth,\n            context.newHeight ?? context.elementHeight\n        );\n    }\n    onDragStart(event) {\n        super.onDragStart(event);\n        const { context } = event;\n        context.elementWidth = context.element.offsetWidth;\n        context.elementHeight = context.element.offsetHeight;\n    }\n    onDrag({ context }) {\n        this.updateFromCoords(\n            context.newX,\n            context.newY,\n            context.elementWidth,\n            context.elementHeight\n        );\n    }\n    onDrop() {\n        this.client.element.classList.remove('b-dragging-timerange');\n    }\n    onDragReset() {\n        this.refresh();\n    }\n    get timeRanges() {\n        return this.selectedTimeSpan ? [this.selectedTimeSpan] : [];\n    }\n    // Always render the selection\n    shouldRenderRange() {\n        return true;\n    }\n    changeSelectedTimeSpan(timeSpan) {\n        if (timeSpan) {\n            timeSpan.id = 'time-selection';\n        }\n        return timeSpan;\n    }\n    updateSelectedTimeSpan(timeSpan) {\n        if (!this.isConfiguring) {\n            this.refresh();\n        }\n        /**\n         * Triggered when time selection changes\n         * @event timeSelectionChange\n         * @on-owner\n         * @param {Scheduler.view.Scheduler} source The scheduler\n         * @param {Date} startDate The selected range start date, or `undefined`\n         * @param {Date} endDate The selected range end date, or `undefined`\n         */\n        this.client.trigger('timeSelectionChange', {\n            ...timeSpan ?? {}\n        });\n    }\n}\nTimeSelection._$name = 'TimeSelection'; GridFeatureManager.registerFeature(TimeSelection, false, 'Scheduler');\n", "import GridFeatureManager from '../../../Grid/feature/GridFeatureManager.js';\nimport PrintMixin from '../../../Grid/feature/export/mixin/PrintMixin.js';\nimport PdfExport from './PdfExport.js';\n/**\n * @module Scheduler/feature/export/Print\n */\n/**\n * Allows printing Scheduler contents using browser print dialog.\n *\n * This feature is based on {@link Scheduler.feature.export.PdfExport} with only difference that instead of sending\n * request to a backend it renders content to an IFrame element and requests print dialog for it. For more details about\n * preparing HTML for printing, please refer to the {@link Scheduler.feature.export.PdfExport} docs.\n *\n * ## Usage\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         print : true\n *     }\n * })\n *\n * // Opens popup allowing to customize print settings\n * scheduler.features.print.showPrintDialog();\n *\n * // Simple print\n * scheduler.features.print.print({\n *     columns : scheduler.columns.map(c => c.id)\n * });\n * ```\n *\n * This feature is **disabled** by default.\n * For info on enabling it, see {@link Grid/view/mixin/GridFeatures}.\n *\n * @extends Scheduler/feature/export/PdfExport\n * @mixes Grid/feature/export/mixin/PrintMixin\n *\n * @demo Scheduler/print\n * @classtype print\n * @feature\n *\n * @typings Grid.feature.export.Print -> Grid.feature.export.GridPrint\n */\nexport default class Print extends PrintMixin(PdfExport) {\n    /**\n     * @hideConfigs clientURL, exportServer, fetchOptions, fileFormat, fileName, openAfterExport, openInNewTab, sendAsBinary\n     */\n    /**\n     * @hideFunctions processExportContent, receiveExportContent, showExportDialog\n     */\n    static $name = 'Print';\n};\nPrint._$name = 'Print'; GridFeatureManager.registerFeature(Print, false, 'Scheduler');\n", "import Localizable from '../../Core/localization/Localizable.js';\nimport GridTableExporter from '../../Grid/util/TableExporter.js';\nimport SchedulerBase from '../view/SchedulerBase.js';\n/**\n * @module Scheduler/util/ScheduleTableExporter\n */\n/**\n * This class transforms scheduler component into two arrays: rows and columns. Columns array contains objects with\n * meta information about column: field name, column name, width and type of the rendered value, rows array contains\n * arrays of cell values.\n *\n * ```javascript\n * const exporter = new ScheduleTableExporter({ target : scheduler });\n * exporter.export()\n *\n * // Output\n * {\n *     columns : [\n *         { field : 'name',      value : 'First name', type : 'string',  width : 100 },\n *         { field : 'name',      value : 'Task',       type : 'string',  width : 100, eventColumn : true },\n *         { field : 'startDate', value : 'Starts',     type : 'date',    width : 100, eventColumn : true },\n *         { field : 'endDate',   value : 'Ends',       type : 'date',    width : 100, eventColumn : true }\n *     ],\n *     rows : [\n *         ['Michael', 'Hand out dundies',      Date, Date],\n *         ['Michael', 'Buy condo',             Date, Date],\n *         ['Jim',     'Close sale to library', Date, Date]\n *     ]\n * }\n * ```\n *\n * ## How data is exported\n *\n * Data is exported as in the base class with minor addition: every event is exported on a separate row, like\n * demonstrated above.\n *\n * In case there are unassigned events, by default they will be exported as well\n *\n * ```javascript\n * // output\n * {\n *     rows : [\n *         ['Michael', 'Hand out dundies',      Date, Date],\n *         ['Michael', 'Buy condo',             Date, Date],\n *         ['Jim',     'Close sale to library', Date, Date],\n *         ['',        'No resource assigned'],\n *         ['',        'Halloween prep',        Date, Date],\n *         ['',        'New year prep',         Date, Date]\n *     ]\n * }\n * ```\n *\n * @extends Grid/util/TableExporter\n * @mixes Core/localization/Localizable\n */\nexport default class ScheduleTableExporter extends Localizable(GridTableExporter) {\n    static get defaultConfig() {\n        return {\n            /**\n             * Set to `false` to not include unassigned events in the export. `true` by default.\n             * @config {Boolean} includeUnassigned\n             * @default\n             */\n            includeUnassigned : true,\n            /**\n             * An array of Event columns configuration used to specify columns width, headers name, and column fields to\n             * get the data from.\n             * 'field' config is required. If 'text' is missing, the 'field' config will be used instead.\n             *\n             * For example:\n             * ```javascript\n             * eventColumns    : [\n             *     { text : 'Task', field : 'name' },\n             *     { text : 'Starts', field : 'startDate', width : 140 },\n             *     { text : 'Ends', field : 'endDate', width : 140 }\n             * ]\n             * ```\n             *\n             * @config {String[]|Object[]} eventColumns\n             * @default\n             */\n            eventColumns : [\n                { text : 'Task', field : 'name' },\n                { text : 'Starts', field : 'startDate', width : 140 },\n                { text : 'Ends', field : 'endDate', width : 140 }\n            ],\n            /**\n             * Function to sort events for each resource. By default events are sorted in the order of appending to the\n             * store.\n             * For example:\n             * ```javascript\n             * // Sorting by start date\n             * eventSortFn : (a, b) => a.startDate - b.startDate\n             * ```\n             * @config {Function}\n             * @internal\n             */\n            eventSortFn : null\n        };\n    }\n    construct(config = {}, ...args) {\n        super.construct(config, ...args);\n        if (!this.eventSortFn) {\n            this.eventSortFn = (a, b) => a.internalId - b.internalId;\n        }\n    }\n    normalizeColumns(config) {\n        super.normalizeColumns(config);\n        config.eventColumns = config.eventColumns.map(col => {\n            if (typeof col === 'string') {\n                return { field : col };\n            }\n            else {\n                return col;\n            }\n        });\n    }\n    generateExportData(config) {\n        const\n            me                 = this,\n            isScheduler        = this.target instanceof SchedulerBase,\n            resourceColumns    = me.generateColumns(config),\n            eventColumns       = isScheduler ? me.generateEventColumns(config) : [],\n            columns            = resourceColumns.concat(eventColumns),\n            rows               = me.generateRows(config);\n        return { columns, rows };\n    }\n    generateEventColumns(config) {\n        return config.eventColumns.map(column => this.processEventColumn(column, config));\n    }\n    processEventColumn(column, config) {\n        const\n            { width, minWidth }    = column,\n            { defaultColumnWidth } = config;\n        return {\n            field       : column.field,\n            value       : column.text,\n            width       : Math.max(width || defaultColumnWidth, minWidth || defaultColumnWidth),\n            eventColumn : true,\n            type        : this.getColumnType(column, this.target.eventStore)\n        };\n    }\n    generateRows(config) {\n        const\n            me         = this,\n            { target } = me;\n        let result;\n        if (!(target instanceof SchedulerBase)) {\n            result = super.generateRows(config);\n        }\n        else {\n            result = [];\n            // forEach skips group records, summary records etc\n            target.resourceStore.map(resourceRecord => {\n                // Get all events for resource (including assignment store)\n                const events = resourceRecord.events || [];\n                // Events order is not guaranteed, sort by internalId, that is guaranteed to grow with every new record\n                events.sort(me.eventSortFn);\n                // Set dummy event to have resource info printed without events\n                if (!events.length) {\n                    events.push('');\n                }\n                events.forEach(eventRecord => {\n                    if (eventRecord === '' || target.eventStore.isAvailable(eventRecord)) {\n                        result.push(me.getRowData(config, resourceRecord, eventRecord));\n                    }\n                });\n            });\n            if (config.includeUnassigned && config.eventColumns.length) {\n                const notAssignedEvents = target.eventStore.query(eventRecord => !eventRecord.resources.length);\n                if (notAssignedEvents.length) {\n                    // Use offset to match first event column\n                    const cells = new Array(config.columns.length).fill('');\n                    cells.push(me.L('L{ExcelExporter.No resource assigned}'));\n                    result.push(cells);\n                    // Set dummy resource to have event info printed without resource\n                    notAssignedEvents.forEach(eventRecord => result.push(me.getRowData(config, null, eventRecord)));\n                }\n            }\n            // filter out empty rows\n            result = result.filter(cells => cells.length);\n        }\n        return result;\n    }\n    getRowData(config, resource, event) {\n        const\n            {\n                columns,\n                eventColumns\n            }             = config,\n            cells         = [],\n            resourceCells = this.processRecord(resource, columns, config);\n        // No cells from group footers (or from group headers if configured to not show them)\n        resourceCells && cells.push(...resourceCells);\n        if (!resource || !resource.isSpecialRow) {\n            const eventCells = this.processRecord(event, eventColumns, config);\n            // No cells from group footers (or from group headers if configured to not show them)\n            eventCells && cells.push(...eventCells);\n        }\n        return cells;\n    }\n}\nScheduleTableExporter._$name = 'ScheduleTableExporter';", "/*eslint no-undef: \"error\"*/\nimport GridFeatureManager from '../../../Grid/feature/GridFeatureManager.js';\nimport GridExcelExporter from '../../../Grid/feature/experimental/ExcelExporter.js';\nimport ScheduleTableExporter from '../../util/ScheduleTableExporter.js';\n/**\n * @module Scheduler/feature/experimental/ExcelExporter\n */\n/**\n * **NOTE**: This class requires a 3rd party library to operate.\n *\n * A plugin that allows exporting Scheduler data to Excel without involving the server. It uses {@link Scheduler.util.ScheduleTableExporter}\n * class as data provider, [zipcelx library](https://www.npmjs.com/package/zipcelx)\n * forked and adjusted to support [column width config](https://github.com/bryntum/zipcelx/tree/column-width-build)\n * and [Microsoft XML specification](https://msdn.microsoft.com/en-us/library/office/documentformat.openxml.spreadsheet.aspx).\n * Zipcelx should be either in global scope (window) or can be provided with {@link #config-zipcelx} config.\n *\n * ```html\n * // Global scope\n * <script src=\"zipcelx.js\"></script>\n * ```\n *\n * ```javascript\n * // importing from package\n * import zipcelx from 'zipcelx';\n *\n * const grid = new Grid({\n *     features : {\n *         excelExporter : {\n *             zipcelx\n *         }\n *     }\n * })\n * ```\n *\n * Here is an example of how to add the feature:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         excelExporter : {\n *             // Choose the date format for date fields\n *             dateFormat : 'YYYY-MM-DD HH:mm',\n *             exporterConfig : {\n *                 // Choose the Resource fields to include in the exported file\n *                 columns : [{ text : 'Staff', field : 'name' }],\n *\n *                 // Choose the Event fields to include in the exported file\n *                 eventColumns    : [\n *                     { text : 'Task', field : 'name' },\n *                     { text : 'Starts', field : 'startDate', width : 140 },\n *                     { text : 'Ends', field : 'endDate', width : 140 }\n *                 ]\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * And how to call it:\n *\n * ```javascript\n * scheduler.features.excelExporter.export({\n *     filename : 'Export',\n *     exporterConfig : {\n *         columns : [{ text : 'Staff', field : 'name' }]\n *     }\n * })\n * ```\n *\n * This feature is **disabled** by default.\n * For info on enabling it, see {@link Grid/view/mixin/GridFeatures}.\n *\n * @extends Grid/feature/experimental/ExcelExporter\n * @classtype excelExporter\n * @feature\n * @demo Scheduler/exporttoexcel\n *\n * @typings Grid.feature.experimental.ExcelExporter -> Grid.feature.experimental.GridExcelExporter\n */\nexport default class ExcelExporter extends GridExcelExporter {\n    static get $name() {\n        return 'ExcelExporter';\n    }\n    static get defaultConfig() {\n        return {\n            /**\n             * Exporter class. Must subclass {@link Scheduler.util.ScheduleTableExporter}\n             * @config {Scheduler.util.ScheduleTableExporter}\n             * @typings {typeof ScheduleTableExporter}\n             * @default\n             */\n            exporterClass : ScheduleTableExporter,\n            /**\n             * Configuration object for {@link #config-exporterClass exporter class}.\n             * @config {Object}\n             */\n            exporterConfig : null\n        };\n    }\n}\nExcelExporter._$name = 'ExcelExporter'; GridFeatureManager.registerFeature(ExcelExporter, false, 'Scheduler');\n", "import SchedulerBase from './SchedulerBase.js';\nimport '../localization/En.js';\n// default features\nimport '../feature/ColumnLines.js';\nimport '../feature/EventCopyPaste.js';\nimport '../feature/EventDrag.js';\nimport '../feature/EventDragCreate.js';\nimport '../feature/EventEdit.js';\nimport '../feature/EventFilter.js';\nimport '../feature/EventMenu.js';\nimport '../feature/EventResize.js';\nimport '../feature/EventTooltip.js';\nimport '../feature/ScheduleContext.js';\nimport '../feature/ScheduleMenu.js';\nimport '../feature/ScheduleTooltip.js';\nimport '../feature/StickyEvents.js';\nimport '../feature/TimeAxisHeaderMenu.js';\n// Since Scheduler is based on SchedulerBase + GridBase, Grids default features needs to be pulled in here also\nimport '../../Grid/feature/CellEdit.js';\nimport '../../Grid/feature/CellMenu.js';\nimport '../../Grid/feature/ColumnDragToolbar.js';\nimport '../../Grid/feature/ColumnPicker.js';\nimport '../../Grid/feature/ColumnReorder.js';\nimport '../../Grid/feature/ColumnResize.js';\nimport '../../Grid/feature/Filter.js';\nimport '../../Grid/feature/FilterBar.js';\nimport '../../Grid/feature/Group.js';\nimport '../../Grid/feature/HeaderMenu.js';\nimport '../../Grid/feature/Sort.js';\nimport '../../Grid/feature/Stripe.js';\nimport '../../Grid/column/CheckColumn.js'; // For checkbox selection mode\n/**\n * @module Scheduler/view/Scheduler\n */\n/**\n * The Scheduler widget is a very powerful and performant UI component that displays an arbitrary number of \"locked\"\n * columns with a schedule occupying the remaining space. The schedule has a time axis at the top, one row per resource\n * and any number of events per resource.\n *\n * ## Intro\n * The Scheduler widget has a wide range of features and a large API to allow users to work with it efficiently in the\n * browser.\n *\n * The timeaxis displayed at the top of the Scheduler is configured using a {@link #config-startDate},\n * {@link #config-endDate} and a {@link #config-viewPreset}. The dates determine the outer limits of the range shown in\n * the timeaxis while the {@link Scheduler.preset.ViewPreset} decides the appearance and which dates are actually shown.\n * The Scheduler ships with a selection of predefined view presets, which can be found in\n * {@link Scheduler.preset.PresetManager}. If you want to specify view presets for a specific scheduler only, please see\n * {@link #config-presets} config.\n *\n * <div class=\"note\">Note that if you want to use infinite scroll along the time axis, configure\n * {@link #config-infiniteScroll} and {@link #config-visibleDate} instead of <code>startDate</code> and\n * <code>endDate</code></div>\n *\n * The Scheduler uses a {@link Scheduler.data.ResourceStore} to hold resources and an {@link Scheduler.data.EventStore}\n * to hold events. You can use inline data or load data using ajax, see the \"Working with data\" guides for more\n * information.\n *\n * The simplest schedule configured with inline data would look like this:\n *\n *      let scheduler = new Scheduler({\n *          appendTo : document.body,\n *\n *          startDate  : new Date(2018,4,6),\n *          endDate    : new Date(2018,4,12),\n *          viewPreset : 'dayAndWeek',\n *\n *           columns : [\n *              { field : 'name', text : 'Name', width: 100 }\n *          ],\n *\n *          resources : [\n *              { id : 1, name : 'Bernard' },\n *              { id : 2, name : 'Bianca' }\n *          ],\n *\n *          events : [\n *              { id : 1, resourceId : 1, name : 'Interview', startDate : '2018-05-06', endDate : '2018-05-07' },\n *              { id : 2, resourceId : 1, name : 'Press conference', startDate : '2018-05-08', endDate : '2018-05-09' },\n *              { id : 3, resourceId : 2, name : 'Audition', startDate : '2018-05-06', endDate : '2018-05-08' },\n *              { id : 4, resourceId : 2, name : 'Script deadline', startDate : '2018-05-11', endDate : '2018-05-11' }\n *          ]\n *      });\n *\n * {@inlineexample Scheduler/view/Simplest.js}\n *\n * ## Inheriting from Bryntum Grid\n * Bryntum Scheduler inherits from Bryntum Grid, meaning that most features available in the grid are also available\n * for the scheduler. Common features include columns, cell editing, context menus, row grouping, sorting and more.\n * Note: If you want to use the Grid component standalone, e.g. to use drag-from-grid functionality, you need a separate\n * license for the Grid component.\n *\n * For more information on configuring columns, filtering, search etc. please see the {@link Grid.view.Grid Grid API docs}.\n * {@region Loading data}\n * As mentioned above Bryntum Scheduler uses an {@link Scheduler.data.EventStore} and a {@link Scheduler.data.ResourceStore}\n * to hold its data. Data is expected to be in JSON format and can be assigned inline (from memory) using the\n * {@link #config-events} and {@link #config-resources} shortcuts:\n *\n * ```javascript\n * let scheduler = new Scheduler({\n *    events : myArrayOfEventData,\n *    resources : myArrayOfResourceData\n * });\n * ```\n *\n * If you need to give additional store configuration, you can also specify store configs or instances:\n *\n * ```javascript\n * let resourceStore = new ResourceStore({\n *   // ResourceStore config object\n * })\n *\n * let scheduler = new Scheduler({\n *    // EventStore config object\n *    eventStore : {\n *       ...\n *    },\n *\n *    // Already existing ResourceStore instance\n *    resourceStore\n * });\n * ```\n *\n * To use Ajax to fetch data from a server, specify {@link Core.data.AjaxStore#config-readUrl}:\n *\n * ```javascript\n * let scheduler = new Scheduler({\n *    eventStore : {\n *        readUrl  : 'backend/read_events.php',\n *        autoLoad : true\n *    }\n * });\n * // If you do not specify autoLoad, trigger loading manually:\n * scheduler.eventStore.load();\n * ```\n *\n * For more information, see the \"Working with data\" guides.\n * {@endregion}\n * {@region Event styling}\n * Bryntum Schedulers appearance can be affected in a few different ways:\n *\n * * Switching themes\n * * Choosing event styles and colors\n * * Using renderer functions\n *\n * ### Switching themes\n *\n * Scheduler ships with five different themes, simply include the css file for the theme you would like to use on your\n * page. The themes are located in the `/build` folder. For example to include the material theme:\n *\n * ```html\n * <link rel=\"stylesheet\" href=\"build/scheduler.material.css\" data-bryntum-theme>\n * ```\n *\n * Included themes are (from left to right) classic-light, classic, classic-dark, stockholm and material:\n *\n * <img src=\"Scheduler/basic/thumb.classic-light.png\" alt=\"Classic-Light theme\" width=\"300\" style=\"margin-right: .5rem\">\n * <img src=\"Scheduler/basic/thumb.classic.png\" alt=\"Classic theme\" width=\"300\" style=\"margin-right: .5rem\">\n * <img src=\"Scheduler/basic/thumb.classic-dark.png\" alt=\"Classic-Dark theme\" width=\"300\" style=\"margin-right: .5rem\">\n * <img src=\"Scheduler/basic/thumb.stockholm.png\" alt=\"Stockholm theme\" width=\"300\" style=\"margin-right: .5rem\">\n * <img src=\"Scheduler/basic/thumb.material.png\" alt=\"Material theme\" width=\"300\">\n *\n * ### Choosing event styles and colors\n * The style and color of each event can be changed by assigning to the `eventStyle` and `eventColor` configs. These\n * configs are available at 3 different levels:\n *\n * * Scheduler level, affects all events (see {@link Scheduler.view.mixin.TimelineEventRendering#config-eventStyle} and\n *   {@link Scheduler.view.mixin.TimelineEventRendering#config-eventColor}).\n * * Resource level, affects all events assigned to that resource (see {@link Scheduler.model.mixin.ResourceModelMixin#field-eventStyle}\n *   and {@link Scheduler.model.mixin.ResourceModelMixin#field-eventColor}).\n * * Event level, affects that event (see {@link Scheduler/model/mixin/EventModelMixin#field-eventStyle} and\n *   {@link Scheduler/model/mixin/EventModelMixin#field-eventColor}).\n *\n * {@inlineexample Scheduler/view/Styles.js}\n *\n * For available styles, see {@link Scheduler.view.mixin/TimelineEventRendering#config-eventStyle}. For colors,\n * {@link Scheduler.view.mixin/TimelineEventRendering#config-eventColor}. Also take a look at the\n * <a href=\"../examples/eventstyles/\" target=\"_blank\">eventstyles demo</a>.\n *\n * ### Sorting overlapping events\n *\n * The order of overlapping events rendered in a horizontal scheduler can be customized by overriding\n * {@link Scheduler.view.mixin.SchedulerEventRendering#config-horizontalEventSorterFn} function on the scheduler.\n * For example:\n *\n * ```javascript\n * let scheduler = new Scheduler({\n *     horizontalEventSorterFn(a, b) {\n *         return b.startDate.getTime() - a.startDate.getTime();\n *     },\n *     ...\n * });\n * ```\n *\n * {@inlineexample Scheduler/view/SortingOverlappingEvents.js}\n *\n * ### Using render functions\n * Render function can be used to manipulate the rendering of rows (resources) and events. For information on row\n * renderers, see {@link Grid.column.Column#config-renderer}.\n *\n * Event rendering can be manipulated by specifying an {@link Scheduler.view.mixin/SchedulerEventRendering#config-eventRenderer} function. The function is called\n * for each event before it is rendered to DOM. By using its arguments you can add CSS classes, modify styling and\n * determine the contents of the event:\n *\n * ```javascript\n * let scheduler = new Scheduler({\n *\n *   events    : [...],\n *   resources : [...],\n *\n *   ...,\n *\n *   eventRenderer({resourceRecord, eventRecord, renderData}) {\n *      // add css class to the event\n *      renderData.cls.add('my-css-class');\n *\n *      // use an icon\n *      renderData.iconCls = 'b-fa b-fa-some-nice-icon';\n *\n *      // return value is used as events text\n *      return `${resourceRecord.name}: ${eventRecord.name}`;\n *   }\n * });\n * ```\n *\n * {@endregion}\n * {@region Event manipulation}\n * You can programmatically manipulate the events using data operations, see the \"Working with data\" guides for more\n * information. Events are reactive, changes reflect on the UI automatically. A small example on manipulating events:\n *\n * ```javascript\n * // change startDate of first event\n * scheduler.eventStore.first.startDate = new Date(2018,5,10);\n *\n * // remove last event\n * scheduler.eventStore.last.remove();\n *\n * // reassign an event\n * scheduler.eventStore.getById(10).resourceId = 2;\n * ```\n *\n * You can also allow your users to manipulate the events using the following features:\n *\n * * {@link Scheduler.feature.EventDrag}, drag and drop events within the schedule\n * * {@link Scheduler.feature.EventDragCreate}, create new events by click-dragging an empty area\n * * {@link Scheduler.feature.EventEdit}, show an event editing form\n * * {@link Scheduler.feature.SimpleEventEdit}, edit the event name easily\n * * {@link Scheduler.feature.EventResize}, resize events by dragging resize handles\n *\n * All of the features mentioned above are enabled by default.\n * {@endregion}\n * {@region Default configs}\n * There is a myriad of configs and features available for Scheduler (browse the API docs to find them), some of them on\n * by default and some of them requiring extra configuration. The code below tries to illustrate the major things that\n * are used by default:\n *\n * ```javascript\n * let scheduler = new Scheduler({\n *    // The following features are enabled by default:\n *    features : {\n *        cellEdit            : true, // Cell editing in the columns part\n *        columnLines         : true, // Column lines in the schedule part\n *        columnPicker        : true, // Header context menu item to toggle visible columns\n *        columnReorder       : true, // Reorder columns in grid part using drag and drop\n *        columnResize        : true, // Resize columns in grid part using the mouse\n *        cellMenu            : true, // Context menu for cells in the grid part\n *        eventMenu           : true, // Context menu for events\n *        eventDrag           : true, // Dragging events\n *        eventDragCreate     : true, // Drag creating events\n *        eventEdit           : true, // Event editor dialog\n *        eventFilter         : true, // Filtering events using header context menu\n *        eventCopyPaste      : true, // Allow using [Ctrl/CMD + C/X] and [Ctrl/CMD + V] to copy/cut and paste events\n *        eventResize         : true, // Resizing events using the mouse\n *        eventTooltip        : true, // Tooltips for events\n *        group               : true, // Row grouping\n *        headerMenu          : true, // Context menu for headers in the grid part\n *        timeAxisHeaderMenu  : true, // Header context menu for schedule part\n *        scheduleMenu        : true, // Context menu for empty parts of the schedule\n *        scheduleTooltip     : true, // Tooltip for empty parts of the schedule\n *        sort                : true  // Row sorting\n *    },\n *\n *    // From Grid\n *    animateRemovingRows       : false, // Rows will not slide out on removal\n *    autoHeight                : false, // Grid needs to have a height supplied through CSS (strongly recommended) or by specifying `height\n *    columnLines               : true,  // Grid part, themes might override it to hide lines anyway\n *    emptyText                 : 'No rows to display',\n *    enableTextSelection       : false, // Not allowed to select text in cells by default,\n *    fillLastColumn            : true,  // By default the last column is stretched to fill the grid\n *    fullRowRefresh            : true,  // Refreshes entire row when a cell value changes\n *    loadMask                  : 'Loading...',\n *    resizeToFitIncludesHeader : true,  // Also measure header when auto resizing columns\n *    responsiveLevels : {\n *      small : 400,\n *      medium : 600,\n *      large : '*'\n *    },\n *    rowHeight                  : 60,    // Scheduler specifies a default rowHeight in pixels\n *    showDirty                  : false, // No indicator for changed cells\n *\n *    // Scheduler specific\n *    autoAdjustTimeAxis             : true,      // startDate & endDate will be adjusted to display a suitable range\n *    allowOverlap                   : true,      // Events are allowed to overlap (overlays, stacks or packs depending on eventLayout)\n *    barMargin                      : 10,        // Space above + below each event\n *    createEventOnDblClick          : true,      // Allow creating new events by double clicking empty space\n *    enableDeleteKey                : true,      // Allow deleting events with delete / backspace keys\n *    enableEventAnimations          : true,      // Animate event changes\n *    eventBarTextField              : 'name',    // Field on EventModel to display in events\n *    eventColor                     : 'green',   // Use green as default color for events\n *    eventLayout                    : 'stack',   // Stack overlapping events by default\n *    eventStyle                     : 'plain',   // Use plain as default style for events\n *    managedEventSizing             : true,      // Calculate event sizes based on rowHeight & barMargin\n *    milestoneCharWidth             : 10,\n *    milestoneLayoutMode            : 'default',\n *    useInitialAnimation            : true,      // Fade in events initially\n *    viewPreset                     : 'weekAndDayLetter',\n *    zoomOnMouseWheel               : true,\n *    zoomOnTimeAxisDoubleClick      : true\n * });\n * ```\n *\n * {@endregion}\n * {@region Keyboard shortcuts}\n * Scheduler does not currently provide any keyboard shortcuts on its own. However, the following Scheduler features has\n * their own keyboard shortcuts. Follow the links for details.\n * * {@link Scheduler.feature.EventCopyPaste#keyboard-shortcuts EventCopyPaste}\n *\n * As Scheduler is a subclass of Grid, many of Grid's {@link Grid.view.Grid#keyboard-shortcuts keyboard-shortcuts}\n * works for Scheduler as well.\n *\n * For more information on how to customize keyboard shortcuts, please see\n * [our guide](#Scheduler/guides/customization/keymap.md)\n * {@endregion}\n * {@region Performance}\n * To make scheduler performance as good as possible it only renders the events and resources that are within view (plus\n * an additional buffer). Since adding to and removing from DOM comes with a performance penalty the elements are\n * instead repositioned and reused as you scroll. A side effect of this is that you cannot do direct DOM element\n * manipulation in a reliable way, instead you should use row and event renderer functions to achieve what you want (see\n * the section on event styling above).\n *\n * To put the scheduler to the test, try our <a href=\"../examples/bigdataset/\" target=\"_blank\">bigdataset demo</a>.\n * {@endregion}\n *\n * {@region Recurring Events}\n * From 4.0.0, there is no `RecurringEvents` Feature. There is an\n * {@link Scheduler/view/mixin/RecurringEvents#config-enableRecurringEvents} boolean config on the Scheduler.\n * Occurrences of recurring events are provided on a \"just in time\" basis by a new EventStore API which must now be used\n * when interrogating an EventStore.\n *\n * {@link Scheduler/data/mixin/GetEventsMixin#function-getEvents} is a multipurpose event gathering method which can be\n * asked to return events which match a set of criteria including a date range and a resource. By default, if the\n * requested date range contains occurrences of a recurring event, those occurrences are returned in the result array.\n *\n * ```javascript\n * myEventStore.getEvents({\n *     resourceRecord : myResourceRecord,\n *     startDate      : myScheduler.startDate,\n *     endDate        : myScheduler.endDate\n * });\n * ```\n *\n * Occurrences are *not* present in the store's data collection.\n *\n * To directly access occurrences of a recurring event which *intersect* a date range, use:\n *\n * ```js\n * recurringEvent.getOccurrencesForDateRange(startDate, endDate);\n * ```\n *\n * The `endDate` argument is optional if the occurrence for one date is required. This method always\n * returns an array. Note that it may be empty if no occurrences intersect the date range.\n *\n * ### Convert an occurrence to an exception\n * To programmatically convert an occurrence to be a single exception to its owner's sequence use:\n *\n * ```javascript\n * myOccurrence.beginBatch();\n * myOccurrence.startDate = DateHelper.add(myOccurrence.startDate, 1, 'day');\n * myOccurrence.name = 'Postponed to next day';\n * myOccurrence.recurrence = null; // This means it does NOT become a new recurring base event.\n * myOccurrence.endBatch();\n * ```\n *\n * That will cause that event to be inserted into the store as a concrete event definition, firing\n * an `add` event as would be expected, and will add an `exceptionDates` to its owning recurring event.\n *\n * When syncing this change back to the server, the `exceptionDates` array for the modified\n * recurring event now contains the exception dates correctly serialized into string form using\n * the `dateFormat` of the field. The system-supplied default value for this is\n * `'YYYY-MM-DDTHH:mm:ssZ'`\n *\n * ### Convert an occurrence to a new recurring event sequence.\n * To programmatically convert an occurrence to be the start of a new recurring sequence, use:\n *\n * ```javascript\n * myOccurrence.beginBatch();\n * myOccurrence.startDate = DateHelper.set(myOccurrence.startDate, 'hour', 14);\n * myOccurrence.name = 'Moved to 2pm from here on';\n * myOccurrence.endBatch();\n * ```\n *\n * That will cause that event to be inserted into the store as a concrete *recurring* event\n * definition, firing an `add` event as would be expected, and will terminate the previous\n * recurring owner of that occurrence on the day before the new event.\n * {@endregion}\n *\n * @extends Scheduler/view/SchedulerBase\n * @classtype scheduler\n * @widget\n */\nexport default class Scheduler extends SchedulerBase {\n    static get $name() {\n        return 'Scheduler';\n    }\n    // Factoryable type name\n    static get type() {\n        return 'scheduler';\n    }\n}\n// Register this widget type with its Factory\nScheduler.initClass();\nScheduler._$name = 'Scheduler';", "import UndoRedoBase from '../../Core/widget/base/UndoRedoBase.js';\nimport '../../Core/widget/Combo.js';\n/**\n * @module Scheduler/widget/UndoRedo\n */\nconst isProjectConsumer = w => w.isProjectConsumer;\n/**\n * A widget which encapsulates undo/redo functionality for the {@link Scheduler.model.ProjectModel project}\n * of a scheduling widget (`Scheduler`, `Gantt` or `Calendar`).\n *\n * To make use of this, the project must be configured with a\n * {@link Scheduler.model.mixin.ProjectModelMixin#config-stm State Tracking Manager}.\n *\n * If inserted into a scheduling widget (such as into a `tbar`, or `bbar`, or as an item in a context menu),\n * the project of the encapsulating scheduling widget will be used.\n *\n * If this widget is to be used \"standalone\" (rendered into the DOM outside of a scheduling widget),\n * this must be configured with a reference to the project, or the scheduling widget which is\n * using the project.\n *\n * There are three child widgets encapsulated which may be referenced through the {@link Core.widget.Container#property-widgetMap}:\n *\n * - `undoBtn` - The button which operates the undo operation (CTRL+Z, or CMD+Z in Mac OS)\n * - `transactionsCombo` - A combobox into which is pushed the list of transactions,\n * - `redoBtn` - The button which operates the redo operation (CTRL+SHIFT+Z, + CMD+SHIFT+Z in Mac OS)\n *\n * To disable keyboard shortcuts for undo/redo, set {@link Scheduler.view.Scheduler#config-enableUndoRedoKeys} to false.\n *\n * The transactionsCombo may be configured away if only the buttons are required:\n *\n * ```javascript\n * {\n *     type      : 'undoredo',\n *     items     : {\n *         transactionsCombo : null\n *     }\n * }\n * ```\n *\n * The example below illustrated how to embed an `undoredo` widget in the top toolbar of a Scheduler.\n *\n * {@inlineexample Scheduler/widget/UndoRedo.js}\n *\n * @demo Scheduler/undoredo\n *\n * @extends Core/widget/base/UndoRedoBase\n * @classtype undoredo\n * @widget\n */\nexport default class UndoRedo extends UndoRedoBase {\n    static get $name() {\n        return 'UndoRedo';\n    }\n    static get type() {\n        return 'undoredo';\n    }\n    static get configurable() {\n        return {\n            /**\n             * The Scheduling Widget (or its `id`) whose transaction to track.\n             *\n             * This may be a `Scheduler`, a `Gantt` or a `Calendar`.\n             *\n             * ```javascript\n             *     {\n             *         type      : 'undoredo',\n             *         scheduler : myCalendar\n             *     }\n             * ```\n             * @config {Core.widget.Widget|String}\n             */\n            scheduler : null,\n            /**\n             * Get/set ProjectModel instance, containing the data visualized by the SchedulerPro.\n             * @member {Scheduler.model.ProjectModel} project\n             * @category Data\n             */\n            /**\n             * The Scheduling {@link Scheduler.model.ProjectModel project}'s whose\n             * transaction to track.\n             *\n             * ```javascript\n             *     {\n             *         type    : 'undoredo',\n             *         project : scheduler.project\n             *     }\n             * ```\n             * @config {Scheduler.model.ProjectModel|ProjectModelConfig}\n             * @category Data\n             */\n            project : null\n        };\n    }\n    construct() {\n        super.construct(...arguments);\n        // Look up a Project owner in our ancestors.\n        if (!this.stm) {\n            this.scheduler = this.up(isProjectConsumer);\n        }\n    }\n    changeScheduler(scheduler) {\n        return scheduler.isProjectConsumer ? scheduler : UndoRedo.getById(scheduler);\n    }\n    updateScheduler(scheduler) {\n        const { crudManager } = scheduler;\n        scheduler.ion({\n            projectChange : 'onProjectChanged',\n            thisObj       : this\n        });\n        if (crudManager) {\n            this.setupLoadListener(crudManager);\n        }\n        // No CrudManager, so it must be inline data, so we can start immediately\n        else {\n            this.onLoad();\n        }\n        this.stm = scheduler.project.stm;\n    }\n    setupLoadListener(source) {\n        source.detachListeners('load');\n        source.ion({\n            name    : 'load',\n            load    : 'onLoad',\n            thisObj : this\n        });\n    }\n    async onLoad() {\n        // Do not want normalization changes to be tracked by STM, wait until they are finished before enabling\n        await this.scheduler.project.commitAsync();\n        // Widget could be destroyed during async project commit\n        if (!this.isDestroyed) {\n            this.stm.enable();\n            this.fillUndoRedoCombo();\n        }\n    }\n    onProjectChanged({ project }) {\n        this.project = project;\n    }\n    updateProject(project) {\n        super.updateProject(...arguments);\n        // The original condition `(project && !this.scheduler?.isConfiguring)` is not\n        // correctly transpiled by angular webpack leading to https://github.com/bryntum/support/issues/3789\n        // The following syntax fixes the above bug\n        if (project && this.scheduler && !this.scheduler.isConfiguring) {\n            this.setupLoadListener(project);\n        }\n    }\n}\nUndoRedo.initClass();\nUndoRedo._$name = 'UndoRedo';", "import Combo from '../../Core/widget/Combo.js';\nimport Widget from '../../Core/widget/Widget.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\n/**\n * @module Scheduler/widget/ViewPresetCombo\n */\n/**\n * A combo for selecting {@link Scheduler.preset.ViewPreset} for Scheduler and Gantt. Lets the user select\n * between specified {@link #config-presets} available.\n *\n * {@inlineexample Scheduler/widget/ViewPresetCombo.js}\n *\n * {@note}By default, a preset change by the ViewPresetCombo will result in that the `startDate` will be calculated to\n * the beginning of the {@link Scheduler.preset.ViewPreset#field-mainUnit} of the\n * {@link Scheduler.view.mixin.TimelineDateMapper#property-viewportCenterDate}. If the ViewPreset has a\n * {@link Scheduler.preset.ViewPreset#field-start} configured, this will be added to the calculation. The\n * `endDate` will then be calculated by adding the ViewPreset's\n * {@link Scheduler.preset.ViewPreset#field-defaultSpan} to the `startDate`. Set {@link #config-useFixedDuration} to\n * `false` to prevent this behaviour.{@/note}\n *\n * Add it to the component's toolbar to connect it automatically:\n * ```javascript\n * new Scheduler({\n *    tbar : {\n *        viewPresetCombo: {\n *            type: 'viewpresetcombo',\n *            width: '7em'\n *        }\n *    }\n * });\n * ```\n *\n * Or specify which Scheduler, SchedulerPro or Gantt component instance it should connect to the {@link #config-client}\n * config:\n * ```javascript\n * const scheduler = new Scheduler({ ... });\n * const viewPresetCombo = new ViewPresetCombo({\n *     appendTo : 'someElementClassName',\n *     client   : scheduler\n * });\n * ```\n *\n * By default, the following presets are shown in the combo:\n * * {@link Scheduler.preset.PresetManager hourAndDay}\n * * {@link Scheduler.preset.PresetManager weekAndDay}\n * * {@link Scheduler.preset.PresetManager dayAndMonth}\n *\n * ## Changing selectable presets\n * To change the default selectable presets specify an array of preset ids. The presets specified must be available to\n * the client.\n *\n * ```javascript\n * viewPresetCombo: {\n *    presets: ['weekAndDay', 'dayAndMonth', 'myCustomPreset']\n * }\n * ```\n *\n * NOTE: The selectable presets will be arranged in the order provided in the {@link #config-presets} config.\n * @extends Core/widget/Combo\n * @classtype viewpresetcombo\n * @widget\n */\nexport default class ViewPresetCombo extends Combo {\n    static $name = 'ViewPresetCombo';\n    static type = 'viewpresetcombo';\n    static configurable = {\n        /**\n         * An array containing string {@link Scheduler.preset.ViewPreset} ids available for selection. The specified\n         * presets must be {@link Scheduler.view.mixin.TimelineViewPresets#config-presets available} for the\n         * {@link #config-client} (Scheduler, SchedulerPro or Gantt) for it to work properly. The selectable presets\n         * will be arranged in the order provided here.\n         * @config {Array}\n         */\n        presets : ['hourAndDay', 'weekAndDay', 'dayAndMonth'],\n        /**\n         * If not added to a toolbar, provide a Scheduler, SchedulerPro or Gantt component instance to which the\n         * ViewPresetCombo should be connected.\n         * @config {Scheduler.view.TimelineBase}\n         * @default\n         */\n        client : null,\n        /**\n         * As default, a preset change by the ViewPresetCombo will result in that the `startDate` will be calculated to\n         * the beginning of the {@link Scheduler.preset.ViewPreset#field-mainUnit} of the\n         * {@link Scheduler.view.mixin.TimelineDateMapper#property-viewportCenterDate}. If the ViewPreset has a\n         * {@link Scheduler.preset.ViewPreset#field-start} configured, this will be added to the calculation. The\n         * `endDate` will then be calculated by adding the ViewPreset's\n         * {@link Scheduler.preset.ViewPreset#field-defaultSpan} to the `startDate`.\n         *\n         * If this is set to `false`, the preset change will result in a call to\n         * {@link Scheduler.view.mixin.TimelineZoomable#function-zoomToLevel} without any options. The default behaviour\n         * of zoom functionality is to keep the timespan about the same width. If you want to change ViewPreset/Zoom\n         * without any changes to the visible timespan, you can set the\n         * {@link Scheduler.view.mixin.TimelineZoomable#config-zoomKeepsOriginalTimespan} config to `true`.\n         * @config {Boolean}\n         */\n        useFixedDuration : true,\n        /**\n         * @hideconfigs caseSensitive,chipView,clearTextOnPickerHide,createOnUnmatched,displayField,displayValueRenderer,emptyText,encodeFilterParams,filterOnEnter,filterOperator,filterParamName,filterSelected,hideTrigger,inlinePicker,items,keyStrokeFilterDelay,minChars,multiSelect,multiValueSeparator,primaryFilter,store,triggerAction,validateFilter,value,valueField,containValues,container,inline,adopt,dataset,title,autoSelect,clearable,highlightExternalChange,keyStrokeChangeDelay,maxLength,minLength,placeholder,required,revertOnEscape,triggers,autoComplete,inputType,spellCheck,validateOnInput,tooltip,autoClose,autoExpand,picker,pickerAlignElement\n         */\n        /**\n         * @hideproperties filterOperator,isEmpty,queryLast,records,store,valueCollection,content,contentElement,dataset,html,overflowElement,errorTip,isEmptyInput,isValid,triggers,scrollable,cellInfo,tab\n         */\n        /**\n         * @hidefunctions clear,clearError,getErrors,select,setError,contains,exitFullscreen,requestFullscreen,owns,query,queryAll\n         */\n        /**\n         * @hideevents input\n         */\n        editable     : false,\n        valueField   : 'id',\n        displayField : 'name',\n        placeholder  : 'Select view'\n    };\n    construct() {\n        super.construct(...arguments);\n        this.scheduler.ion({\n            presetchange : this.onClientPresetChange,\n            thisObj      : this\n        });\n    }\n    // Returns current client (Scheduler, SchedulerPro or Gantt)\n    get scheduler() {\n        return this.client || this.up(widget => widget.isTimelineBase) || Widget.query(widget => widget.isTimelineBase);\n    }\n    changeValue(value, oldValue) {\n        // Set up items before applying value, to prevent an empty store from being created and then replaced,\n        // which in turn leads to preset changing (caused by https://github.com/bryntum/support/issues/5732)\n        this.getConfig('presets');\n        return super.changeValue(value, oldValue);\n    }\n    // Creates a chained store of the clients presets store filtered and sorted by the presets config\n    updatePresets(presets) {\n        this.store = this.scheduler.presets.chain(r => presets.includes(r.id));\n        this.store.sort((a, b) => presets.indexOf(a.id) - presets.indexOf(b.id));\n    }\n    // When client preset is changed from somewhere else, zooming for example.\n    onClientPresetChange({ preset }) {\n        const me = this;\n        if (!me._isSelecting) {\n            me.isSettingValue = true;\n            // Select preset in combo if it exists\n            if (me.store.includes(preset.id)) {\n                me.value = preset;\n            }\n            // Clear combo otherwise\n            else {\n                me.clear();\n            }\n            me.isSettingValue = false;\n        }\n    }\n    onSelect({ record }) {\n        if (!this.isSettingValue) {\n            const\n                { scheduler }                    = this,\n                { mainUnit, start, defaultSpan } = record,\n                options                          = {};\n            if (mainUnit && defaultSpan && this.useFixedDuration) {\n                let beginningOf = mainUnit;\n                if (start && typeof start === 'string') {\n                    beginningOf = DateHelper.parseTimeUnit(start) ?? start;\n                }\n                options.startDate = DateHelper.startOf(scheduler.viewportCenterDate, beginningOf);\n                if (typeof start === 'number') {\n                    options.startDate = DateHelper.add(options.startDate, start, mainUnit);\n                }\n                options.endDate = DateHelper.add(options.startDate, defaultSpan, mainUnit);\n            }\n            scheduler.zoomToLevel(record, options);\n        }\n    }\n    // If underlying store localizes, we need to sync the input field value\n    updateLocalization() {\n        super.updateLocalization();\n        this.syncInputFieldValue();\n    }\n}\n// Register this widget type with its Factory\nViewPresetCombo.initClass();\nViewPresetCombo._$name = 'ViewPresetCombo';", "//endregion\n// columns\nexport { default as DurationColumn } from '../lib/Scheduler/column/DurationColumn.js';\nexport { default as EventColorColumn } from '../lib/Scheduler/column/EventColorColumn.js';\nexport { default as ResourceCollapseColumn } from '../lib/Scheduler/column/ResourceCollapseColumn.js';\nexport { default as ResourceInfoColumn } from '../lib/Scheduler/column/ResourceInfoColumn.js';\nexport { default as ScaleColumn } from '../lib/Scheduler/column/ScaleColumn.js';\nexport { default as TimeAxisColumn } from '../lib/Scheduler/column/TimeAxisColumn.js';\nexport { default as VerticalTimeAxisColumn } from '../lib/Scheduler/column/VerticalTimeAxisColumn.js';\n// crud\nexport { default as AbstractCrudManager } from '../lib/Scheduler/crud/AbstractCrudManager.js';\nexport { default as AbstractCrudManagerMixin } from '../lib/Scheduler/crud/AbstractCrudManagerMixin.js';\nexport { default as AbstractCrudManagerValidation } from '../lib/Scheduler/crud/mixin/AbstractCrudManagerValidation.js';\nexport { default as AjaxTransport } from '../lib/Scheduler/crud/transport/AjaxTransport.js';\nexport { default as JsonEncoder } from '../lib/Scheduler/crud/encoder/JsonEncoder.js';\n// crud mixin\nexport { default as CrudManagerView } from '../lib/Scheduler/crud/mixin/CrudManagerView.js';\n// data\nexport { default as AssignmentStore } from '../lib/Scheduler/data/AssignmentStore.js';\nexport { default as CrudManager } from '../lib/Scheduler/data/CrudManager.js';\nexport { default as DependencyStore } from '../lib/Scheduler/data/DependencyStore.js';\nexport { default as EventStore } from '../lib/Scheduler/data/EventStore.js';\nexport { default as ResourceStore } from '../lib/Scheduler/data/ResourceStore.js';\nexport { default as ResourceTimeRangeStore } from '../lib/Scheduler/data/ResourceTimeRangeStore.js';\nexport { default as TimeAxis } from '../lib/Scheduler/data/TimeAxis.js';\nexport { default as TimeRangeStore } from '../lib/Scheduler/data/TimeRangeStore.js';\n// data util\nexport { default as AbstractRecurrenceIterator } from '../lib/Scheduler/data/util/recurrence/AbstractRecurrenceIterator.js';\nexport { default as DailyRecurrenceIterator } from '../lib/Scheduler/data/util/recurrence/DailyRecurrenceIterator.js';\nexport { default as EventDayIndex } from '../lib/Scheduler/data/util/EventDayIndex.js';\nexport { default as MonthlyRecurrenceIterator } from '../lib/Scheduler/data/util/recurrence/MonthlyRecurrenceIterator.js';\nexport { default as RecurrenceDayRuleEncoder } from '../lib/Scheduler/data/util/recurrence/RecurrenceDayRuleEncoder.js';\nexport { default as RecurrenceLegend } from '../lib/Scheduler/data/util/recurrence/RecurrenceLegend.js';\nexport { default as WeeklyRecurrenceIterator } from '../lib/Scheduler/data/util/recurrence/WeeklyRecurrenceIterator.js';\nexport { default as YearlyRecurrenceIterator } from '../lib/Scheduler/data/util/recurrence/YearlyRecurrenceIterator.js';\n// data mixin\nexport { default as AssignmentStoreMixin } from '../lib/Scheduler/data/mixin/AssignmentStoreMixin.js';\nexport { default as AttachToProjectMixin } from '../lib/Scheduler/data/mixin/AttachToProjectMixin.js';\nexport { default as DependencyStoreMixin } from '../lib/Scheduler/data/mixin/DependencyStoreMixin.js';\nexport { default as EventStoreMixin } from '../lib/Scheduler/data/mixin/EventStoreMixin.js';\nexport { default as GetEventsMixin } from '../lib/Scheduler/data/mixin/GetEventsMixin.js';\nexport { default as PartOfBaseProject } from '../lib/Scheduler/data/mixin/PartOfBaseProject.js';\nexport { default as PartOfProject } from '../lib/Scheduler/data/mixin/PartOfProject.js';\nexport { default as ProjectConsumer } from '../lib/Scheduler/data/mixin/ProjectConsumer.js';\nexport { default as ProjectCrudManager } from '../lib/Scheduler/data/mixin/ProjectCrudManager.js';\nexport { default as RecurringEventsMixin } from '../lib/Scheduler/data/mixin/RecurringEventsMixin.js';\nexport { default as RecurringTimeSpansMixin } from '../lib/Scheduler/data/mixin/RecurringTimeSpansMixin.js';\nexport { default as ResourceStoreMixin } from '../lib/Scheduler/data/mixin/ResourceStoreMixin.js';\n// data plugin\nexport { default as StoreTimeZonePlugin } from '../lib/Scheduler/data/plugin/StoreTimeZonePlugin.js';\n// eventlayout\nexport { default as HorizontalLayoutPack } from '../lib/Scheduler/eventlayout/HorizontalLayoutPack.js';\nexport { default as HorizontalLayoutStack } from '../lib/Scheduler/eventlayout/HorizontalLayoutStack.js';\nexport { default as PackMixin } from '../lib/Scheduler/eventlayout/PackMixin.js';\n// feature base\nexport { default as DragBase } from '../lib/Scheduler/feature/base/DragBase.js';\nexport { default as DragCreateBase } from '../lib/Scheduler/feature/base/DragCreateBase.js';\nexport { default as EditBase } from '../lib/Scheduler/feature/base/EditBase.js';\nexport { default as ResourceTimeRangesBase } from '../lib/Scheduler/feature/base/ResourceTimeRangesBase.js';\nexport { default as TimeSpanMenuBase } from '../lib/Scheduler/feature/base/TimeSpanMenuBase.js';\nexport { default as TooltipBase } from '../lib/Scheduler/feature/base/TooltipBase.js';\n// feature\nexport { default as AbstractTimeRanges } from '../lib/Scheduler/feature/AbstractTimeRanges.js';\nexport { default as ColumnLines } from '../lib/Scheduler/feature/ColumnLines.js';\nexport { default as Dependencies } from '../lib/Scheduler/feature/Dependencies.js';\nexport { default as DependencyEdit } from '../lib/Scheduler/feature/DependencyEdit.js';\nexport { default as EventCopyPaste } from '../lib/Scheduler/feature/EventCopyPaste.js';\nexport { default as EventDrag } from '../lib/Scheduler/feature/EventDrag.js';\nexport { default as EventDragCreate } from '../lib/Scheduler/feature/EventDragCreate.js';\nexport { default as EventDragSelect } from '../lib/Scheduler/feature/EventDragSelect.js';\nexport { default as EventEdit } from '../lib/Scheduler/feature/EventEdit.js';\nexport { default as EventFilter } from '../lib/Scheduler/feature/EventFilter.js';\nexport { default as EventMenu } from '../lib/Scheduler/feature/EventMenu.js';\nexport { default as EventNonWorkingTime } from '../lib/Scheduler/feature/EventNonWorkingTime.js';\nexport { default as EventResize } from '../lib/Scheduler/feature/EventResize.js';\nexport { default as EventTooltip } from '../lib/Scheduler/feature/EventTooltip.js';\nexport { default as GroupSummary } from '../lib/Scheduler/feature/GroupSummary.js';\nexport { default as HeaderZoom } from '../lib/Scheduler/feature/HeaderZoom.js';\nexport { default as Labels } from '../lib/Scheduler/feature/Labels.js';\nexport { default as NonWorkingTime } from '../lib/Scheduler/feature/NonWorkingTime.js';\nexport { default as Pan } from '../lib/Scheduler/feature/Pan.js';\nexport { default as ResourceMenu } from '../lib/Scheduler/feature/ResourceMenu.js';\nexport { default as ResourceTimeRanges } from '../lib/Scheduler/feature/ResourceTimeRanges.js';\nexport { default as RowReorder } from '../lib/Scheduler/feature/RowReorder.js';\nexport { default as RowResize } from '../lib/Scheduler/feature/RowResize.js';\nexport { default as ScheduleContext } from '../lib/Scheduler/feature/ScheduleContext.js';\nexport { default as ScheduleMenu } from '../lib/Scheduler/feature/ScheduleMenu.js';\nexport { default as ScheduleTooltip } from '../lib/Scheduler/feature/ScheduleTooltip.js';\nexport { default as SimpleEventEdit } from '../lib/Scheduler/feature/SimpleEventEdit.js';\nexport { default as Split } from '../lib/Scheduler/feature/Split.js';\nexport { default as StickyEvents } from '../lib/Scheduler/feature/StickyEvents.js';\nexport { default as Summary } from '../lib/Scheduler/feature/Summary.js';\nexport { default as TimeAxisHeaderMenu } from '../lib/Scheduler/feature/TimeAxisHeaderMenu.js';\nexport { default as TimelineSummary } from '../lib/Scheduler/feature/TimelineSummary.js';\nexport { default as TimeRanges } from '../lib/Scheduler/feature/TimeRanges.js';\nexport { default as TimeSelection } from '../lib/Scheduler/feature/TimeSelection.js';\n// feature mixin\nexport { default as DependencyCreation } from '../lib/Scheduler/feature/mixin/DependencyCreation.js';\nexport { default as DependencyTooltip } from '../lib/Scheduler/feature/mixin/DependencyTooltip.js';\nexport { default as NonWorkingTimeMixin } from '../lib/Scheduler/feature/mixin/NonWorkingTimeMixin.js';\nexport { default as RecurringEventEdit } from '../lib/Scheduler/feature/mixin/RecurringEventEdit.js';\nexport { default as TaskEditStm } from '../lib/Scheduler/feature/mixin/TaskEditStm.js';\nexport { default as TaskEditTransactional } from '../lib/Scheduler/feature/mixin/TaskEditTransactional.js';\nexport { default as TransactionalFeature } from '../lib/Scheduler/feature/mixin/TransactionalFeature.js';\n// export\nexport { default as MultiPageExporter } from '../lib/Scheduler/feature/export/exporter/MultiPageExporter.js';\nexport { default as MultiPageVerticalExporter } from '../lib/Scheduler/feature/export/exporter/MultiPageVerticalExporter.js';\nexport { default as PdfExport } from '../lib/Scheduler/feature/export/PdfExport.js';\nexport { default as Print } from '../lib/Scheduler/feature/export/Print.js';\nexport { default as ScheduleRangeCombo } from '../lib/Scheduler/view/export/field/ScheduleRangeCombo.js';\nexport { default as SchedulerExportDialog } from '../lib/Scheduler/view/export/SchedulerExportDialog.js';\nexport { default as SinglePageExporter } from '../lib/Scheduler/feature/export/exporter/SinglePageExporter.js';\nexport { ScheduleRange } from '../lib/Scheduler/feature/export/Utils.js';\n// features experimental\nexport { default as ExcelExporter } from '../lib/Scheduler/feature/experimental/ExcelExporter.js';\n// model\nexport { default as AssignmentModel } from '../lib/Scheduler/model/AssignmentModel.js';\nexport { default as DependencyBaseModel } from '../lib/Scheduler/model/DependencyBaseModel.js';\nexport { default as DependencyModel } from '../lib/Scheduler/model/DependencyModel.js';\nexport { default as EventModel } from '../lib/Scheduler/model/EventModel.js';\nexport { default as ProjectModel } from '../lib/Scheduler/model/ProjectModel.js';\nexport { default as RecurrenceModel } from '../lib/Scheduler/model/RecurrenceModel.js';\nexport { default as ResourceModel } from '../lib/Scheduler/model/ResourceModel.js';\nexport { default as ResourceTimeRangeModel } from '../lib/Scheduler/model/ResourceTimeRangeModel.js';\nexport { default as TimeRangeModel } from '../lib/Scheduler/model/TimeRangeModel.js';\nexport { default as TimeSpan } from '../lib/Scheduler/model/TimeSpan.js';\n// model mixin\nexport { default as AssignmentModelMixin } from '../lib/Scheduler/model/mixin/AssignmentModelMixin.js';\nexport { default as EventModelMixin } from '../lib/Scheduler/model/mixin/EventModelMixin.js';\nexport { default as ProjectModelCommon } from '../lib/Scheduler/model/mixin/ProjectModelCommon.js';\nexport { default as ProjectModelMixin } from '../lib/Scheduler/model/mixin/ProjectModelMixin.js';\nexport { default as ProjectModelTimeZoneMixin } from '../lib/Scheduler/model/mixin/ProjectModelTimeZoneMixin.js';\nexport { default as RecurringTimeSpan } from '../lib/Scheduler/model/mixin/RecurringTimeSpan.js';\nexport { default as ResourceModelMixin } from '../lib/Scheduler/model/mixin/ResourceModelMixin.js';\nexport { default as TimeZonedDatesMixin } from '../lib/Scheduler/model/mixin/TimeZonedDatesMixin.js';\n// preset\nexport { default as PresetManager } from '../lib/Scheduler/preset/PresetManager.js';\nexport { default as PresetStore } from '../lib/Scheduler/preset/PresetStore.js';\nexport { default as ViewPreset } from '../lib/Scheduler/preset/ViewPreset.js';\n// tooltip\nexport { default as ClockTemplate } from '../lib/Scheduler/tooltip/ClockTemplate.js';\n// util\nexport { default as RectangularPathFinder } from '../lib/Scheduler/util/RectangularPathFinder.js';\nexport { default as ScheduleTableExporter } from '../lib/Scheduler/util/ScheduleTableExporter.js';\n//view\nexport { default as HorizontalTimeAxis } from '../lib/Scheduler/view/HorizontalTimeAxis.js';\nexport { default as TimeAxisSubGrid } from '../lib/Scheduler/view/TimeAxisSubGrid.js';\nexport { default as Scheduler } from '../lib/Scheduler/view/Scheduler.js';\nexport { default as SchedulerBase } from '../lib/Scheduler/view/SchedulerBase.js';\nexport { default as EventEditor } from '../lib/Scheduler/view/EventEditor.js';\nexport { default as TimeAxisViewModel } from '../lib/Scheduler/view/model/TimeAxisViewModel.js';\nexport { default as TimelineBase } from '../lib/Scheduler/view/TimelineBase.js';\nexport { default as ResourceHeader } from '../lib/Scheduler/view/ResourceHeader.js';\nexport { default as TimelineHistogramBase } from '../lib/Scheduler/view/TimelineHistogramBase.js';\nexport { default as TimelineHistogram } from '../lib/Scheduler/view/TimelineHistogram.js';\n//view mixin\nexport { default as DelayedRecordsRendering } from '../lib/Scheduler/view/mixin/DelayedRecordsRendering.js';\nexport { default as Describable } from '../lib/Scheduler/view/mixin/Describable.js';\nexport { default as EventNavigation } from '../lib/Scheduler/view/mixin/EventNavigation.js';\nexport { default as EventSelection } from '../lib/Scheduler/view/mixin/EventSelection.js';\nexport { default as RecurringEvents } from '../lib/Scheduler/view/mixin/RecurringEvents.js';\nexport { default as SchedulerDom } from '../lib/Scheduler/view/mixin/SchedulerDom.js';\nexport { default as SchedulerDomEvents } from '../lib/Scheduler/view/mixin/SchedulerDomEvents.js';\nexport { default as SchedulerEventRendering } from '../lib/Scheduler/view/mixin/SchedulerEventRendering.js';\nexport { default as SchedulerRegions } from '../lib/Scheduler/view/mixin/SchedulerRegions.js';\nexport { default as SchedulerResourceRendering } from '../lib/Scheduler/view/mixin/SchedulerResourceRendering.js';\nexport { default as SchedulerScroll } from '../lib/Scheduler/view/mixin/SchedulerScroll.js';\nexport { default as SchedulerState } from '../lib/Scheduler/view/mixin/SchedulerState.js';\nexport { default as SchedulerStores } from '../lib/Scheduler/view/mixin/SchedulerStores.js';\nexport { default as TimelineDateMapper } from '../lib/Scheduler/view/mixin/TimelineDateMapper.js';\nexport { default as TimelineDomEvents } from '../lib/Scheduler/view/mixin/TimelineDomEvents.js';\nexport { default as TimelineEventRendering } from '../lib/Scheduler/view/mixin/TimelineEventRendering.js';\nexport { default as TimelineHistogramGrouping } from '../lib/Scheduler/view/mixin/TimelineHistogramGrouping.js';\nexport { default as TimelineHistogramScaleColumn } from '../lib/Scheduler/view/mixin/TimelineHistogramScaleColumn.js';\nexport { default as TimelineScroll } from '../lib/Scheduler/view/mixin/TimelineScroll.js';\nexport { default as TimelineState } from '../lib/Scheduler/view/mixin/TimelineState.js';\nexport { default as TimelineViewPresets } from '../lib/Scheduler/view/mixin/TimelineViewPresets.js';\nexport { default as TimelineZoomable } from '../lib/Scheduler/view/mixin/TimelineZoomable.js';\nexport { default as TransactionalFeatureMixin } from '../lib/Scheduler/view/mixin/TransactionalFeatureMixin.js';\n// view orientation\nexport { default as HorizontalRendering } from '../lib/Scheduler/view/orientation/HorizontalRendering.js';\nexport { default as VerticalRendering } from '../lib/Scheduler/view/orientation/VerticalRendering.js';\n//view recurrence\nexport { default as RecurrenceCombo } from '../lib/Scheduler/view/recurrence/field/RecurrenceCombo.js';\nexport { default as RecurrenceConfirmationPopup } from '../lib/Scheduler/view/recurrence/RecurrenceConfirmationPopup.js';\nexport { default as RecurrenceDaysButtonGroup } from '../lib/Scheduler/view/recurrence/field/RecurrenceDaysButtonGroup.js';\nexport { default as RecurrenceDaysCombo } from '../lib/Scheduler/view/recurrence/field/RecurrenceDaysCombo.js';\nexport { default as RecurrenceEditor } from '../lib/Scheduler/view/recurrence/RecurrenceEditor.js';\nexport { default as RecurrenceEditorPanel } from '../lib/Scheduler/view/recurrence/RecurrenceEditorPanel.js';\nexport { default as RecurrenceFrequencyCombo } from '../lib/Scheduler/view/recurrence/field/RecurrenceFrequencyCombo.js';\nexport { default as RecurrenceLegendButton } from '../lib/Scheduler/view/recurrence/RecurrenceLegendButton.js';\nexport { default as RecurrenceMonthDaysButtonGroup } from '../lib/Scheduler/view/recurrence/field/RecurrenceMonthDaysButtonGroup.js';\nexport { default as RecurrenceMonthsButtonGroup } from '../lib/Scheduler/view/recurrence/field/RecurrenceMonthsButtonGroup.js';\nexport { default as RecurrencePositionsCombo } from '../lib/Scheduler/view/recurrence/field/RecurrencePositionsCombo.js';\nexport { default as RecurrenceStopConditionCombo } from '../lib/Scheduler/view/recurrence/field/RecurrenceStopConditionCombo.js';\n// widget\nexport { default as EventColorPicker } from '../lib/Scheduler/widget/EventColorPicker.js';\nexport { default as EventColorField } from '../lib/Scheduler/widget/EventColorField.js';\nexport { default as ProjectCombo } from '../lib/Scheduler/widget/ProjectCombo.js';\nexport { default as ResourceCombo } from '../lib/Scheduler/widget/ResourceCombo.js';\nexport { default as ResourceFilter } from '../lib/Scheduler/widget/ResourceFilter.js';\nexport { default as SchedulerDatePicker } from '../lib/Scheduler/widget/SchedulerDatePicker.js';\nexport { default as UndoRedo } from '../lib/Scheduler/widget/UndoRedo.js';\nexport { default as ViewPresetCombo } from '../lib/Scheduler/widget/ViewPresetCombo.js';\n\n\nimport GlobalEvents from '../lib/Core/GlobalEvents.js';\nimport BrowserHelper from '../lib/Core/helper/BrowserHelper.js';\nimport VersionHelper from '../lib/Core/helper/VersionHelper.js';\nimport Widget from '../lib/Core/widget/Widget.js';\nimport Toast from '../lib/Core/widget/Toast.js';\nimport Override from '../lib/Core/mixin/Override.js';\nimport DomHelper from '../lib/Core/helper/DomHelper.js';\nimport SchedulerBase from '../lib/Scheduler/view/SchedulerBase.js';\nimport HorizontalRendering from '../lib/Scheduler/view/orientation/HorizontalRendering.js';\nimport VerticalRendering from '../lib/Scheduler/view/orientation/VerticalRendering.js';\nimport Dependencies from '../lib/Scheduler/feature/Dependencies.js';\n(() => {\n    //region Common\n    const\n        HOSTS            = [\n            'bryntum.com',\n            'cdpn.io',\n            'react-gantt.com',\n            'vue-gantt.com',\n            'vue-scheduler.com',\n            'react-scheduler.com',\n            'angular-scheduler.com',\n            'angular-calendar.com',\n            'vue-calendar.com',\n            'react-calendar.com',\n            'lmctfy.net',\n            'bryntum-dev-ed.develop.lightning.force.com'\n        ],\n        ONE_DAY          = 1000 * 60 * 60 * 24,\n        EXPIRING_CLASSES = [],\n        location = (globalThis || self).location;\n    if (!VersionHelper.isTestEnv && (HOSTS.some(host => location.host.includes(host)) || /\\/docs/.test(location.href))) {\n        return;\n    }\n    let initialized;\n    function initExpiryHelper(owner, baseClass) {\n        if (!initialized) {\n            initialized = true;\n            ExpiryHelper.construct({\n                widget : owner\n            });\n        }\n        // do not remove this line (used to distinguish trial bundles by regexp)\n        owner.__foo = 'THISISTRIAL';\n    }\n    //endregion\n    //region ExpiryHelper\n    class ExpiryHelper {\n        static construct(config) {\n            const\n                me            = this,\n                product       = 'taskboard',\n                productName   = 'TaskBoard',\n                version       = VersionHelper.getVersion(product),\n                callHomeDelay = VersionHelper.isTestEnv ? 3000 : 1000 * 60,\n                blockUrl      = BrowserHelper.queryString.blockUrl;\n            Object.assign(me, {\n                version,\n                product,\n                Product          : productName,\n                verifyUrl        : VersionHelper.isTestEnv ? blockUrl : 'https://bryntum.com/verify/',\n                blocked          : false,\n                lastVersionCheck : 0,\n                trialKey         : `b-${product}-trial-start`,\n                versionCheckKey  : `b-${product}-verify-date`\n            }, config);\n            if (!VersionHelper.isTestEnv) {\n                console.log(`Bryntum ${productName} Trial Version`);\n            }\n            me.cacheTrialStartTime();\n            if (me.isExpired) {\n                if (document.readyState === 'complete') {\n                    me.onTrialExpired();\n                }\n                else {\n                    document.addEventListener('readystatechange', () => {\n                        if (document.readyState === 'complete') {\n                            me.onTrialExpired();\n                        }\n                    });\n                }\n            }\n            // Call home to log trial usage, assuming localStorage access works reliably\n            // 1 min delay to be less easily detected\n            setTimeout(() => {\n                me.updateBlockedStatus();\n            }, callHomeDelay);\n        }\n        static cacheTrialStartTime() {\n            const\n                me         = this,\n                timeString = BrowserHelper.getLocalStorageItem(me.trialKey),\n                time       = Number(timeString);\n            if (time && !isNaN(time)) {\n                me.trialStartTime = time;\n            }\n            me.trialStartTime = me.trialStartTime || Date.now();\n            // First trial access, or no localstorage (no local storage meaning our expiration mechanism won't work. Only remote blocking will end the trial)\n            BrowserHelper.setLocalStorageItem(me.trialKey, me.trialStartTime);\n        }\n        static get isExpired() {\n            return this.blocked || (Date.now() - this.trialStartTime > ONE_DAY * 45) || window.bryntum?.[this.product]?.expired;\n        }\n        static updateBlockedStatus() {\n            const\n                me                  = this,\n                saveVersionCheckKey = () => BrowserHelper.setLocalStorageItem(me.versionCheckKey, Date.now());\n            me.lastVersionCheck = me.lastVersionCheck || BrowserHelper.getLocalStorageItem(me.versionCheckKey) || 0;\n            // Max 1 version check per session / day\n            if (me.lastVersionCheck && Date.now() - me.lastVersionCheck < ONE_DAY) {\n                return;\n            }\n            if (me.verifyUrl) {\n                const\n                    url    = encodeURIComponent(location.href),\n                    logUrl = `${me.verifyUrl}?id=${window.bryntum.license}&url=${url}`,\n                    img    = new Image();\n                img.onload = () => {\n                    // 2x2 image means trial is blocked due to violation\n                    if (img.naturalWidth === 2) {\n                        me.blockTrial();\n                    }\n                    else {\n                        // Just in case\n                        saveVersionCheckKey();\n                    }\n                };\n                img.onerror = () => {\n                    saveVersionCheckKey();\n                };\n                img.src = logUrl;\n            }\n            else {\n                saveVersionCheckKey();\n            }\n        }\n        static onTrialExpired() {\n            const rootEl = this.widget.rootElement;\n            if (!this.expirationShown) {\n                this.expirationShown = true;\n                if (!VersionHelper.isTestEnv) {\n                    console.warn(`Bryntum ${this.Product} trial version expired. Purchase a license at https://bryntum.com/store or contact us at https://bryntum.com/contact/ for licensing options.`);\n                }\n                rootEl.floatRoot && Toast.show({\n                    html        : `Psst! Your Bryntum ${this.Product} trial has expired. Please see <a href=\"https://bryntum.com/store\">our store</a> for licensing options`,\n                    timeout     : 20000,\n                    rootElement : rootEl\n                });\n            }\n            DomHelper.removeEachSelector(rootEl, '.b-sch-dependency');\n            DomHelper.forEachSelector(rootEl, '.b-container', element => {\n                const widget = Widget.fromElement(element, 'widget');\n                if (EXPIRING_CLASSES.some(cls => widget instanceof cls)) {\n                    this.maskExpiredWidget(widget);\n                }\n            });\n        }\n        static blockTrial() {\n            this.blocked = true;\n            // Get rid of version check timestamp\n            BrowserHelper.removeLocalStorageItem(this.versionCheckKey);\n            // To force expired state: Set a fake early trial timestamp\n            BrowserHelper.setLocalStorageItem(this.trialKey, 1);\n            this.onTrialExpired();\n        }\n        static maskExpiredWidget(widget) {\n            widget.mask({\n                text  : '<h3 style=\"margin:0\">Trial expired, <a href=\"https://bryntum.com/store\" style=\"margin:0 3px; color:inherit\">click here</a> to buy a license.</h3>',\n                icon  : 'b-fa b-fa-frown',\n                type  : 'trial',\n                cover : 'target'\n            });\n        }\n        static setWaterMark(element, {\n            darkColor = 'rgba(255, 255, 255, 0.03)',\n            lightColor = 'rgba(240, 240, 240, 0.54)'\n        } = {}) {\n            // Used for thumbnails\n            if (BrowserHelper.queryString.thumb != null) {\n                return;\n            }\n            const\n                color     = DomHelper.themeInfo?.name?.toLowerCase().endsWith('-dark') ? darkColor : lightColor,\n                svgString = `\n                   <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"100%\" height=\"100%\" style=\"font-family:sans-serif;font-weight:900;fill:${color}\">\n                    <defs>\n                        <pattern id=\"company\" patternUnits=\"userSpaceOnUse\" width=\"400\" height=\"200\">\n                            <text y=\"30\" font-size=\"40\" id=\"name\">Bryntum</text>\n                            <text y=\"120\" x=\"200\" font-size=\"24\" id=\"trial\">Trial Version</text>\n                        </pattern>\n                        <pattern id=\"pattern\" xlink:href=\"#company\" patternTransform=\"rotate(-45)\">\n                            <use xlink:href=\"#name\" /><use xlink:href=\"#trial\" />\n                        </pattern>\n                    </defs>\n                    <rect width=\"100%\" height=\"100%\" fill=\"url(#pattern)\" />\n                </svg>`;\n            element.style.backgroundImage = `url('data:image/svg+xml;base64,${window.btoa(svgString)}')`;\n        };\n    }\n    //endregion\n    //region Common override\n    const applyBaseOverride = baseClass => {\n        EXPIRING_CLASSES.push(baseClass);\n        Override.apply(class {\n            static get target() {\n                return {\n                    class : baseClass\n                };\n            }\n            onPaintOverride() {\n                const\n                    me            = this,\n                    setWatermarks = () => {\n                        const targets = me.subGrids ? Object.values(me.subGrids) : [me];\n                        for (const target of targets) {\n                            if (target.element) {\n                                ExpiryHelper.setWaterMark(target.element);\n                            }\n                        }\n                    };\n                initExpiryHelper(me, baseClass);\n                setWatermarks();\n                // React to theme changes\n                GlobalEvents.on('theme', () => {\n                    setWatermarks();\n                });\n                if (ExpiryHelper.isExpired) {\n                    ExpiryHelper.maskExpiredWidget(me);\n                }\n            }\n        });\n    };\n    //endregion\n    if (typeof SchedulerBase !== 'undefined') {\n        applyBaseOverride(SchedulerBase);\n        // Disable rendering dependencies\n        Override.apply(class {\n            static get target() {\n                return {\n                    class : Dependencies\n                };\n            }\n            domSync() {\n                if (!ExpiryHelper.isExpired) {\n                    return this._overridden.domSync.apply(this, arguments);\n                }\n            }\n        });\n        Override.apply(class {\n            static get target() {\n                return {\n                    class : HorizontalRendering\n                };\n            }\n            onRenderDone() {\n                if (!ExpiryHelper.isExpired || this.scheduler?.isSchedulerPro) {\n                    return this._overridden.onRenderDone.apply(this, arguments);\n                }\n            }\n        });\n        Override.apply(class {\n            static get target() {\n                return {\n                    class : VerticalRendering\n                };\n            }\n            onRenderDone() {\n                if (!ExpiryHelper.isExpired || this.scheduler?.isSchedulerPro) {\n                    return this._overridden.onRenderDone.apply(this, arguments);\n                }\n            }\n        });\n    }\n})();\n(() => {\n    // do not load analytics code for specific domains\n    const ignoreDomainRe = /(.force.com|.lightning.com|.salesforce.com|lmctfy.net|qa.bryntum.com|qa2.bryntum.com)/;\n    // document location might be null in firefox in salesforce\n    if (!document.location || ignoreDomainRe.test(document.location.href) || window.top !== window) {\n        return;\n    }\n    let id;\n    const websiteUrls = [\n        'bryntum.com',\n        'cdpn.io'\n    ];\n    const\n        products   = ['calendar', 'grid', 'gantt', 'scheduler', 'schedulerpro', 'taskboard'],\n        frameworks = ['angular', 'react', 'vue', 'ionic'];\n    websiteUrls.splice(0, 0, ...products.map(prod => frameworks.map(framework => `${framework}-${prod}`)).concat('bryntum.com').flat());\n    if (document.location.host.match(websiteUrls.join('|'))) {\n        id = 'G-1VY6776VJP';\n    }\n    else {\n        id = 'G-H465KZDH8S';\n    }\n    const newScript = document.createElement('script');\n    newScript.onload = function() {\n        window.dataLayer = window.dataLayer || [];\n        function gtag() {\n            window.dataLayer.push(arguments);\n        }\n        gtag('js', new Date());\n        gtag('config', id);\n    };\n    document.head.appendChild(newScript);\n    newScript.src = 'https://www.googletagmanager.com/gtag/js?id=' + id;\n})();\n"],
  "mappings": "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",
  "names": ["EventColorColumn", "ColorColumn", "__publicField", "ColumnStore", "ResourceCollapseColumn", "Column", "record", "event", "EventDragSelect", "Delayable_default", "InstancePlugin", "client", "config", "me", "foregroundCanvas", "target", "button", "touches", "clientX", "clientY", "canvasRect", "Rectangle", "DomHelper", "EventHelper", "node", "el", "x", "y", "rect", "_a", "_b", "selectedAssignments", "navigator", "selectionRect", "eventRectangles", "selection", "r", "a", "assignmentData", "GridFeatureManager", "EventNonWorkingTime", "AttachToProjectMixin_default", "NonWorkingTimeMixin_default", "disable", "store", "timeRange", "minDate", "maxDate", "relativeTo", "rtl", "startPos", "DateHelper", "endPos", "size", "isRange", "translateX", "calendar", "cached", "eventRecord", "endMS", "startMS", "start", "end", "left", "top", "children", "isVertical", "domConfig", "eventStoreRefreshActions", "assignmentStoreRefreshActions", "GroupSummary", "scheduler", "row", "action", "records", "changes", "resources", "assignment", "oldResource", "affectedResources", "resourceStore", "resourceRecord", "footersToUpdate", "footer", "timeaxisCell", "column", "cls", "groupRecord", "groupField", "groupValue", "eventStore", "colCfg", "html", "eventsByTick", "resource", "tick", "idx", "groupEvents", "sumHtml", "cellElement", "count", "result", "activeTarget", "index", "tipHtml", "showTip", "element", "i", "label", "text", "Tooltip", "rowEl", "summaryElement", "HeaderZoom", "headerEl", "width", "startDate", "endDate", "Pan", "dragFeature", "enablePanOnEvents", "xScroller", "yScroller", "ResourceMenu", "ContextMenuBase", "resourceId", "items", "ResourceTimeRanges", "ResourceTimeRangesBase", "project", "ResourceTimeRangeStore", "crudManager", "resourceTimeRanges", "events", "timeRanges", "renderData", "eventContent", "value", "StringHelper", "RowResize", "context", "_c", "newHeight", "elementHeight", "originalBarMargin", "originalResourceMarginObject", "percentage", "SimpleEventEdit", "TaskEditStm_default", "eventElement", "stmCapture", "eventEdit", "editor", "Editor", "keyEvent", "assignmentRecord", "startScrollOptions", "endScrollOptions", "Split", "appendTo", "order", "options", "clientConfig", "ObjectHelper", "atDate", "atRecord", "bounds", "date", "isSplit", "splitFrom", "Summary", "TimelineSummary", "timeline", "timeAxis", "summaryContainer", "forResources", "valueHtml", "TimeSelection", "AbstractTimeRanges", "dateFormat", "height", "source", "timeAxisViewModel", "timeResolution", "resolutionDurationMS", "timeSpan", "Print", "PrintMixin_default", "PdfExport", "ScheduleTableExporter", "Localizable_default", "TableExporter", "args", "b", "col", "isScheduler", "SchedulerBase", "resourceColumns", "eventColumns", "columns", "rows", "minWidth", "defaultColumnWidth", "notAssignedEvents", "cells", "resourceCells", "eventCells", "ExcelExporter", "Scheduler", "isProjectConsumer", "w", "UndoRedo", "_UndoRedo", "UndoRedoBase", "ViewPresetCombo", "Combo", "widget", "Widget", "oldValue", "presets", "preset", "mainUnit", "defaultSpan", "beginningOf", "HOSTS", "EXPIRING_CLASSES", "location", "VersionHelper", "host", "initialized", "initExpiryHelper", "owner", "baseClass", "ExpiryHelper", "product", "productName", "version", "callHomeDelay", "blockUrl", "BrowserHelper", "timeString", "time", "saveVersionCheckKey", "url", "logUrl", "img", "rootEl", "Toast", "darkColor", "lightColor", "color", "svgString", "Override", "setWatermarks", "targets", "GlobalEvents_default", "Dependencies", "HorizontalRendering", "VerticalRendering", "ignoreDomainRe", "id", "websiteUrls", "products", "frameworks", "prod", "framework", "newScript", "gtag"]
}
