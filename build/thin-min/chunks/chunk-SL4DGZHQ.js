/*!
 *
 * Bryntum TaskBoard 5.6.2
 *
 * Copyright(c) 2023 Bryntum AB
 * https://bryntum.com/contact
 * https://bryntum.com/license
 *
 */
import{CopyPasteBase as b,GridBase as x,GridFeatureManager as p,Location as R}from"./chunk-GGOYEX2W.js";import{Delayable_default as S,InstancePlugin as v,__publicField as d}from"./chunk-MZVS5JQA.js";var y="store",g=class extends S(v){static get pluginConfig(){return{after:{bindStore:"bindStore",unbindStore:"unbindStore",renderRows:"syncAutoWidthColumns",onInternalResize:"onInternalResize"},assign:["columnAutoWidthPending","syncAutoWidthColumns"]}}construct(e){super.construct(e);const{store:t}=this.client;t&&this.bindStore(t)}doDestroy(){this.unbindStore(),super.doDestroy()}bindStore(e){this.lastSync=null,e.ion({name:y,[`change${this.client.asyncEventSuffix}`]:"onStoreChange",thisObj:this})}unbindStore(){this.detachListeners(y)}get columnAutoWidthPending(){return this.lastSync===null||this.hasTimeout("syncAutoWidthColumns")}onStoreChange({action:e}){if(e!=="move"){const t=this,{cellEdit:i}=t.client.features;++t.storeGeneration,i!=null&&i.isEditing&&!i.editingStoppedByTapOutside?t.syncAutoWidthColumns():t.client.refreshSuspended?t.client.rowManager.once("renderDone",()=>t.syncAutoWidthColumns()):t.setTimeout({fn:"syncAutoWidthColumns",delay:t.delay,cancelOutstanding:!0})}}onInternalResize(e,t,i,n){n===0&&(this.lastSync=null,this.syncAutoWidthColumns())}syncAutoWidthColumns(){const e=this,{client:t,storeGeneration:i}=e;if(!t.splitFrom){if(e.lastSync!==i){e.lastSync=i;let n,r;for(const s of t.columns.visibleColumns)n=s.autoWidth,n&&(n===!0&&(n=e.default),t.resizingColumns=r=!0,s.resizeToFitContent(n));r&&(t.resizingColumns=!1,t.afterColumnsResized())}e.hasTimeout("syncAutoWidthColumns")&&e.clearTimeout("syncAutoWidthColumns")}}};d(g,"$name","ColumnAutoWidth"),d(g,"configurable",{default:null,delay:0}),g.prototype.storeGeneration=0,g._$name="ColumnAutoWidth",p.registerFeature(g,!0);var T={cut:1,copy:1,paste:1},u=class extends b{constructor(){super(...arguments),d(this,"entityName","row")}construct(e,t){super.construct(e,t),e.rowManager.ion({beforeRenderRow:"onBeforeRenderRow",thisObj:this}),this.grid=e}onBeforeRenderRow({row:e,record:t}){var i;e.cls["b-cut-row"]=this.isCut&&((i=this.cutData)==null?void 0:i.includes(t))}isActionAvailable({actionName:e,event:t}){var i;const{grid:n}=this,{cellEdit:r}=n.features,{target:s}=t;if(T[e])return!this.disabled&&globalThis.getSelection().toString().length===0&&(!r||!r.isEditing)&&(e==="copy"||!this.copyOnly)&&((i=n.selectedRecords)==null?void 0:i.length)>0&&(!s||!!s.closest(".b-gridbase:not(.b-schedulerbase) .b-grid-subgrid,.b-grid-subgrid:not(.b-timeaxissubgrid)"))}async copy(){await this.copyRows()}async cut(){await this.copyRows(!0)}paste(e){return this.pasteRows(e!=null&&e.isModel?e:null)}async copyRows(e=!1){const{client:t,entityName:i}=this,n=this.selectedRecords.filter(r=>!r.readOnly||!e);!n.length||t.readOnly||(await this.writeToClipboard(n,e),t.trigger("copy",{records:n,isCut:e,entityName:i}))}setIsCut(e,t){var i;(i=this.grid.rowManager.getRowById(e))==null||i.toggleCls("b-cut-row",t),e.meta.isCut=t}handleCutData({source:e}){var t;e!==this&&((t=this.cutData)!=null&&t.length)&&this.grid.store.remove(this.cutData)}stringConverter(e){const{rowManager:t}=this.grid,i=e.flatMap(n=>{var r;return(r=t.getRowById(n))==null?void 0:r.cells.map(s=>new R(s))});return this.cellsToString(i.filter(n=>n))}async beforeCopy({data:e,isCut:t}){return await this.client.trigger("beforeCopy",{records:e,isCut:t,entityName:this.entityName})}async pasteRows(e){var t,i,n;const r=this,{client:s,isCut:o,entityName:a}=r,l=e||s.selectedRecord;if(s.readOnly||s.isTreeGrouped)return[];const c=await r.readFromClipboard({referenceRecord:l},!0),m=r.clipboardData===c;if(!Array.isArray(c)||!(c!=null&&c.length)||s.store.tree&&o&&c.some(w=>w.contains(l,!0)))return[];r.sortByIndex(c);const C={},h=r.extractParents(c,C,m);if(await r.insertCopiedRecords(h,l),!s.isDestroying)return o?await r.clearClipboard():s.selectedRecords=h,s.trigger("paste",{records:h,originalRecords:c,referenceRecord:l,isCut:o,entityName:a}),r.clipboard.triggerPaste(r),(n=(i=(t=s.getRowFor(h[h.length-1]))==null?void 0:t.cells)==null?void 0:i[0])==null||n.focus(),h}async beforePaste({referenceRecord:e,data:t,text:i,isCut:n}){const r=t!==i?t:[];return await this.client.trigger("beforePaste",{records:r,referenceRecord:e,isCut:n,entityName:this.entityName,data:t})}stringParser(e){return this.setFromStringData(e,!0).modifiedRecords}generateNewName(e){const t=e.getValue(this.nameField);let i=2;for(;this.client.store.findRecord(this.nameField,`${t} - ${i}`);)i++;return`${t} - ${i}`}insertCopiedRecords(e,t){const{store:i}=this.client,n=i.indexOf(t)+1;return i.tree?t.parent.insertChild(e,t.nextSibling,!1,{orderedBeforeNode:t.nextOrderedSibling}):i.insert(n,e)}get selectedRecords(){const e=[...this.client.selectedRecords];return this.client.selectedCells.forEach(t=>{e.includes(t.record)||e.push(t.record)}),e}getMenuItemText(e,t=!1){const i=this;let n=i[e+"RecordText"];return t&&(n+=` (${i.selectedRecords.length>1?i.rowSpecifierTextPlural:i.rowSpecifierText})`),n}populateCellMenu({record:e,items:t,cellSelector:i}){var n;const r=this,{client:s,rowOptionsOnCellContextMenu:o}=r,a=((n=s.features.cellCopyPaste)==null?void 0:n.enabled)===!0,l=a&&s.isCellSelected(i);!s.readOnly&&!s.isTreeGrouped&&(e==null?void 0:e.isSpecialRow)===!1&&(a?s.selectedRows.length:s.selectedRecords.length)&&(!l||r.rowOptionsOnCellContextMenu)&&(r.copyOnly||(t.cut={text:r.getMenuItemText("cut",l&&o),localeClass:r,icon:"b-icon b-icon-cut",weight:135,disabled:e.readOnly,onItem:()=>r.cut()},t.paste={text:r.getMenuItemText("paste",l&&o),localeClass:r,icon:"b-icon b-icon-paste",weight:140,onItem:()=>r.paste(e),disabled:r.hasClipboardData()===!1}),t.copy={text:r.getMenuItemText("copy",l&&o),localeClass:r,cls:"b-separator",icon:"b-icon b-icon-copy",weight:120,onItem:()=>r.copy()})}sortByIndex(e){const{store:t}=this.client;return e.sort((i,n)=>{const r=i.indexPath,s=n.indexPath;if(!e.includes(i.parent)&&!e.includes(n.parent))return t.indexOf(i)-t.indexOf(n);if(r.length===s.length){for(let o=0;o<r.length;o++){if(r[o]<s[o])return-1;if(r[o]>s[o])return 1}return 0}else return r.length-s.length})}extractParents(e,t,i=!0){const n=this,{store:r}=n.client;r.tree&&e.forEach(o=>{o.traverse(a=>{const l=a.getTopParent(!0);!e.includes(a)&&(!n.isCut||!e.some(c=>l.includes(c)))&&e.push(a)})});const s=e.reduce((o,a)=>{let l;const c=a.parentId||a.meta.modified;return n.isCut?(l=a,l.meta.isCut=!1):(l=a.copy(),i&&(l[n.nameField]=n.generateNewName(l)),l.data.expanded=a.isExpanded(n.client.store)),t[a.id]=l,a.parent===r.rootNode?o.push(l):c in t?t[c].appendChild(l,!0):o.push(l),o},[]);return s.forEach(o=>{o.sortOrderedChildren(!0,!0)}),s}};d(u,"$name","RowCopyPaste"),d(u,"type","rowCopyPaste"),d(u,"pluginConfig",{assign:["copyRows","pasteRows"],chain:["populateCellMenu"]}),d(u,"configurable",{nameField:"name",keyMap:{"Ctrl+C":{weight:10,handler:"copy"},"Ctrl+X":{weight:10,handler:"cut"},"Ctrl+V":{weight:10,handler:"paste"}},copyRecordText:"L{copyRecord}",cutRecordText:"L{cutRecord}",pasteRecordText:"L{pasteRecord}",rowSpecifierText:"L{row}",rowSpecifierTextPlural:"L{rows}",localizableProperties:["copyRecordText","cutRecordText","pasteRecordText","rowSpecifierText","rowSpecifierTextPlural"],rowOptionsOnCellContextMenu:!1}),u.featureClass="b-row-copypaste",u._$name="RowCopyPaste",p.registerFeature(u,!0,"Grid"),p.registerFeature(u,!1,"Gantt"),p.registerFeature(u,!1,"SchedulerPro"),p.registerFeature(u,!1,"ResourceHistogram");var f=class extends x{static get $name(){return"Grid"}static get type(){return"grid"}};f.initClass(),f._$name="Grid";export{g as ColumnAutoWidth,f as Grid,u as RowCopyPaste};
//# sourceMappingURL=chunk-SL4DGZHQ.js.map
