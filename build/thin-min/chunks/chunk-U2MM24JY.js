/*!
 *
 * Bryntum TaskBoard 5.6.2
 *
 * Copyright(c) 2023 Bryntum AB
 * https://bryntum.com/contact
 * https://bryntum.com/license
 *
 */
import{Column as _,ColumnStore as F,GridFeatureManager as B}from"./chunk-GGOYEX2W.js";import{NumberFormat as P}from"./chunk-6ZLMCHE5.js";import{Delayable_default as $,DomHelper as k,InstancePlugin as G,ObjectHelper as H,__publicField as m}from"./chunk-MZVS5JQA.js";var h=class extends _{static get defaults(){return{filterType:"number",format:""}}get defaultEditor(){const{format:e,name:t,max:r,min:l,step:a,largeStep:u,align:s}=this;return H.cleanupProperties({type:"numberfield",format:e,name:t,max:r,min:l,step:a,largeStep:u,textAlign:s})}get formatter(){const e=this,{format:t}=e;let r=e._formatter;return(!r||e._lastFormat!==t)&&(e._formatter=r=P.get(e._lastFormat=t)),r}formatValue(e){return e!=null&&(e=this.formatter.format(e),this.unit&&(e=`${e}${this.unit}`)),e!=null?e:""}defaultRenderer({value:e}){return this.formatValue(e)}};m(h,"type","number"),m(h,"fieldType","number"),m(h,"fields",["format","min","max","step","largeStep","unit"]),F.registerColumnType(h,!0),h.exposeProperties(),h._$name="NumberColumn";var M=!1,x=class extends _{static get defaults(){return{tree:!0,hideable:!1,minWidth:150}}static get fields(){return[{name:"expandIconCls",defaultValue:"b-icon b-icon-tree-expand"},{name:"collapseIconCls",defaultValue:"b-icon b-icon-tree-collapse"},{name:"collapsedFolderIconCls"},{name:"expandedFolderIconCls"},{name:"indentSize",defaultValue:1.7},{name:"leafIconCls",defaultValue:"b-icon b-icon-tree-leaf"},{name:"editTargetSelector",defaultValue:".b-tree-cell-value"},"renderer"]}constructor(e,t){super(...arguments);const r=this;r.shouldHtmlEncode=r.htmlEncode,r.setData("htmlEncode",!1),r.renderer&&(r.originalRenderer=r.renderer),r.renderer=r.treeRenderer.bind(r)}treeRenderer(e){var t,r,l,a,u,s;const i=this,{grid:o,cellElement:y,row:g,record:n,isExport:f}=e,N=n.instanceMeta(o.store),I=!n.isLeaf&&N.collapsed,T={className:"b-tree-cell-value"},v=[T],R={className:{"b-tree-cell-inner":1},tag:n.href?"a":"div",href:n.href,target:n.target,children:v};let A,w,{value:d}=e,p=i;const L=o.isTreeGrouped&&!n.isLeaf&&o.features.treeGroup.parentRenderer;if(i.originalRenderer||L){let c;L?(n.field&&(p=o.columns.get(n.field),d=p.isWidgetColumn?d:(r=(t=p.renderer||p.defaultRenderer)==null?void 0:t.call(p,{...e,column:p,value:n.name,isTreeGroup:!0}))!=null?r:n.name),c=o.features.treeGroup.parentRenderer({field:n.field,value:d,column:p,record:n.firstGroupChild,grid:o})):c=i.originalRenderer(e);const b=(l=o.hasFrameworkRenderer)==null?void 0:l.call(o,{cellContent:c,renderingColumn:p});A=typeof c=="object"&&!b,d=b?"":c===!1?y.innerHTML:c,e.rendererHtml=c}if(A||(d=String(d!=null?d:"")),f)return d;if(n.isLeaf)y.classList.add("b-tree-leaf-cell"),w=e.iconCls||n.iconCls||i.leafIconCls;else{const c=!n.isExpanded(o.store),b=c?i.expandIconCls:i.collapseIconCls,E=c?i.collapsedFolderIconCls:i.expandedFolderIconCls;y.classList.add("b-tree-parent-cell"),v.unshift({tag:"i",className:{"b-tree-expander":1,[b]:1,"b-empty-parent":!N.isLoadingChildren&&n.children!==!0&&!((a=n.children)!=null&&a.length)}}),M=w=e.iconCls||n.iconCls||E}if(w&&v.splice(v.length-1,0,{tag:"i",className:{"b-tree-icon":1,[w]:1}}),g.isRow&&!n.isLeaf)if(g.setAttribute("aria-expanded",!I),I)g.removeAttribute("aria-owns");else for(const c in o.subGrids){const b=g.elements[c];k.setAttributes(b,{"aria-owns":(u=n.children)!=null&&u.length?(s=n.children)==null?void 0:s.map(E=>`${o.id}-${c}-${E.id}`).join(" "):null})}Array.isArray(d)?T.children=d:A?Object.assign(T,d):p.shouldHtmlEncode||!d.includes("<")?(R.className["b-text-value"]=1,T.text=d):T.html=d;const S=n.childLevel*i.indentSize+(n.isLeaf?M?2:w?.5:.4:0);return R.style=`padding-inline-start:${S}em`,R}getCurrentConfig(e){const t=super.getCurrentConfig(e);return t.renderer=this.originalRenderer,t}};m(x,"$name","TreeColumn"),m(x,"type","tree"),F.registerColumnType(x,!0),x.exposeProperties(),x._$name="TreeColumn";var K=Promise.resolve(),C=class extends G.mixin($){static get pluginConfig(){return{assign:["collapseAll","expandAll","collapse","expand","expandTo","toggleCollapse"],chain:["onElementPointerUp","onElementClick","bindStore","beforeRenderRow"]}}construct(e,t){super.construct(e,t),this.treeColumn||console.info("To use the tree feature, one column should be configured with `type: 'tree'`"),e.store&&this.bindStore(e.store)}doDisable(e){if(e)throw new Error("Tree feature cannot be disabled")}get store(){return this.client.store}get treeColumn(){const e=this,{columns:t}=e.client;return(!e._treeColumn||!t.includes(e._treeColumn))&&(e._treeColumn=t.find(r=>r.isTreeColumn)),e._treeColumn}bindStore(e){this.detachListeners("store"),e.ion({name:"store",beforeLoadChildren:"onBeforeLoadChildren",loadChildren:"onLoadChildren",loadChildrenException:"onLoadChildrenException",beforeToggleNode:"onBeforeToggleNode",thisObj:this})}async toggleCollapse(e,t){if(e==null)throw new Error("Tree#toggleCollapse must be passed a record");const r=this,{store:l,client:a}=r,{rowManager:u}=a,s=l.getById(e),i=s.instanceMeta(l);if(s.generation++,await l.toggleCollapse(s,t)){const o=u.getRowFor(s);o&&s.ancestorsExpanded()&&o.render(null,null,!1),r.isTogglingNode||(a.element.classList.add("b-toggling-node"),r.isTogglingNode=!0,r.requestAnimationFrame(()=>{a.element.classList.remove("b-toggling-node"),r.isTogglingNode=!1})),a.trigger(i.collapsed?"collapseNode":"expandNode",{record:s}),a.trigger("toggleNode",{record:s,collapse:i.collapsed})}}async collapse(e){return this.toggleCollapse(e,!0)}async expand(e){return this.toggleCollapse(e,!1)}onBeforeToggleNode({record:e,collapse:t}){this.client.trigger("beforeToggleNode",{record:e,collapse:t})}onBeforeLoadChildren({source:e,params:t}){const r=e.getById(t[e.modelClass.idField]),l=this.client.rowManager.getRowFor(r);l==null||l.addCls("b-loading-children")}onLoadChildren({source:e,params:t}){const r=e.getById(t[e.modelClass.idField]),l=this.client.rowManager.getRowFor(r);l==null||l.removeCls("b-loading-children")}onLoadChildrenException({record:e}){const t=this.client.rowManager.getRowFor(e);t==null||t.removeCls("b-loading-children")}async expandOrCollapseAll(e=!0,t=this.store.rootNode){const{client:r,store:l}=this,{animateTreeNodeToggle:a}=r,u=[],s=[];return r.trigger("beforeToggleAllNodes",{collapse:e}),r.animateTreeNodeToggle=!1,l.suspendEvents(),l.traverse(i=>{const o=i.instanceMeta(l);i.isLeaf||(e&&!o.collapsed?(this.toggleCollapse(i,!0),s.push(...i.children)):!e&&o.collapsed&&(Array.isArray(i.children)&&s.push(...i.children),u.push(this.toggleCollapse(i,!1))))},t,t===l.rootNode),l.resumeEvents(),(e?K:Promise.all(u)).then(()=>{r.refreshRows(e),s.length&&(e?l.trigger("remove",{records:s,isCollapse:!0,isCollapseAll:!0}):l.trigger("add",{records:s,isExpand:!0,isExpandAll:!0})),r.trigger("toggleAllNodes",{collapse:e}),r.animateTreeNodeToggle=a})}async collapseAll(){return this.expandOrCollapseAll(!0)}async expandAll(){return this.expandOrCollapseAll(!1)}async expandTo(e,t=!0){var r,l,a,u;const s=this,{store:i,client:o}=s,{animateTreeNodeToggle:y}=o;if(Array.isArray(e)){if(e.length>0){o.suspendRefresh();for(let n=e.length-1;n>=0;n--){const f=i.getById(e[n]);n===0&&((r=o.resumeRefresh)==null||r.call(o),o.rowManager.refresh()),await((l=s.expandTo)==null?void 0:l.call(s,f,n===0))}}return}const g=i.getById(e);if(g.instanceMeta(s.store).hiddenByCollapse!==!1){if(o.animateTreeNodeToggle=!1,!g.ancestorsExpanded()){const n=[];for(let f=g.parent;f&&!f.isRoot;f=f.parent)f.isExpanded(i)||n.unshift(f);o.suspendRefresh();for(const f of n)s.isDestroyed||await s.toggleCollapse(f,!1);(a=o.resumeRefresh)==null||a.call(o),(u=o.refreshRows)==null||u.call(o)}o.animateTreeNodeToggle=y,!s.isDestroyed&&t&&await o.scrollRowIntoView(g)}}onElementPointerUp(e){const t=this,r=e.target,l=t.client.getCellDataFromEvent(e);(r.closest(".b-tree-expander")||t.expandOnCellClick&&(l!=null&&l.record.isParent))&&t.toggleCollapse(l.record)}onElementClick(e){e.target.closest(".b-tree-expander")&&e.preventDefault()}toggleCollapseByKey(){const{focusedCell:e}=this.client;return(e==null?void 0:e.rowIndex)>-1&&!e.isActionable?(this.toggleCollapse(e.id),!0):!1}beforeRenderRow({record:e,cls:t}){if(e.isLeaf)t["b-tree-parent-row"]=0,t["b-tree-collapsed"]=0,t["b-tree-expanded"]=0,t["b-loading-children"]=0;else{const r=!e.isExpanded(this.client.store);t["b-tree-parent-row"]=1,t["b-tree-collapsed"]=r,t["b-tree-expanded"]=!r,t["b-loading-children"]=e.instanceMeta(this.client).isLoadingChildren}}expandIfSingleColumn(){return this.client.columns.count===1?this.expandByKey():!1}expandByKey(){const e=this,{client:t}=e,{focusedCell:r}=t,l=r==null?void 0:r.record;return l&&(r!=null&&r.column.tree)&&l.isParent&&l.instanceMeta(t.store).collapsed?(e.expand(l),!0):!1}collapseIfSingleColumn(){return this.client.columns.count===1?this.collapseByKey():!1}collapseByKey(){const e=this,{client:t}=e,{focusedCell:r}=t,l=r==null?void 0:r.record;if(r!=null&&r.column.tree&&l){if(l.isParent&&!l.instanceMeta(t.store).collapsed)return e.collapse(l),!0;if(l.parent&&!l.parent.isRoot)return t.deselectAll(),t.focusCell({record:l.parent,column:r.column}),!0}return!1}};m(C,"$name","Tree"),m(C,"configurable",{expandOnCellClick:!1,keyMap:{" ":"toggleCollapseByKey",ArrowRight:"expandIfSingleColumn","Shift+ArrowRight":"expandByKey",ArrowLeft:"collapseIfSingleColumn","Shift+ArrowLeft":"collapseByKey"}}),C.featureClass="b-tree",C._$name="Tree",B.registerFeature(C,!1,"Grid"),B.registerFeature(C,!0,"TreeGrid");export{h as NumberColumn,C as Tree,x as TreeColumn};
//# sourceMappingURL=chunk-U2MM24JY.js.map
