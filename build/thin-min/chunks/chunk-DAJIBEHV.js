/*!
 *
 * Bryntum TaskBoard 5.6.2
 *
 * Copyright(c) 2023 Bryntum AB
 * https://bryntum.com/contact
 * https://bryntum.com/license
 *
 */
import{DomSync as z,Objects as k,StringHelper as A,Tooltip as H,Widget as D,__publicField as w}from"./chunk-MZVS5JQA.js";var v="http://www.w3.org/2000/svg",j={bar:1,outline:2,text:3},F=(t,e)=>parseInt(t.order,10)-parseInt(e.order,10),O=(t,e)=>parseInt(t.dataset.order,10)-parseInt(e.dataset.order,10),I=t=>t.field,P=()=>!1,W=/\s+/,$=class extends D{static get configurable(){return{data:null,values:null,series:null,topValue:null,element:{children:[{ns:v,tag:"svg",reference:"svgElement",width:"100%",height:"100%",preserveAspectRatio:"none",children:[{ns:v,tag:"g",reference:"scaledSvgGroup"},{ns:v,tag:"g",reference:"unscaledSvgGroup"}]}]},omitZeroHeightBars:!1,singleTextForAllBars:!0,monitorResize:!0,getRectClass(t,e,s,a){return""},getOutlineClass(t,e){return""},getBarTip(t,e,s,a){},getBarText(t,e,s){return""},getRectConfig:null,getBarTextRenderData(t,e,s,a){return t},getBarTextTip(t,e,s,a){}}}construct(t){const e=this;super.construct(t),e.scheduleRefresh=e.createOnFrame(e.refresh,[],e,!0),e.refresh()}set tip(t){var e;const s=this;(e=s.tip)==null||e.destroy(),t?s._tip=H.new({owner:s,forElement:s.svgElement,forSelector:"rect",internalListeners:{beforeShow:"up.onBeforeTipShow"}},t):s._tip=null}onElementResize(){super.onElementResize(...arguments);const t=this.svgElement.getBoundingClientRect();this.scaledSvgGroup.setAttribute("transform",`scale(${t.width} ${t.height})`)}onBeforeTipShow({source:t}){const e=parseInt(t.activeTarget.dataset.index);t.html=t.contentTemplate({histogram:this,index:e})}updateSeries(t){const e=this,s=e._series={};let a=0,l=0;for(const n in t)if(t[n]!==!1){const r=s[n]=k.merge({},t[n]);r.field||(r.field=n),r.type||(r.type="bar"),"order"in r||(r.order=j[r.type]*10+a),"index"in r||(r.index=a),r.type==="bar"&&(r.index=l++),r.id=n,a++}!e.topValue&&e._data&&(e.topValue=e.getDataTopValue(e._data)),e.refreshSuspended||e.scheduleRefresh()}getDataTopValue(t,e){const s=Object.values(e||this.series).map(I);let a=0,l;for(let n=0,{length:r}=t;n<r;n++){l=t[n];for(let i=0,{length:d}=s;i<d;i++)a=Math.max(a,l[s[i]])}return a}updateData(t){const e=this;e._data=t,!e.topValue&&e._data&&e._series&&(e.topValue=e.getDataTopValue(t)),e.refreshSuspended||e.scheduleRefresh()}updateTopValue(t){const e=this;e._topValue=t,!t&&e._data&&(e._topValue=e.getDataTopValue(e._data)),e.refreshSuspended||e.scheduleRefresh()}scheduleRefresh(){}suspendRefresh(){this.refreshSuspended++}resumeRefresh(){this.refreshSuspended&&this.refreshSuspended--}refresh(t){const e=this,{series:s,_tip:a,topValue:l,singleTextForAllBars:n}=e,r=(t==null?void 0:t.args)||[],i=[],d=[];if(s){for(const o of Object.values(s).sort(F)){const u=e[`draw${A.capitalize(o.type)}`](o,...r);Array.isArray(u)?i.push.apply(i,u):i.push(u),!n&&o.type==="bar"&&d.push(...e.drawText(o,...r))}i.sort(O),n?d.push(...e.drawText(null,...r)):d.sort(O),z.sync({domConfig:{width:"100%",height:"100%",preserveAspectRatio:"none",dataset:{topValue:l},children:[{ns:v,tag:"g",reference:"scaledSvgGroup",children:i},{ns:v,tag:"g",reference:"unscaledSvgGroup",children:d}]},configEquality:P,targetElement:e.svgElement}),a&&a.isVisible&&e.onBeforeTipShow({source:a})}}drawBar(t,...e){const s=this,{topValue:a,data:l,omitZeroHeightBars:n,barStyle:r}=s,{field:i,order:d,stretch:o}=t,{length:u}=l,b=1/u,h=[],g=A.createId(t.id),c=t.index,p=o?1:void 0;let S;for(let m=0,C=0,{length:G}=l;m<G;m++,C+=S){const x=l[m];let f=x.rectConfig={ns:v,tag:"rect",dataset:{}};const y=x[i],_=y?p||x.height||(y>a?a:y)/a:0,L=1-_,B=s.callback("getBarTip",s,[t,f,x,m,...e]);S=x.width||b,r?f.style=r:delete f.style,Object.assign(f.dataset,{index:m,order:d,series:g});const E={[`b-series-${g}`]:1,[`b-series-index-${c}`]:1},V=s.callback("getRectClass",s,[t,f,x,m,...e]);V&&V.split(W).forEach(M=>E[M]=1),Object.assign(f,{x:C,y:L,width:S,height:_,class:E}),B?f.dataset.btip=B:delete f.dataset.btip,s.getRectConfig&&(f=s.getRectConfig(f,x,m,t,...e)),f&&(f.height||!n)&&h.push(f)}return h}changeGetRectConfig(t){return t?this.bindCallback(t):null}drawOutline(t,...e){const s=this,{topValue:a,data:l}=s,{field:n,order:r,id:i}=t,d=1/l.length,o=["M 0,1"],u={ns:v,tag:"path",dataset:{order:r,id:i}};let b,h="M",g="L";for(let c=0,p=0,{length:S}=l;c<S;c++){const m=1-l[c][n]/a;b=l[c].width||d,o.push(`${h} ${p},${m} ${g} ${p+=b},${m}`),h=g=""}return u.class=`b-series-${t.id} b-series-index-${t.index} `+s.callback("getOutlineClass",s,[t,l,...e]),u.d=o.join(" "),u}drawText(t,...e){const s=this,{data:a}=s,l=1/a.length,n="100%",r=[];for(let i=0,d,o=0,{length:u}=a;i<u;i++,o+=d){d=a[i].width||l;const b=s.callback("getBarText",s,[a[i],i,t,...e]);if(b){const h=s.callback("getBarTextRenderData",s,[{ns:v,tag:"text",className:"b-bar-legend",html:b,left:o,width:d,x:`${(o+d/2)*100}%`,y:a[i].y!==void 0?a[i].y:n,dataset:{index:i,series:t}},a[i],i,t,...e]),g=s.callback("getBarTextTip",s,[h,a[i],i,t,...e]);g?h.dataset.btip=g:delete h.dataset.btip,r.push(h)}}return r}};w($,"type","histogram"),w($,"$name","Histogram"),w($,"properties",{refreshSuspended:0}),$.initClass(),$._$name="Histogram";var R="http://www.w3.org/2000/svg",T=class extends D{static get configurable(){return{scalePoints:null,scaleMaxPadding:.1,horizontal:!1,align:{value:!1,$config:{merge:"replace"}},element:{children:[{ns:R,tag:"svg",reference:"svgElement",width:"100%",height:"100%",preserveAspectRatio:"none",children:[{ns:R,tag:"g",reference:"scaledSvgGroup",children:[{ns:R,tag:"path",reference:"pathElement"}]},{ns:R,tag:"g",reference:"unscaledSvgGroup"}]}]},monitorResize:!0}}construct(t){super.construct(t),this.scheduleRefresh=this.createOnFrame(this.refresh,[],this,!0),this.refresh()}changeAlign(t){return t||(t=this.horizontal?"bottom":"right"),t}updateAlign(t,e){this.element.classList.remove(`b-align-${e}`),this.element.classList.add(`b-align-${t}`)}updateHorizontal(t,e){this.element.classList.remove(`b-scale-${e?"horizontal":"vertical"}`),this.element.classList.add(`b-scale-${t?"horizontal":"vertical"}`)}onElementResize(){super.onElementResize(...arguments),this.scheduleRefresh()}scheduleRefresh(){}refresh(){var t;if(!this.scalePoints)return;const e=this,{horizontal:s,width:a,height:l,align:n,scalePoints:r,scaleMaxPadding:i}=e,d=(t=r[r.length-1])==null?void 0:t.value,o=[],u=[],b=1/(d+i*d);e.scaledSvgGroup.setAttribute("transform",`scale(${s?a:1} ${s?1:l})`);for(const h of r){const g=!!h.text,c=b*h.value;if(g){const p={ns:R,tag:"text",className:"b-scale-tick-label",html:h.text,dataset:{tick:h.value}};s?(p.x=`${c*100}%`,p.y=n==="top"?"1.6em":l-12):(p.x=n==="left"?"12":`${a-12}`,p.y=`${(1-c)*100}%`),u.push(p)}s?n==="top"?o.push(`M${c},0 L${c},${g?10:5}`):o.push(`M${c},${l} L${c},${l-(g?10:5)}`):n==="left"?o.push(`M0,${1-c} L${g?10:5},${1-c}`):o.push(`M${a},${1-c} L${a-(g?10:5)},${1-c}`)}e.pathElement.setAttribute("d",o.join("")),z.syncChildren({domConfig:{children:u}},e.unscaledSvgGroup)}};w(T,"$name","Scale"),w(T,"type","scale"),T.initClass(),T._$name="Scale";export{$ as Histogram,T as Scale};
//# sourceMappingURL=chunk-DAJIBEHV.js.map
