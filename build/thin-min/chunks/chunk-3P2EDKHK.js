/*!
 *
 * Bryntum TaskBoard 5.6.2
 *
 * Copyright(c) 2023 Bryntum AB
 * https://bryntum.com/contact
 * https://bryntum.com/license
 *
 */
import{GridFeatureManager as c}from"./chunk-GGOYEX2W.js";import{FunctionHelper as g,InstancePlugin as m,ObjectHelper as h,__publicField as u}from"./chunk-MZVS5JQA.js";var n=class extends m{construct(e,i){if(this.treeColumn=e.columns.find(r=>r.isTreeColumn),super.construct(e,i),this._levels=this._levels||[],!e.hasFeature("tree"))throw new Error("The TreeGroup feature requires the Tree feature to be enabled")}applyPluginConfig(){return this.scheduleRefreshGroups=g.createBuffered(this.refreshGroups,this.refreshGroupsTimeout,this),super.applyPluginConfig(...arguments)}processParentData(e){const i=this;i.parentCls&&(e.cls=i.parentCls)}processTransformedData(e){}async waitForReadiness(){var e;const i=this;if(i.originalStore.isLoading&&(await i.originalStore.await("load",!1),i.isDestroyed))return;const{crudManager:r}=this.client;if(r){if((r.isLoadingOrSyncing||r._autoLoadPromise)&&await r.await("requestDone"),i.isDestroyed)return;await((e=i.client.project)==null?void 0:e.commitAsync())}}async applyLevels(e){var i;const r=this,{client:a,treeColumn:s}=r;let{store:t}=a,l=null,d;const{modelClass:p}=t;if(s!=null&&s.field&&p.getFieldDefinition(s.field)&&(d=p.getFieldDataSource(s.field)),e=e||[],!(e.length===0&&r.isConfiguring)&&(r._levels=e,r.isApplying++,a.suspendRefresh(),r.originalStore||(r.originalStore=t,t=new t.constructor({reapplyFilterOnAdd:!0,reapplyFilterOnUpdate:!0,tree:!0,modelClass:t.modelClass,load:(i=t.load)==null?void 0:i.bind(t),commit:t.commit.bind(t)}),a.store=t,r.originalStore.ion({name:"originalStore",refresh:r.onOriginalStoreRefresh,add:r.onOriginalStoreChanged,remove:r.onOriginalStoreChanged,removeAll:r.onOriginalStoreChanged,thisObj:r})),await r.waitForReadiness(),!r.isDestroyed)){if(e.length>0){const f=r.originalStore.getAllDataRecords(!1).flatMap(o=>o.isLeaf?o.link():[]);f.forEach(o=>o.setInstanceMeta(t.id,{collapsed:!1})),t.data=f,l=t.treeify(e,o=>{d&&h.setPath(o,d,o.key),r.processParentData(o)}),r.processTransformedData(l),await r.trigger("beforeDataLoad",{store:t,data:l.children}),t.data=l.children}else a.store=r.originalStore,r.detachListeners("originalStore"),r.originalStore=null;r.isApplying--,a.resumeRefresh(!1),a.isPainted&&a.renderRows(!1),a.trigger("treeGroupChange",{levels:e})}}doDisable(e){e&&this.clearGroups(),super.doDisable(e)}onOriginalStoreChanged(){this.scheduleRefreshGroups()}onOriginalStoreRefresh({action:e}){(e==="dataset"||e==="filter")&&this.scheduleRefreshGroups()}updateLevels(e,i){const r=this,{client:a}=r;r.hideGroupedColumns&&(i==null||i.forEach(s=>{s=s.fieldName||s,e.some(t=>(t.fieldName||t)===s)||a.columns.get(s).show()}),e==null||e.forEach(s=>{s=s.fieldName||s,(!i||!i.some(t=>t.fieldName===s))&&(a._suspendRenderContentsOnColumnsChanged=!0,a.columns.get(s).hide(),a._suspendRenderContentsOnColumnsChanged=!1)})),(e||!r.isConfiguring)&&(r.updatePromise=r.applyLevels(e),a.renderContents())}async group(e){h.assertArray(e,"group()"),await this.applyLevels(e)}async clearGroups(){this.isGrouped&&(this.levels=[],await this.updatePromise)}refreshGroups(){var e;return(e=this.applyLevels)==null?void 0:e.call(this,this._levels)}get isGrouped(){return this._levels.length>0}populateHeaderMenu({column:e,items:i}){const r=this,a=e.groupable!==!1&&!e.isTreeColumn;let s=!1;a&&!r.isGroupedByField(e.field)&&(i.groupAsc={text:"L{group}",localeClass:r,icon:"b-fw-icon b-icon-group-asc",separator:!0,weight:400,disabled:r.disabled,onItem:()=>r.addGrouper(e)},s=!0),r.isGrouped&&(r.isGroupedByField(e.field)&&(i.groupRemove={text:"L{stopGroupingThisColumn}",localeClass:r,icon:"b-fw-icon b-icon-clear",separator:!s,weight:420,disabled:r.disabled,onItem:()=>r.removeGrouper(e)},s=!0),i.groupRemoveAll={text:"L{stopGrouping}",localeClass:r,icon:"b-fw-icon b-icon-clear",separator:!s,weight:420,disabled:r.disabled,onItem:()=>r.clearGroups()})}addGrouper(e){this.levels=this.levels.concat(e.field)}isGroupedByField(e){return this.levels.find(i=>i.fieldName===e)}removeGrouper(e){this.levels.splice(this.levels.findIndex(i=>i.fieldName===e.field),1),this.levels=this.levels.slice()}};u(n,"$name","TreeGroup"),u(n,"configurable",{levels:[],parentCls:"b-generated-parent",parentRenderer:null,hideGroupedColumns:null,refreshGroupsTimeout:100}),u(n,"pluginConfig",{chain:["populateHeaderMenu"],assign:["group","clearGroups","refreshGroups"]}),u(n,"properties",{isApplying:0,originalStore:null}),n._$name="TreeGroup",c.registerFeature(n);export{n as TreeGroup};
//# sourceMappingURL=chunk-3P2EDKHK.js.map
